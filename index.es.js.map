{"version":3,"file":"index.es.js","sources":["../../node_modules/svelte/internal/index.mjs","../src/context.ts","../../node_modules/style-inject/dist/style-inject.es.js","../src/components/FloatingBtn.svelte","../../node_modules/svelte/store/index.mjs","../src/stores/snapshots.ts","../src/tabs/TabsMenu.svelte","../../node_modules/html/lib/html.js","../../node_modules/jsondiffpatch/dist/jsondiffpatch.umd.js","../src/history-and-diff/diff.ts","../src/history-and-diff/transaction.ts","../src/history-and-diff/createHistoryEntry.ts","../src/stores/stateHistory.ts","../src/tabs/state/selection.ts","../../node_modules/svelte-tree-view/package/tree-utils.js","../../node_modules/svelte-tree-view/package/stores/props.js","../../node_modules/svelte-tree-view/package/stores/tree.js","../../node_modules/svelte-tree-view/package/TreeViewNode.svelte","../../node_modules/svelte-tree-view/package/TreeView.svelte","../../node_modules/svelte-tree-view/package/stores/root-element.js","../src/tabs/SplitView.svelte","../src/components/Button.svelte","../src/tabs/state/StateTab.svelte","../src/tabs/state/getActiveMarks.ts","../src/tabs/history/mapDeltas.ts","../src/tabs/history/HistoryList.svelte","../src/tabs/history/DiffValue.svelte","../src/tabs/history/HistoryTab.svelte","../src/tabs/List.svelte","../src/tabs/PluginsTab.svelte","../src/tabs/SchemaTab.svelte","../src/tabs/structure/DocNode.svelte","../src/tabs/structure/colors.ts","../src/tabs/structure/DocView.svelte","../src/tabs/structure/StructureTab.svelte","../src/tabs/snapshots/SnapshotsList.svelte","../src/tabs/snapshots/SnapshotsTab.svelte","../src/components/FloatingDock.svelte","../src/components/DevTools.svelte","../src/history-and-diff/subscribeToTransactions.ts","../src/index.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = append_empty_stylesheet(node).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.44.0' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","import { EditorView } from 'prosemirror-view'\nimport type { Node as PMNode } from 'prosemirror-model'\nimport { getContext as getCtx, setContext as setCtx } from 'svelte'\n\nimport { buildColors } from './tabs/structure/colors'\n\nexport type Contexts = {\n  'editor-view': {\n    view: EditorView\n  }\n  'doc-view': {\n    selected: {\n      type: string\n      start: number\n      end: number\n    }\n    colors: ReturnType<typeof buildColors>\n    handleNodeClick: (n: PMNode) => void\n  }\n}\n\nexport function setContext<K extends keyof Contexts>(ctx: K, val: Contexts[K]) {\n  return setCtx(ctx, val)\n}\n\nexport function getContext<K extends keyof Contexts>(ctx: K) {\n  return getCtx(ctx) as Contexts[K]\n}\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","<script lang=\"ts\">\n  import type { ButtonPosition } from '../types'\n\n  export let buttonPosition: ButtonPosition\n</script>\n\n<button class={`floating-btn ${buttonPosition}`} on:click>\n  <svg\n    width=\"530\"\n    height=\"530\"\n    viewBox=\"0 0 530 530\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n  >\n    <title>prosemirror</title>\n    <desc>Created using Figma</desc>\n    <use xlink:href=\"#a\" transform=\"matrix(2 0 0 2 118 116)\" fill=\"#FFF\" />\n    <use xlink:href=\"#b\" transform=\"rotate(16 59.054 420.192) scale(2)\" fill=\"#FFF\" />\n    <use xlink:href=\"#c\" transform=\"matrix(2 0 0 2 154.024 141.58)\" fill=\"#363755\" />\n    <use xlink:href=\"#d\" transform=\"matrix(2 0 0 2 220 334.8)\" fill=\"#FFF\" />\n    <use xlink:href=\"#e\" transform=\"matrix(2 0 0 2 218.826 262.052)\" fill=\"#363755\" />\n    <use xlink:href=\"#f\" transform=\"matrix(2 0 0 2 197.108 184.998)\" fill=\"#FFF\" />\n    <use xlink:href=\"#g\" transform=\"matrix(2 0 0 2 221.8 216)\" fill=\"#363755\" />\n    <defs>\n      <path\n        id=\"a\"\n        d=\"M73.5 0C32.859 0 0 32.859 0 73.5S32.859 147 73.5 147 147 114.141 147 73.5 114.069 0 73.5\n        0z\"\n      />\n      <path\n        id=\"b\"\n        d=\"M193.601 107.116c0-13.376 8.238-23.91\n        20.619-31.153-2.244-7.447-5.19-14.6-8.824-21.32-13.886\n        3.633-25.12-1.799-34.568-11.26-9.449-9.437-12.344-20.672-8.709-34.571A111.362 111.362 0 0 0\n        140.799 0c-7.243 12.37-20.339 20.594-33.689 20.594-13.363\n        0-26.446-8.225-33.701-20.594A110.888 110.888 0 0 0 52.1 8.812c3.634 13.9.753 25.134-8.721\n        34.57-9.436 9.462-20.67 14.894-34.569 11.26A112.178 112.178 0 0 0 0 75.963c12.369 7.243\n        20.593 17.777 20.593 31.153 0 13.352-8.224 26.448-20.593 33.704a113.338 113.338 0 0 0 8.811\n        21.321c13.899-3.634 25.133-.752 34.569 8.697 9.448 9.462 12.355 20.696 8.721 34.57a112.653\n        112.653 0 0 0 21.32 8.837c7.243-12.407 20.338-20.619 33.702-20.619 13.35 0 26.446 8.225\n        33.701 20.619a114.22 114.22 0 0 0 21.32-8.837c-3.634-13.874-.752-25.108 8.709-34.57\n        9.449-9.437 20.683-14.869 34.569-11.26a112.343 112.343 0 0 0\n        8.823-21.321c-12.406-7.256-20.644-17.789-20.644-31.141zm-86.491 46.57c-25.732\n        0-46.58-20.849-46.58-46.57 0-25.733 20.86-46.595 46.58-46.595 25.732 0 46.567 20.875 46.567\n        46.595 0 25.734-20.835 46.57-46.567 46.57z\"\n      />\n      <path\n        id=\"c\"\n        d=\"M98.088 49.91c-6.9 83.9 10.8 103.401 10.8 103.401s-55.1\n        5.499-82.7-13.401c-30.5-20.9-26-67.5-25.9-94.6.1-28.4 25.6-45.8 49.9-45.3 29.1.5 50.2 21.6\n        47.9 49.9z\"\n      />\n      <path\n        id=\"d\"\n        d=\"M.1.1c12.2 33.3 22.5 42.7 40 55.2 25.3 18 36.6 17.5 76.3 41C78.1 60.3 30.8 45.7 0 0l.1.1z\"\n      />\n      <path\n        id=\"e\"\n        d=\"M.687 36.474c3 13.3 17.9 29.9 30.4 41.6 24.8 23.2 42 22.4 86\n        54.7-18.2-51.8-18.8-62-43.5-106.1-24.7-44-67.6-20.3-67.6-20.3s-8.4 16.6-5.3 29.9v.2z\"\n      />\n      <path\n        id=\"f\"\n        d=\"M38.346 11.5s-4-11.6-18-11.5c-30 .2-28.8 52.1 16.9 52 39.6-.1 39.2-49.4\n        16.1-49.6-10.2-.2-15 9.1-15 9.1z\"\n      />\n      <path\n        id=\"g\"\n        d=\"M26.5 15c10.8 0 2 14.9-.6 20.9-1.8-8.4-10.2-20.9.6-20.9zM10.2.1C4.6.1 0 4.6 0 10.3c0 5.6\n        4.5 10.2 10.2 10.2 5.6 0 10.2-4.5 10.2-10.2C20.4 4.7 15.9.1 10.2.1zM40.7 0c-4.8 0-8.8\n        4.5-8.8 10.2 0 5.6 3.9 10.2 8.8 10.2 4.8 0 8.8-4.5 8.8-10.2C49.5 4.6 45.6 0 40.7 0z\"\n      />\n    </defs>\n  </svg>\n</button>\n\n<style lang=\"scss\">\n  .floating-btn {\n    background: var(--color-blue-bg);\n    border: 0;\n    border-radius: 50%;\n    box-shadow: 0 0 30px rgba($color-black, 0.3);\n    cursor: pointer;\n    position: fixed;\n    padding: 6px;\n    transition: opacity 0.3s;\n    -webkit-transition: opacity 0.3s;\n    z-index: 99999;\n  }\n  .floating-btn.bottom-right {\n    bottom: 16px;\n    right: 16px;\n  }\n  .floating-btn.bottom-left {\n    bottom: 16px;\n    left: 16px;\n  }\n  .floating-btn.top-right {\n    top: 16px;\n    right: 16px;\n  }\n  .floating-btn.top-left {\n    top: 16px;\n    left: 16px;\n  }\n  .floating-btn:hover {\n    opacity: 0.7;\n  }\n  .floating-btn > svg {\n    display: block;\n    width: 34px;\n    height: 34px;\n    position: relative;\n  }\n</style>\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import type { EditorView } from 'prosemirror-view'\nimport type { EditorState } from 'prosemirror-state'\nimport { get, writable } from 'svelte/store'\n\nimport type { Snapshot } from '$typings/snapshots'\nimport { Schema } from 'prosemirror-model'\n\nconst SNAPSHOTS_KEY = '__prosemirror-dev-toolkit__snapshots'\n\nexport const snapshots = writable<Snapshot[]>([])\nexport const selectedSnapshot = writable<Snapshot | undefined>()\nexport const previousEditorState = writable<EditorState | undefined>()\n\nconst persisted = typeof window !== 'undefined' ? localStorage.getItem(SNAPSHOTS_KEY) : null\nif (persisted && persisted.length > 0) {\n  try {\n    const parsed = JSON.parse(persisted)\n    snapshots.set(parsed)\n  } catch (err) {\n    console.error('Corrupted snapshots values in localStorage', err)\n  }\n}\n\nsnapshots.subscribe(val => {\n  if (typeof window !== 'undefined') {\n    localStorage.setItem(SNAPSHOTS_KEY, JSON.stringify(val))\n  }\n})\n\nfunction setEditorDoc(view: EditorView, doc: { [key: string]: any }) {\n  // Hack to use EditorState.create without explicitly calling EditorState, thus\n  // avoiding having to include it as a dependency\n  const newState = Object.getPrototypeOf(view.state).constructor.create({\n    schema: view.state.schema,\n    plugins: view.state.plugins,\n    doc: view.state.schema.nodeFromJSON(doc)\n  })\n  view.updateState(newState)\n}\n\nexport function saveSnapshot(snapshotName: string, doc: { [key: string]: any }) {\n  const snap: Snapshot = {\n    name: snapshotName,\n    timestamp: Date.now(),\n    doc\n  }\n  snapshots.update(val => [snap, ...val])\n}\n\nexport function importSnapshot(\n  snapshotName: string,\n  json: { [key: string]: unknown },\n  schema: Schema\n) {\n  const doc = schema.nodeFromJSON(json)\n  const snap: Snapshot = {\n    name: snapshotName,\n    timestamp: Date.now(),\n    doc: doc.toJSON()\n  }\n  snapshots.update(val => [snap, ...val])\n}\n\nexport function updateSnapshot(snapshot: Snapshot) {\n  snapshots.update(val =>\n    val.map(s => {\n      if (s.timestamp === snapshot.timestamp) {\n        return snapshot\n      }\n      return s\n    })\n  )\n}\n\nexport function toggleViewSnapshot(view: EditorView, snap?: Snapshot) {\n  if (snap) {\n    const prevState = get(previousEditorState)\n    if (!prevState) previousEditorState.set(view.state)\n    setEditorDoc(view, snap.doc)\n  } else {\n    const prevState = get(previousEditorState)\n    if (!prevState) {\n      console.error('No previous state to restore!')\n    } else {\n      view.updateState(prevState)\n    }\n    previousEditorState.set(undefined)\n  }\n  selectedSnapshot.set(snap)\n}\n\nexport function restoreSnapshot(view: EditorView, snap: Snapshot) {\n  setEditorDoc(view, snap.doc)\n  previousEditorState.set(undefined)\n  selectedSnapshot.set(undefined)\n}\n\nexport function exportSnapshot(snapshot: Snapshot) {\n  const a = document.createElement('a')\n  const file = new Blob([JSON.stringify(snapshot.doc)], { type: 'application/json' })\n  a.href = URL.createObjectURL(file)\n  a.download = `${snapshot.name}.json`\n  a.click()\n}\n\nexport function deleteSnapshot(snapshot: Snapshot) {\n  snapshots.update(val => val.filter(s => s.timestamp !== snapshot.timestamp))\n  const selected = get(selectedSnapshot)\n  if (selected?.timestamp === snapshot.timestamp) {\n    selectedSnapshot.set(undefined)\n  }\n}\n","<script lang=\"ts\">\n  export let active: string, onClickTab: (tab: string) => void\n</script>\n\n<ul class=\"tabs-menu\">\n  <li>\n    <button class:active={active === 'state'} on:click={() => onClickTab('state')}>STATE</button>\n  </li>\n  <li>\n    <button class:active={active === 'history'} on:click={() => onClickTab('history')}\n      >HISTORY</button\n    >\n  </li>\n  <li>\n    <button class:active={active === 'plugins'} on:click={() => onClickTab('plugins')}\n      >PLUGINS</button\n    >\n  </li>\n  <li>\n    <button class:active={active === 'schema'} on:click={() => onClickTab('schema')}>SCHEMA</button>\n  </li>\n  <li>\n    <button class:active={active === 'structure'} on:click={() => onClickTab('structure')}\n      >STRUCTURE</button\n    >\n  </li>\n  <li>\n    <button class:active={active === 'snapshots'} on:click={() => onClickTab('snapshots')}\n      >SNAPSHOTS</button\n    >\n  </li>\n</ul>\n\n<style lang=\"scss\">\n  ul {\n    display: flex;\n    list-style: none;\n    margin: 0;\n    overflow-x: scroll;\n    padding: 0;\n  }\n  button {\n    background: transparent;\n    border: 0;\n    border-bottom: 2px solid transparent;\n    color: var(--color-white);\n    cursor: pointer;\n    height: 100%;\n    padding: 1em;\n    &:hover {\n      background: rgba($color-white, 0.05);\n    }\n    &.active {\n      border-bottom: 2px solid var(--color-red-light);\n    }\n  }\n</style>\n","/*\n\n Style HTML\n---------------\n\n  Written by Nochum Sossonko, (nsossonko@hotmail.com)\n\n  Based on code initially developed by: Einar Lielmanis, <elfz@laacz.lv>\n    http://jsbeautifier.org/\n\n\n  You are free to use this in any way you want, in case you find this useful or working for you.\n\n  Usage:\n    style_html(html_source);\n\n    style_html(html_source, options);\n\n  The options are:\n    indent_size (default 4)          — indentation size,\n    indent_char (default space)      — character to indent with,\n    max_char (default 70)            -  maximum amount of characters per line,\n    brace_style (default \"collapse\") - \"collapse\" | \"expand\" | \"end-expand\"\n            put braces on the same line as control statements (default), or put braces on own line (Allman / ANSI style), or just put end braces on own line.\n    unformatted (defaults to inline tags) - list of tags, that shouldn't be reformatted\n    indent_scripts (default normal)  - \"keep\"|\"separate\"|\"normal\"\n\n    e.g.\n\n    style_html(html_source, {\n      'indent_size': 2,\n      'indent_char': ' ',\n      'max_char': 78,\n      'brace_style': 'expand',\n      'unformatted': ['a', 'sub', 'sup', 'b', 'i', 'u']\n    });\n*/\n\nfunction style_html(html_source, options) {\n//Wrapper function to invoke all the necessary constructors and deal with the output.\n\n  var multi_parser,\n      indent_size,\n      indent_character,\n      max_char,\n      brace_style,\n      unformatted;\n\n  options = options || {};\n  indent_size = options.indent_size || 4;\n  indent_character = options.indent_char || ' ';\n  brace_style = options.brace_style || 'collapse';\n  max_char = options.max_char == 0 ? Infinity : options.max_char || 70;\n  unformatted = options.unformatted || ['a', 'span', 'bdo', 'em', 'strong', 'dfn', 'code', 'samp', 'kbd', 'var', 'cite', 'abbr', 'acronym', 'q', 'sub', 'sup', 'tt', 'i', 'b', 'big', 'small', 'u', 's', 'strike', 'font', 'ins', 'del', 'pre', 'address', 'dt', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6'];\n\n  function Parser() {\n\n    this.pos = 0; //Parser position\n    this.token = '';\n    this.current_mode = 'CONTENT'; //reflects the current Parser mode: TAG/CONTENT\n    this.tags = { //An object to hold tags, their position, and their parent-tags, initiated with default values\n      parent: 'parent1',\n      parentcount: 1,\n      parent1: ''\n    };\n    this.tag_type = '';\n    this.token_text = this.last_token = this.last_text = this.token_type = '';\n\n    this.Utils = { //Uilities made available to the various functions\n      whitespace: \"\\n\\r\\t \".split(''),\n      single_token: 'br,input,link,meta,!doctype,basefont,base,area,hr,wbr,param,img,isindex,?xml,embed,?php,?,?='.split(','), //all the single tags for HTML\n      extra_liners: 'head,body,/html'.split(','), //for tags that need a line of whitespace before them\n      in_array: function (what, arr) {\n        for (var i=0; i<arr.length; i++) {\n          if (what === arr[i]) {\n            return true;\n          }\n        }\n        return false;\n      }\n    }\n\n    this.get_content = function () { //function to capture regular content between tags\n\n      var input_char = '',\n          content = [],\n          space = false; //if a space is needed\n\n      while (this.input.charAt(this.pos) !== '<') {\n        if (this.pos >= this.input.length) {\n          return content.length?content.join(''):['', 'TK_EOF'];\n        }\n\n        input_char = this.input.charAt(this.pos);\n        this.pos++;\n        this.line_char_count++;\n\n        if (this.Utils.in_array(input_char, this.Utils.whitespace)) {\n          if (content.length) {\n            space = true;\n          }\n          this.line_char_count--;\n          continue; //don't want to insert unnecessary space\n        }\n        else if (space) {\n          if (this.line_char_count >= this.max_char) { //insert a line when the max_char is reached\n            content.push('\\n');\n            for (var i=0; i<this.indent_level; i++) {\n              content.push(this.indent_string);\n            }\n            this.line_char_count = 0;\n          }\n          else{\n            content.push(' ');\n            this.line_char_count++;\n          }\n          space = false;\n        }\n        content.push(input_char); //letter at-a-time (or string) inserted to an array\n      }\n      return content.length?content.join(''):'';\n    }\n\n    this.get_contents_to = function (name) { //get the full content of a script or style to pass to js_beautify\n      if (this.pos == this.input.length) {\n        return ['', 'TK_EOF'];\n      }\n      var input_char = '';\n      var content = '';\n      var reg_match = new RegExp('\\<\\/' + name + '\\\\s*\\>', 'igm');\n      reg_match.lastIndex = this.pos;\n      var reg_array = reg_match.exec(this.input);\n      var end_script = reg_array?reg_array.index:this.input.length; //absolute end of script\n      if(this.pos < end_script) { //get everything in between the script tags\n        content = this.input.substring(this.pos, end_script);\n        this.pos = end_script;\n      }\n      return content;\n    }\n\n    this.record_tag = function (tag){ //function to record a tag and its parent in this.tags Object\n      if (this.tags[tag + 'count']) { //check for the existence of this tag type\n        this.tags[tag + 'count']++;\n        this.tags[tag + this.tags[tag + 'count']] = this.indent_level; //and record the present indent level\n      }\n      else { //otherwise initialize this tag type\n        this.tags[tag + 'count'] = 1;\n        this.tags[tag + this.tags[tag + 'count']] = this.indent_level; //and record the present indent level\n      }\n      this.tags[tag + this.tags[tag + 'count'] + 'parent'] = this.tags.parent; //set the parent (i.e. in the case of a div this.tags.div1parent)\n      this.tags.parent = tag + this.tags[tag + 'count']; //and make this the current parent (i.e. in the case of a div 'div1')\n    }\n\n    this.retrieve_tag = function (tag) { //function to retrieve the opening tag to the corresponding closer\n      if (this.tags[tag + 'count']) { //if the openener is not in the Object we ignore it\n        var temp_parent = this.tags.parent; //check to see if it's a closable tag.\n        while (temp_parent) { //till we reach '' (the initial value);\n          if (tag + this.tags[tag + 'count'] === temp_parent) { //if this is it use it\n            break;\n          }\n          temp_parent = this.tags[temp_parent + 'parent']; //otherwise keep on climbing up the DOM Tree\n        }\n        if (temp_parent) { //if we caught something\n          this.indent_level = this.tags[tag + this.tags[tag + 'count']]; //set the indent_level accordingly\n          this.tags.parent = this.tags[temp_parent + 'parent']; //and set the current parent\n        }\n        delete this.tags[tag + this.tags[tag + 'count'] + 'parent']; //delete the closed tags parent reference...\n        delete this.tags[tag + this.tags[tag + 'count']]; //...and the tag itself\n        if (this.tags[tag + 'count'] == 1) {\n          delete this.tags[tag + 'count'];\n        }\n        else {\n          this.tags[tag + 'count']--;\n        }\n      }\n    }\n\n    this.get_tag = function () { //function to get a full tag and parse its type\n      var input_char = '',\n          content = [],\n          space = false,\n          tag_start, tag_end;\n\n      do {\n        if (this.pos >= this.input.length) {\n          return content.length?content.join(''):['', 'TK_EOF'];\n        }\n\n        input_char = this.input.charAt(this.pos);\n        this.pos++;\n        this.line_char_count++;\n\n        if (this.Utils.in_array(input_char, this.Utils.whitespace)) { //don't want to insert unnecessary space\n          space = true;\n          this.line_char_count--;\n          continue;\n        }\n\n        if (input_char === \"'\" || input_char === '\"') {\n          if (!content[1] || content[1] !== '!') { //if we're in a comment strings don't get treated specially\n            input_char += this.get_unformatted(input_char);\n            space = true;\n          }\n        }\n\n        if (input_char === '=') { //no space before =\n          space = false;\n        }\n\n        if (content.length && content[content.length-1] !== '=' && input_char !== '>'\n            && space) { //no space after = or before >\n          if (this.line_char_count >= this.max_char) {\n            this.print_newline(false, content);\n            this.line_char_count = 0;\n          }\n          else {\n            content.push(' ');\n            this.line_char_count++;\n          }\n          space = false;\n        }\n        if (input_char === '<') {\n            tag_start = this.pos - 1;\n        }\n        content.push(input_char); //inserts character at-a-time (or string)\n      } while (input_char !== '>');\n\n      var tag_complete = content.join('');\n      var tag_index;\n      if (tag_complete.indexOf(' ') != -1) { //if there's whitespace, thats where the tag name ends\n        tag_index = tag_complete.indexOf(' ');\n      }\n      else { //otherwise go with the tag ending\n        tag_index = tag_complete.indexOf('>');\n      }\n      var tag_check = tag_complete.substring(1, tag_index).toLowerCase();\n      if (tag_complete.charAt(tag_complete.length-2) === '/' ||\n          this.Utils.in_array(tag_check, this.Utils.single_token)) { //if this tag name is a single tag type (either in the list or has a closing /)\n        this.tag_type = 'SINGLE';\n      }\n      else if (tag_check === 'script') { //for later script handling\n        this.record_tag(tag_check);\n        this.tag_type = 'SCRIPT';\n      }\n      else if (tag_check === 'style') { //for future style handling (for now it justs uses get_content)\n        this.record_tag(tag_check);\n        this.tag_type = 'STYLE';\n      }\n      else if (this.Utils.in_array(tag_check, unformatted)) { // do not reformat the \"unformatted\" tags\n        var comment = this.get_unformatted('</'+tag_check+'>', tag_complete); //...delegate to get_unformatted function\n        content.push(comment);\n        // Preserve collapsed whitespace either before or after this tag.\n        if (tag_start > 0 && this.Utils.in_array(this.input.charAt(tag_start - 1), this.Utils.whitespace)){\n            content.splice(0, 0, this.input.charAt(tag_start - 1));\n        }\n        tag_end = this.pos - 1;\n        if (this.Utils.in_array(this.input.charAt(tag_end + 1), this.Utils.whitespace)){\n            content.push(this.input.charAt(tag_end + 1));\n        }\n        this.tag_type = 'SINGLE';\n      }\n      else if (tag_check.charAt(0) === '!') { //peek for <!-- comment\n        if (tag_check.indexOf('[if') != -1) { //peek for <!--[if conditional comment\n          if (tag_complete.indexOf('!IE') != -1) { //this type needs a closing --> so...\n            var comment = this.get_unformatted('-->', tag_complete); //...delegate to get_unformatted\n            content.push(comment);\n          }\n          this.tag_type = 'START';\n        }\n        else if (tag_check.indexOf('[endif') != -1) {//peek for <!--[endif end conditional comment\n          this.tag_type = 'END';\n          this.unindent();\n        }\n        else if (tag_check.indexOf('[cdata[') != -1) { //if it's a <[cdata[ comment...\n          var comment = this.get_unformatted(']]>', tag_complete); //...delegate to get_unformatted function\n          content.push(comment);\n          this.tag_type = 'SINGLE'; //<![CDATA[ comments are treated like single tags\n        }\n        else {\n          var comment = this.get_unformatted('-->', tag_complete);\n          content.push(comment);\n          this.tag_type = 'SINGLE';\n        }\n      }\n      else {\n        if (tag_check.charAt(0) === '/') { //this tag is a double tag so check for tag-ending\n          this.retrieve_tag(tag_check.substring(1)); //remove it and all ancestors\n          this.tag_type = 'END';\n        }\n        else { //otherwise it's a start-tag\n          this.record_tag(tag_check); //push it on the tag stack\n          this.tag_type = 'START';\n        }\n        if (this.Utils.in_array(tag_check, this.Utils.extra_liners)) { //check if this double needs an extra line\n          this.print_newline(true, this.output);\n        }\n      }\n      return content.join(''); //returns fully formatted tag\n    }\n\n    this.get_unformatted = function (delimiter, orig_tag) { //function to return unformatted content in its entirety\n\n      if (orig_tag && orig_tag.toLowerCase().indexOf(delimiter) != -1) {\n        return '';\n      }\n      var input_char = '';\n      var content = '';\n      var space = true;\n      do {\n\n        if (this.pos >= this.input.length) {\n          return content;\n        }\n\n        input_char = this.input.charAt(this.pos);\n        this.pos++\n\n        if (this.Utils.in_array(input_char, this.Utils.whitespace)) {\n          if (!space) {\n            this.line_char_count--;\n            continue;\n          }\n          if (input_char === '\\n' || input_char === '\\r') {\n            content += '\\n';\n            /*  Don't change tab indention for unformatted blocks.  If using code for html editing, this will greatly affect <pre> tags if they are specified in the 'unformatted array'\n            for (var i=0; i<this.indent_level; i++) {\n              content += this.indent_string;\n            }\n            space = false; //...and make sure other indentation is erased\n            */\n            this.line_char_count = 0;\n            continue;\n          }\n        }\n        content += input_char;\n        this.line_char_count++;\n        space = true;\n\n\n      } while (content.toLowerCase().indexOf(delimiter) == -1);\n      return content;\n    }\n\n    this.get_token = function () { //initial handler for token-retrieval\n      var token;\n\n      if (this.last_token === 'TK_TAG_SCRIPT' || this.last_token === 'TK_TAG_STYLE') { //check if we need to format javascript\n       var type = this.last_token.substr(7)\n       token = this.get_contents_to(type);\n        if (typeof token !== 'string') {\n          return token;\n        }\n        return [token, 'TK_' + type];\n      }\n      if (this.current_mode === 'CONTENT') {\n        token = this.get_content();\n        if (typeof token !== 'string') {\n          return token;\n        }\n        else {\n          return [token, 'TK_CONTENT'];\n        }\n      }\n\n      if (this.current_mode === 'TAG') {\n        token = this.get_tag();\n        if (typeof token !== 'string') {\n          return token;\n        }\n        else {\n          var tag_name_type = 'TK_TAG_' + this.tag_type;\n          return [token, tag_name_type];\n        }\n      }\n    }\n\n    this.get_full_indent = function (level) {\n      level = this.indent_level + level || 0;\n      if (level < 1)\n        return '';\n\n      return Array(level + 1).join(this.indent_string);\n    }\n\n\n    this.printer = function (js_source, indent_character, indent_size, max_char, brace_style) { //handles input/output and some other printing functions\n\n      this.input = js_source || ''; //gets the input for the Parser\n      this.output = [];\n      this.indent_character = indent_character;\n      this.indent_string = '';\n      this.indent_size = indent_size;\n      this.brace_style = brace_style;\n      this.indent_level = 0;\n      this.max_char = max_char;\n      this.line_char_count = 0; //count to see if max_char was exceeded\n\n      for (var i=0; i<this.indent_size; i++) {\n        this.indent_string += this.indent_character;\n      }\n\n      this.print_newline = function (ignore, arr) {\n        this.line_char_count = 0;\n        if (!arr || !arr.length) {\n          return;\n        }\n        if (!ignore) { //we might want the extra line\n          while (this.Utils.in_array(arr[arr.length-1], this.Utils.whitespace)) {\n            arr.pop();\n          }\n        }\n        arr.push('\\n');\n        for (var i=0; i<this.indent_level; i++) {\n          arr.push(this.indent_string);\n        }\n      }\n\n      this.print_token = function (text) {\n        this.output.push(text);\n      }\n\n      this.indent = function () {\n        this.indent_level++;\n      }\n\n      this.unindent = function () {\n        if (this.indent_level > 0) {\n          this.indent_level--;\n        }\n      }\n    }\n    return this;\n  }\n\n  /*_____________________--------------------_____________________*/\n\n  multi_parser = new Parser(); //wrapping functions Parser\n  multi_parser.printer(html_source, indent_character, indent_size, max_char, brace_style); //initialize starting values\n\n  while (true) {\n      var t = multi_parser.get_token();\n      multi_parser.token_text = t[0];\n      multi_parser.token_type = t[1];\n\n    if (multi_parser.token_type === 'TK_EOF') {\n      break;\n    }\n\n    switch (multi_parser.token_type) {\n      case 'TK_TAG_START':\n        multi_parser.print_newline(false, multi_parser.output);\n        multi_parser.print_token(multi_parser.token_text);\n        multi_parser.indent();\n        multi_parser.current_mode = 'CONTENT';\n        break;\n      case 'TK_TAG_STYLE':\n      case 'TK_TAG_SCRIPT':\n        multi_parser.print_newline(false, multi_parser.output);\n        multi_parser.print_token(multi_parser.token_text);\n        multi_parser.current_mode = 'CONTENT';\n        break;\n      case 'TK_TAG_END':\n        //Print new line only if the tag has no content and has child\n        if (multi_parser.last_token === 'TK_CONTENT' && multi_parser.last_text === '') {\n            var tag_name = multi_parser.token_text.match(/\\w+/)[0];\n            var tag_extracted_from_last_output = multi_parser.output[multi_parser.output.length -1].match(/<\\s*(\\w+)/);\n            if (tag_extracted_from_last_output === null || tag_extracted_from_last_output[1] !== tag_name)\n                multi_parser.print_newline(true, multi_parser.output);\n        }\n        multi_parser.print_token(multi_parser.token_text);\n        multi_parser.current_mode = 'CONTENT';\n        break;\n      case 'TK_TAG_SINGLE':\n        // Don't add a newline before elements that should remain unformatted.\n        var tag_check = multi_parser.token_text.match(/^\\s*<([a-z]+)/i);\n        if (!tag_check || !multi_parser.Utils.in_array(tag_check[1], unformatted)){\n            multi_parser.print_newline(false, multi_parser.output);\n        }\n        multi_parser.print_token(multi_parser.token_text);\n        multi_parser.current_mode = 'CONTENT';\n        break;\n      case 'TK_CONTENT':\n        if (multi_parser.token_text !== '') {\n          multi_parser.print_token(multi_parser.token_text);\n        }\n        multi_parser.current_mode = 'TAG';\n        break;\n      case 'TK_STYLE':\n      case 'TK_SCRIPT':\n        if (multi_parser.token_text !== '') {\n          multi_parser.output.push('\\n');\n          var text = multi_parser.token_text;\n          if (multi_parser.token_type == 'TK_SCRIPT') {\n            var _beautifier = typeof js_beautify == 'function' && js_beautify;\n          } else if (multi_parser.token_type == 'TK_STYLE') {\n            var _beautifier = typeof css_beautify == 'function' && css_beautify;\n          }\n\n          if (options.indent_scripts == \"keep\") {\n            var script_indent_level = 0;\n          } else if (options.indent_scripts == \"separate\") {\n            var script_indent_level = -multi_parser.indent_level;\n          } else {\n            var script_indent_level = 1;\n          }\n\n          var indentation = multi_parser.get_full_indent(script_indent_level);\n          if (_beautifier) {\n            // call the Beautifier if avaliable\n            text = _beautifier(text.replace(/^\\s*/, indentation), options);\n          } else {\n            // simply indent the string otherwise\n            var white = text.match(/^\\s*/)[0];\n            var _level = white.match(/[^\\n\\r]*$/)[0].split(multi_parser.indent_string).length - 1;\n            var reindent = multi_parser.get_full_indent(script_indent_level -_level);\n            text = text.replace(/^\\s*/, indentation)\n                   .replace(/\\r\\n|\\r|\\n/g, '\\n' + reindent)\n                   .replace(/\\s*$/, '');\n          }\n          if (text) {\n            multi_parser.print_token(text);\n            multi_parser.print_newline(true, multi_parser.output);\n          }\n        }\n        multi_parser.current_mode = 'TAG';\n        break;\n    }\n    multi_parser.last_token = multi_parser.token_type;\n    multi_parser.last_text = multi_parser.token_text;\n  }\n  return multi_parser.output.join('');\n}\n\nmodule.exports = {\n  prettyPrint: style_html\n};","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('./empty')) :\n\ttypeof define === 'function' && define.amd ? define(['exports', './empty'], factory) :\n\t(factory((global.jsondiffpatch = {}),global.chalk));\n}(this, (function (exports,chalk) { 'use strict';\n\nchalk = chalk && chalk.hasOwnProperty('default') ? chalk['default'] : chalk;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\n\n\nvar get = function get(object, property, receiver) {\n  if (object === null) object = Function.prototype;\n  var desc = Object.getOwnPropertyDescriptor(object, property);\n\n  if (desc === undefined) {\n    var parent = Object.getPrototypeOf(object);\n\n    if (parent === null) {\n      return undefined;\n    } else {\n      return get(parent, property, receiver);\n    }\n  } else if (\"value\" in desc) {\n    return desc.value;\n  } else {\n    var getter = desc.get;\n\n    if (getter === undefined) {\n      return undefined;\n    }\n\n    return getter.call(receiver);\n  }\n};\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\n\n\n\n\nvar slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar toConsumableArray = function (arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n};\n\nvar Processor = function () {\n  function Processor(options) {\n    classCallCheck(this, Processor);\n\n    this.selfOptions = options || {};\n    this.pipes = {};\n  }\n\n  createClass(Processor, [{\n    key: 'options',\n    value: function options(_options) {\n      if (_options) {\n        this.selfOptions = _options;\n      }\n      return this.selfOptions;\n    }\n  }, {\n    key: 'pipe',\n    value: function pipe(name, pipeArg) {\n      var pipe = pipeArg;\n      if (typeof name === 'string') {\n        if (typeof pipe === 'undefined') {\n          return this.pipes[name];\n        } else {\n          this.pipes[name] = pipe;\n        }\n      }\n      if (name && name.name) {\n        pipe = name;\n        if (pipe.processor === this) {\n          return pipe;\n        }\n        this.pipes[pipe.name] = pipe;\n      }\n      pipe.processor = this;\n      return pipe;\n    }\n  }, {\n    key: 'process',\n    value: function process(input, pipe) {\n      var context = input;\n      context.options = this.options();\n      var nextPipe = pipe || input.pipe || 'default';\n      var lastPipe = void 0;\n      var lastContext = void 0;\n      while (nextPipe) {\n        if (typeof context.nextAfterChildren !== 'undefined') {\n          // children processed and coming back to parent\n          context.next = context.nextAfterChildren;\n          context.nextAfterChildren = null;\n        }\n\n        if (typeof nextPipe === 'string') {\n          nextPipe = this.pipe(nextPipe);\n        }\n        nextPipe.process(context);\n        lastContext = context;\n        lastPipe = nextPipe;\n        nextPipe = null;\n        if (context) {\n          if (context.next) {\n            context = context.next;\n            nextPipe = lastContext.nextPipe || context.pipe || lastPipe;\n          }\n        }\n      }\n      return context.hasResult ? context.result : undefined;\n    }\n  }]);\n  return Processor;\n}();\n\nvar Pipe = function () {\n  function Pipe(name) {\n    classCallCheck(this, Pipe);\n\n    this.name = name;\n    this.filters = [];\n  }\n\n  createClass(Pipe, [{\n    key: 'process',\n    value: function process(input) {\n      if (!this.processor) {\n        throw new Error('add this pipe to a processor before using it');\n      }\n      var debug = this.debug;\n      var length = this.filters.length;\n      var context = input;\n      for (var index = 0; index < length; index++) {\n        var filter = this.filters[index];\n        if (debug) {\n          this.log('filter: ' + filter.filterName);\n        }\n        filter(context);\n        if ((typeof context === 'undefined' ? 'undefined' : _typeof(context)) === 'object' && context.exiting) {\n          context.exiting = false;\n          break;\n        }\n      }\n      if (!context.next && this.resultCheck) {\n        this.resultCheck(context);\n      }\n    }\n  }, {\n    key: 'log',\n    value: function log(msg) {\n      console.log('[jsondiffpatch] ' + this.name + ' pipe, ' + msg);\n    }\n  }, {\n    key: 'append',\n    value: function append() {\n      var _filters;\n\n      (_filters = this.filters).push.apply(_filters, arguments);\n      return this;\n    }\n  }, {\n    key: 'prepend',\n    value: function prepend() {\n      var _filters2;\n\n      (_filters2 = this.filters).unshift.apply(_filters2, arguments);\n      return this;\n    }\n  }, {\n    key: 'indexOf',\n    value: function indexOf(filterName) {\n      if (!filterName) {\n        throw new Error('a filter name is required');\n      }\n      for (var index = 0; index < this.filters.length; index++) {\n        var filter = this.filters[index];\n        if (filter.filterName === filterName) {\n          return index;\n        }\n      }\n      throw new Error('filter not found: ' + filterName);\n    }\n  }, {\n    key: 'list',\n    value: function list() {\n      return this.filters.map(function (f) {\n        return f.filterName;\n      });\n    }\n  }, {\n    key: 'after',\n    value: function after(filterName) {\n      var index = this.indexOf(filterName);\n      var params = Array.prototype.slice.call(arguments, 1);\n      if (!params.length) {\n        throw new Error('a filter is required');\n      }\n      params.unshift(index + 1, 0);\n      Array.prototype.splice.apply(this.filters, params);\n      return this;\n    }\n  }, {\n    key: 'before',\n    value: function before(filterName) {\n      var index = this.indexOf(filterName);\n      var params = Array.prototype.slice.call(arguments, 1);\n      if (!params.length) {\n        throw new Error('a filter is required');\n      }\n      params.unshift(index, 0);\n      Array.prototype.splice.apply(this.filters, params);\n      return this;\n    }\n  }, {\n    key: 'replace',\n    value: function replace(filterName) {\n      var index = this.indexOf(filterName);\n      var params = Array.prototype.slice.call(arguments, 1);\n      if (!params.length) {\n        throw new Error('a filter is required');\n      }\n      params.unshift(index, 1);\n      Array.prototype.splice.apply(this.filters, params);\n      return this;\n    }\n  }, {\n    key: 'remove',\n    value: function remove(filterName) {\n      var index = this.indexOf(filterName);\n      this.filters.splice(index, 1);\n      return this;\n    }\n  }, {\n    key: 'clear',\n    value: function clear() {\n      this.filters.length = 0;\n      return this;\n    }\n  }, {\n    key: 'shouldHaveResult',\n    value: function shouldHaveResult(should) {\n      if (should === false) {\n        this.resultCheck = null;\n        return;\n      }\n      if (this.resultCheck) {\n        return;\n      }\n      var pipe = this;\n      this.resultCheck = function (context) {\n        if (!context.hasResult) {\n          console.log(context);\n          var error = new Error(pipe.name + ' failed');\n          error.noResult = true;\n          throw error;\n        }\n      };\n      return this;\n    }\n  }]);\n  return Pipe;\n}();\n\nvar Context = function () {\n  function Context() {\n    classCallCheck(this, Context);\n  }\n\n  createClass(Context, [{\n    key: 'setResult',\n    value: function setResult(result) {\n      this.result = result;\n      this.hasResult = true;\n      return this;\n    }\n  }, {\n    key: 'exit',\n    value: function exit() {\n      this.exiting = true;\n      return this;\n    }\n  }, {\n    key: 'switchTo',\n    value: function switchTo(next, pipe) {\n      if (typeof next === 'string' || next instanceof Pipe) {\n        this.nextPipe = next;\n      } else {\n        this.next = next;\n        if (pipe) {\n          this.nextPipe = pipe;\n        }\n      }\n      return this;\n    }\n  }, {\n    key: 'push',\n    value: function push(child, name) {\n      child.parent = this;\n      if (typeof name !== 'undefined') {\n        child.childName = name;\n      }\n      child.root = this.root || this;\n      child.options = child.options || this.options;\n      if (!this.children) {\n        this.children = [child];\n        this.nextAfterChildren = this.next || null;\n        this.next = child;\n      } else {\n        this.children[this.children.length - 1].next = child;\n        this.children.push(child);\n      }\n      child.next = this;\n      return this;\n    }\n  }]);\n  return Context;\n}();\n\nvar isArray = typeof Array.isArray === 'function' ? Array.isArray : function (a) {\n  return a instanceof Array;\n};\n\nfunction cloneRegExp(re) {\n  var regexMatch = /^\\/(.*)\\/([gimyu]*)$/.exec(re.toString());\n  return new RegExp(regexMatch[1], regexMatch[2]);\n}\n\nfunction clone(arg) {\n  if ((typeof arg === 'undefined' ? 'undefined' : _typeof(arg)) !== 'object') {\n    return arg;\n  }\n  if (arg === null) {\n    return null;\n  }\n  if (isArray(arg)) {\n    return arg.map(clone);\n  }\n  if (arg instanceof Date) {\n    return new Date(arg.getTime());\n  }\n  if (arg instanceof RegExp) {\n    return cloneRegExp(arg);\n  }\n  var cloned = {};\n  for (var name in arg) {\n    if (Object.prototype.hasOwnProperty.call(arg, name)) {\n      cloned[name] = clone(arg[name]);\n    }\n  }\n  return cloned;\n}\n\nvar DiffContext = function (_Context) {\n  inherits(DiffContext, _Context);\n\n  function DiffContext(left, right) {\n    classCallCheck(this, DiffContext);\n\n    var _this = possibleConstructorReturn(this, (DiffContext.__proto__ || Object.getPrototypeOf(DiffContext)).call(this));\n\n    _this.left = left;\n    _this.right = right;\n    _this.pipe = 'diff';\n    return _this;\n  }\n\n  createClass(DiffContext, [{\n    key: 'setResult',\n    value: function setResult(result) {\n      if (this.options.cloneDiffValues && (typeof result === 'undefined' ? 'undefined' : _typeof(result)) === 'object') {\n        var clone$$1 = typeof this.options.cloneDiffValues === 'function' ? this.options.cloneDiffValues : clone;\n        if (_typeof(result[0]) === 'object') {\n          result[0] = clone$$1(result[0]);\n        }\n        if (_typeof(result[1]) === 'object') {\n          result[1] = clone$$1(result[1]);\n        }\n      }\n      return Context.prototype.setResult.apply(this, arguments);\n    }\n  }]);\n  return DiffContext;\n}(Context);\n\nvar PatchContext = function (_Context) {\n  inherits(PatchContext, _Context);\n\n  function PatchContext(left, delta) {\n    classCallCheck(this, PatchContext);\n\n    var _this = possibleConstructorReturn(this, (PatchContext.__proto__ || Object.getPrototypeOf(PatchContext)).call(this));\n\n    _this.left = left;\n    _this.delta = delta;\n    _this.pipe = 'patch';\n    return _this;\n  }\n\n  return PatchContext;\n}(Context);\n\nvar ReverseContext = function (_Context) {\n  inherits(ReverseContext, _Context);\n\n  function ReverseContext(delta) {\n    classCallCheck(this, ReverseContext);\n\n    var _this = possibleConstructorReturn(this, (ReverseContext.__proto__ || Object.getPrototypeOf(ReverseContext)).call(this));\n\n    _this.delta = delta;\n    _this.pipe = 'reverse';\n    return _this;\n  }\n\n  return ReverseContext;\n}(Context);\n\nvar isArray$1 = typeof Array.isArray === 'function' ? Array.isArray : function (a) {\n  return a instanceof Array;\n};\n\nvar diffFilter = function trivialMatchesDiffFilter(context) {\n  if (context.left === context.right) {\n    context.setResult(undefined).exit();\n    return;\n  }\n  if (typeof context.left === 'undefined') {\n    if (typeof context.right === 'function') {\n      throw new Error('functions are not supported');\n    }\n    context.setResult([context.right]).exit();\n    return;\n  }\n  if (typeof context.right === 'undefined') {\n    context.setResult([context.left, 0, 0]).exit();\n    return;\n  }\n  if (typeof context.left === 'function' || typeof context.right === 'function') {\n    throw new Error('functions are not supported');\n  }\n  context.leftType = context.left === null ? 'null' : _typeof(context.left);\n  context.rightType = context.right === null ? 'null' : _typeof(context.right);\n  if (context.leftType !== context.rightType) {\n    context.setResult([context.left, context.right]).exit();\n    return;\n  }\n  if (context.leftType === 'boolean' || context.leftType === 'number') {\n    context.setResult([context.left, context.right]).exit();\n    return;\n  }\n  if (context.leftType === 'object') {\n    context.leftIsArray = isArray$1(context.left);\n  }\n  if (context.rightType === 'object') {\n    context.rightIsArray = isArray$1(context.right);\n  }\n  if (context.leftIsArray !== context.rightIsArray) {\n    context.setResult([context.left, context.right]).exit();\n    return;\n  }\n\n  if (context.left instanceof RegExp) {\n    if (context.right instanceof RegExp) {\n      context.setResult([context.left.toString(), context.right.toString()]).exit();\n    } else {\n      context.setResult([context.left, context.right]).exit();\n    }\n  }\n};\ndiffFilter.filterName = 'trivial';\n\nvar patchFilter = function trivialMatchesPatchFilter(context) {\n  if (typeof context.delta === 'undefined') {\n    context.setResult(context.left).exit();\n    return;\n  }\n  context.nested = !isArray$1(context.delta);\n  if (context.nested) {\n    return;\n  }\n  if (context.delta.length === 1) {\n    context.setResult(context.delta[0]).exit();\n    return;\n  }\n  if (context.delta.length === 2) {\n    if (context.left instanceof RegExp) {\n      var regexArgs = /^\\/(.*)\\/([gimyu]+)$/.exec(context.delta[1]);\n      if (regexArgs) {\n        context.setResult(new RegExp(regexArgs[1], regexArgs[2])).exit();\n        return;\n      }\n    }\n    context.setResult(context.delta[1]).exit();\n    return;\n  }\n  if (context.delta.length === 3 && context.delta[2] === 0) {\n    context.setResult(undefined).exit();\n  }\n};\npatchFilter.filterName = 'trivial';\n\nvar reverseFilter = function trivialReferseFilter(context) {\n  if (typeof context.delta === 'undefined') {\n    context.setResult(context.delta).exit();\n    return;\n  }\n  context.nested = !isArray$1(context.delta);\n  if (context.nested) {\n    return;\n  }\n  if (context.delta.length === 1) {\n    context.setResult([context.delta[0], 0, 0]).exit();\n    return;\n  }\n  if (context.delta.length === 2) {\n    context.setResult([context.delta[1], context.delta[0]]).exit();\n    return;\n  }\n  if (context.delta.length === 3 && context.delta[2] === 0) {\n    context.setResult([context.delta[0]]).exit();\n  }\n};\nreverseFilter.filterName = 'trivial';\n\nfunction collectChildrenDiffFilter(context) {\n  if (!context || !context.children) {\n    return;\n  }\n  var length = context.children.length;\n  var child = void 0;\n  var result = context.result;\n  for (var index = 0; index < length; index++) {\n    child = context.children[index];\n    if (typeof child.result === 'undefined') {\n      continue;\n    }\n    result = result || {};\n    result[child.childName] = child.result;\n  }\n  if (result && context.leftIsArray) {\n    result._t = 'a';\n  }\n  context.setResult(result).exit();\n}\ncollectChildrenDiffFilter.filterName = 'collectChildren';\n\nfunction objectsDiffFilter(context) {\n  if (context.leftIsArray || context.leftType !== 'object') {\n    return;\n  }\n\n  var name = void 0;\n  var child = void 0;\n  var propertyFilter = context.options.propertyFilter;\n  for (name in context.left) {\n    if (!Object.prototype.hasOwnProperty.call(context.left, name)) {\n      continue;\n    }\n    if (propertyFilter && !propertyFilter(name, context)) {\n      continue;\n    }\n    child = new DiffContext(context.left[name], context.right[name]);\n    context.push(child, name);\n  }\n  for (name in context.right) {\n    if (!Object.prototype.hasOwnProperty.call(context.right, name)) {\n      continue;\n    }\n    if (propertyFilter && !propertyFilter(name, context)) {\n      continue;\n    }\n    if (typeof context.left[name] === 'undefined') {\n      child = new DiffContext(undefined, context.right[name]);\n      context.push(child, name);\n    }\n  }\n\n  if (!context.children || context.children.length === 0) {\n    context.setResult(undefined).exit();\n    return;\n  }\n  context.exit();\n}\nobjectsDiffFilter.filterName = 'objects';\n\nvar patchFilter$1 = function nestedPatchFilter(context) {\n  if (!context.nested) {\n    return;\n  }\n  if (context.delta._t) {\n    return;\n  }\n  var name = void 0;\n  var child = void 0;\n  for (name in context.delta) {\n    child = new PatchContext(context.left[name], context.delta[name]);\n    context.push(child, name);\n  }\n  context.exit();\n};\npatchFilter$1.filterName = 'objects';\n\nvar collectChildrenPatchFilter = function collectChildrenPatchFilter(context) {\n  if (!context || !context.children) {\n    return;\n  }\n  if (context.delta._t) {\n    return;\n  }\n  var length = context.children.length;\n  var child = void 0;\n  for (var index = 0; index < length; index++) {\n    child = context.children[index];\n    if (Object.prototype.hasOwnProperty.call(context.left, child.childName) && child.result === undefined) {\n      delete context.left[child.childName];\n    } else if (context.left[child.childName] !== child.result) {\n      context.left[child.childName] = child.result;\n    }\n  }\n  context.setResult(context.left).exit();\n};\ncollectChildrenPatchFilter.filterName = 'collectChildren';\n\nvar reverseFilter$1 = function nestedReverseFilter(context) {\n  if (!context.nested) {\n    return;\n  }\n  if (context.delta._t) {\n    return;\n  }\n  var name = void 0;\n  var child = void 0;\n  for (name in context.delta) {\n    child = new ReverseContext(context.delta[name]);\n    context.push(child, name);\n  }\n  context.exit();\n};\nreverseFilter$1.filterName = 'objects';\n\nfunction collectChildrenReverseFilter(context) {\n  if (!context || !context.children) {\n    return;\n  }\n  if (context.delta._t) {\n    return;\n  }\n  var length = context.children.length;\n  var child = void 0;\n  var delta = {};\n  for (var index = 0; index < length; index++) {\n    child = context.children[index];\n    if (delta[child.childName] !== child.result) {\n      delta[child.childName] = child.result;\n    }\n  }\n  context.setResult(delta).exit();\n}\ncollectChildrenReverseFilter.filterName = 'collectChildren';\n\n/*\n\nLCS implementation that supports arrays or strings\n\nreference: http://en.wikipedia.org/wiki/Longest_common_subsequence_problem\n\n*/\n\nvar defaultMatch = function defaultMatch(array1, array2, index1, index2) {\n  return array1[index1] === array2[index2];\n};\n\nvar lengthMatrix = function lengthMatrix(array1, array2, match, context) {\n  var len1 = array1.length;\n  var len2 = array2.length;\n  var x = void 0,\n      y = void 0;\n\n  // initialize empty matrix of len1+1 x len2+1\n  var matrix = [len1 + 1];\n  for (x = 0; x < len1 + 1; x++) {\n    matrix[x] = [len2 + 1];\n    for (y = 0; y < len2 + 1; y++) {\n      matrix[x][y] = 0;\n    }\n  }\n  matrix.match = match;\n  // save sequence lengths for each coordinate\n  for (x = 1; x < len1 + 1; x++) {\n    for (y = 1; y < len2 + 1; y++) {\n      if (match(array1, array2, x - 1, y - 1, context)) {\n        matrix[x][y] = matrix[x - 1][y - 1] + 1;\n      } else {\n        matrix[x][y] = Math.max(matrix[x - 1][y], matrix[x][y - 1]);\n      }\n    }\n  }\n  return matrix;\n};\n\nvar backtrack = function backtrack(matrix, array1, array2, context) {\n  var index1 = array1.length;\n  var index2 = array2.length;\n  var subsequence = {\n    sequence: [],\n    indices1: [],\n    indices2: []\n  };\n\n  while (index1 !== 0 && index2 !== 0) {\n    var sameLetter = matrix.match(array1, array2, index1 - 1, index2 - 1, context);\n    if (sameLetter) {\n      subsequence.sequence.unshift(array1[index1 - 1]);\n      subsequence.indices1.unshift(index1 - 1);\n      subsequence.indices2.unshift(index2 - 1);\n      --index1;\n      --index2;\n    } else {\n      var valueAtMatrixAbove = matrix[index1][index2 - 1];\n      var valueAtMatrixLeft = matrix[index1 - 1][index2];\n      if (valueAtMatrixAbove > valueAtMatrixLeft) {\n        --index2;\n      } else {\n        --index1;\n      }\n    }\n  }\n  return subsequence;\n};\n\nvar get$1 = function get(array1, array2, match, context) {\n  var innerContext = context || {};\n  var matrix = lengthMatrix(array1, array2, match || defaultMatch, innerContext);\n  var result = backtrack(matrix, array1, array2, innerContext);\n  if (typeof array1 === 'string' && typeof array2 === 'string') {\n    result.sequence = result.sequence.join('');\n  }\n  return result;\n};\n\nvar lcs = {\n  get: get$1\n};\n\nvar ARRAY_MOVE = 3;\n\nvar isArray$2 = typeof Array.isArray === 'function' ? Array.isArray : function (a) {\n  return a instanceof Array;\n};\n\nvar arrayIndexOf = typeof Array.prototype.indexOf === 'function' ? function (array, item) {\n  return array.indexOf(item);\n} : function (array, item) {\n  var length = array.length;\n  for (var i = 0; i < length; i++) {\n    if (array[i] === item) {\n      return i;\n    }\n  }\n  return -1;\n};\n\nfunction arraysHaveMatchByRef(array1, array2, len1, len2) {\n  for (var index1 = 0; index1 < len1; index1++) {\n    var val1 = array1[index1];\n    for (var index2 = 0; index2 < len2; index2++) {\n      var val2 = array2[index2];\n      if (index1 !== index2 && val1 === val2) {\n        return true;\n      }\n    }\n  }\n}\n\nfunction matchItems(array1, array2, index1, index2, context) {\n  var value1 = array1[index1];\n  var value2 = array2[index2];\n  if (value1 === value2) {\n    return true;\n  }\n  if ((typeof value1 === 'undefined' ? 'undefined' : _typeof(value1)) !== 'object' || (typeof value2 === 'undefined' ? 'undefined' : _typeof(value2)) !== 'object') {\n    return false;\n  }\n  var objectHash = context.objectHash;\n  if (!objectHash) {\n    // no way to match objects was provided, try match by position\n    return context.matchByPosition && index1 === index2;\n  }\n  var hash1 = void 0;\n  var hash2 = void 0;\n  if (typeof index1 === 'number') {\n    context.hashCache1 = context.hashCache1 || [];\n    hash1 = context.hashCache1[index1];\n    if (typeof hash1 === 'undefined') {\n      context.hashCache1[index1] = hash1 = objectHash(value1, index1);\n    }\n  } else {\n    hash1 = objectHash(value1);\n  }\n  if (typeof hash1 === 'undefined') {\n    return false;\n  }\n  if (typeof index2 === 'number') {\n    context.hashCache2 = context.hashCache2 || [];\n    hash2 = context.hashCache2[index2];\n    if (typeof hash2 === 'undefined') {\n      context.hashCache2[index2] = hash2 = objectHash(value2, index2);\n    }\n  } else {\n    hash2 = objectHash(value2);\n  }\n  if (typeof hash2 === 'undefined') {\n    return false;\n  }\n  return hash1 === hash2;\n}\n\nvar diffFilter$1 = function arraysDiffFilter(context) {\n  if (!context.leftIsArray) {\n    return;\n  }\n\n  var matchContext = {\n    objectHash: context.options && context.options.objectHash,\n    matchByPosition: context.options && context.options.matchByPosition\n  };\n  var commonHead = 0;\n  var commonTail = 0;\n  var index = void 0;\n  var index1 = void 0;\n  var index2 = void 0;\n  var array1 = context.left;\n  var array2 = context.right;\n  var len1 = array1.length;\n  var len2 = array2.length;\n\n  var child = void 0;\n\n  if (len1 > 0 && len2 > 0 && !matchContext.objectHash && typeof matchContext.matchByPosition !== 'boolean') {\n    matchContext.matchByPosition = !arraysHaveMatchByRef(array1, array2, len1, len2);\n  }\n\n  // separate common head\n  while (commonHead < len1 && commonHead < len2 && matchItems(array1, array2, commonHead, commonHead, matchContext)) {\n    index = commonHead;\n    child = new DiffContext(context.left[index], context.right[index]);\n    context.push(child, index);\n    commonHead++;\n  }\n  // separate common tail\n  while (commonTail + commonHead < len1 && commonTail + commonHead < len2 && matchItems(array1, array2, len1 - 1 - commonTail, len2 - 1 - commonTail, matchContext)) {\n    index1 = len1 - 1 - commonTail;\n    index2 = len2 - 1 - commonTail;\n    child = new DiffContext(context.left[index1], context.right[index2]);\n    context.push(child, index2);\n    commonTail++;\n  }\n  var result = void 0;\n  if (commonHead + commonTail === len1) {\n    if (len1 === len2) {\n      // arrays are identical\n      context.setResult(undefined).exit();\n      return;\n    }\n    // trivial case, a block (1 or more consecutive items) was added\n    result = result || {\n      _t: 'a'\n    };\n    for (index = commonHead; index < len2 - commonTail; index++) {\n      result[index] = [array2[index]];\n    }\n    context.setResult(result).exit();\n    return;\n  }\n  if (commonHead + commonTail === len2) {\n    // trivial case, a block (1 or more consecutive items) was removed\n    result = result || {\n      _t: 'a'\n    };\n    for (index = commonHead; index < len1 - commonTail; index++) {\n      result['_' + index] = [array1[index], 0, 0];\n    }\n    context.setResult(result).exit();\n    return;\n  }\n  // reset hash cache\n  delete matchContext.hashCache1;\n  delete matchContext.hashCache2;\n\n  // diff is not trivial, find the LCS (Longest Common Subsequence)\n  var trimmed1 = array1.slice(commonHead, len1 - commonTail);\n  var trimmed2 = array2.slice(commonHead, len2 - commonTail);\n  var seq = lcs.get(trimmed1, trimmed2, matchItems, matchContext);\n  var removedItems = [];\n  result = result || {\n    _t: 'a'\n  };\n  for (index = commonHead; index < len1 - commonTail; index++) {\n    if (arrayIndexOf(seq.indices1, index - commonHead) < 0) {\n      // removed\n      result['_' + index] = [array1[index], 0, 0];\n      removedItems.push(index);\n    }\n  }\n\n  var detectMove = true;\n  if (context.options && context.options.arrays && context.options.arrays.detectMove === false) {\n    detectMove = false;\n  }\n  var includeValueOnMove = false;\n  if (context.options && context.options.arrays && context.options.arrays.includeValueOnMove) {\n    includeValueOnMove = true;\n  }\n\n  var removedItemsLength = removedItems.length;\n  for (index = commonHead; index < len2 - commonTail; index++) {\n    var indexOnArray2 = arrayIndexOf(seq.indices2, index - commonHead);\n    if (indexOnArray2 < 0) {\n      // added, try to match with a removed item and register as position move\n      var isMove = false;\n      if (detectMove && removedItemsLength > 0) {\n        for (var removeItemIndex1 = 0; removeItemIndex1 < removedItemsLength; removeItemIndex1++) {\n          index1 = removedItems[removeItemIndex1];\n          if (matchItems(trimmed1, trimmed2, index1 - commonHead, index - commonHead, matchContext)) {\n            // store position move as: [originalValue, newPosition, ARRAY_MOVE]\n            result['_' + index1].splice(1, 2, index, ARRAY_MOVE);\n            if (!includeValueOnMove) {\n              // don't include moved value on diff, to save bytes\n              result['_' + index1][0] = '';\n            }\n\n            index2 = index;\n            child = new DiffContext(context.left[index1], context.right[index2]);\n            context.push(child, index2);\n            removedItems.splice(removeItemIndex1, 1);\n            isMove = true;\n            break;\n          }\n        }\n      }\n      if (!isMove) {\n        // added\n        result[index] = [array2[index]];\n      }\n    } else {\n      // match, do inner diff\n      index1 = seq.indices1[indexOnArray2] + commonHead;\n      index2 = seq.indices2[indexOnArray2] + commonHead;\n      child = new DiffContext(context.left[index1], context.right[index2]);\n      context.push(child, index2);\n    }\n  }\n\n  context.setResult(result).exit();\n};\ndiffFilter$1.filterName = 'arrays';\n\nvar compare = {\n  numerically: function numerically(a, b) {\n    return a - b;\n  },\n  numericallyBy: function numericallyBy(name) {\n    return function (a, b) {\n      return a[name] - b[name];\n    };\n  }\n};\n\nvar patchFilter$2 = function nestedPatchFilter(context) {\n  if (!context.nested) {\n    return;\n  }\n  if (context.delta._t !== 'a') {\n    return;\n  }\n  var index = void 0;\n  var index1 = void 0;\n\n  var delta = context.delta;\n  var array = context.left;\n\n  // first, separate removals, insertions and modifications\n  var toRemove = [];\n  var toInsert = [];\n  var toModify = [];\n  for (index in delta) {\n    if (index !== '_t') {\n      if (index[0] === '_') {\n        // removed item from original array\n        if (delta[index][2] === 0 || delta[index][2] === ARRAY_MOVE) {\n          toRemove.push(parseInt(index.slice(1), 10));\n        } else {\n          throw new Error('only removal or move can be applied at original array indices,' + (' invalid diff type: ' + delta[index][2]));\n        }\n      } else {\n        if (delta[index].length === 1) {\n          // added item at new array\n          toInsert.push({\n            index: parseInt(index, 10),\n            value: delta[index][0]\n          });\n        } else {\n          // modified item at new array\n          toModify.push({\n            index: parseInt(index, 10),\n            delta: delta[index]\n          });\n        }\n      }\n    }\n  }\n\n  // remove items, in reverse order to avoid sawing our own floor\n  toRemove = toRemove.sort(compare.numerically);\n  for (index = toRemove.length - 1; index >= 0; index--) {\n    index1 = toRemove[index];\n    var indexDiff = delta['_' + index1];\n    var removedValue = array.splice(index1, 1)[0];\n    if (indexDiff[2] === ARRAY_MOVE) {\n      // reinsert later\n      toInsert.push({\n        index: indexDiff[1],\n        value: removedValue\n      });\n    }\n  }\n\n  // insert items, in reverse order to avoid moving our own floor\n  toInsert = toInsert.sort(compare.numericallyBy('index'));\n  var toInsertLength = toInsert.length;\n  for (index = 0; index < toInsertLength; index++) {\n    var insertion = toInsert[index];\n    array.splice(insertion.index, 0, insertion.value);\n  }\n\n  // apply modifications\n  var toModifyLength = toModify.length;\n  var child = void 0;\n  if (toModifyLength > 0) {\n    for (index = 0; index < toModifyLength; index++) {\n      var modification = toModify[index];\n      child = new PatchContext(context.left[modification.index], modification.delta);\n      context.push(child, modification.index);\n    }\n  }\n\n  if (!context.children) {\n    context.setResult(context.left).exit();\n    return;\n  }\n  context.exit();\n};\npatchFilter$2.filterName = 'arrays';\n\nvar collectChildrenPatchFilter$1 = function collectChildrenPatchFilter(context) {\n  if (!context || !context.children) {\n    return;\n  }\n  if (context.delta._t !== 'a') {\n    return;\n  }\n  var length = context.children.length;\n  var child = void 0;\n  for (var index = 0; index < length; index++) {\n    child = context.children[index];\n    context.left[child.childName] = child.result;\n  }\n  context.setResult(context.left).exit();\n};\ncollectChildrenPatchFilter$1.filterName = 'arraysCollectChildren';\n\nvar reverseFilter$2 = function arraysReverseFilter(context) {\n  if (!context.nested) {\n    if (context.delta[2] === ARRAY_MOVE) {\n      context.newName = '_' + context.delta[1];\n      context.setResult([context.delta[0], parseInt(context.childName.substr(1), 10), ARRAY_MOVE]).exit();\n    }\n    return;\n  }\n  if (context.delta._t !== 'a') {\n    return;\n  }\n  var name = void 0;\n  var child = void 0;\n  for (name in context.delta) {\n    if (name === '_t') {\n      continue;\n    }\n    child = new ReverseContext(context.delta[name]);\n    context.push(child, name);\n  }\n  context.exit();\n};\nreverseFilter$2.filterName = 'arrays';\n\nvar reverseArrayDeltaIndex = function reverseArrayDeltaIndex(delta, index, itemDelta) {\n  if (typeof index === 'string' && index[0] === '_') {\n    return parseInt(index.substr(1), 10);\n  } else if (isArray$2(itemDelta) && itemDelta[2] === 0) {\n    return '_' + index;\n  }\n\n  var reverseIndex = +index;\n  for (var deltaIndex in delta) {\n    var deltaItem = delta[deltaIndex];\n    if (isArray$2(deltaItem)) {\n      if (deltaItem[2] === ARRAY_MOVE) {\n        var moveFromIndex = parseInt(deltaIndex.substr(1), 10);\n        var moveToIndex = deltaItem[1];\n        if (moveToIndex === +index) {\n          return moveFromIndex;\n        }\n        if (moveFromIndex <= reverseIndex && moveToIndex > reverseIndex) {\n          reverseIndex++;\n        } else if (moveFromIndex >= reverseIndex && moveToIndex < reverseIndex) {\n          reverseIndex--;\n        }\n      } else if (deltaItem[2] === 0) {\n        var deleteIndex = parseInt(deltaIndex.substr(1), 10);\n        if (deleteIndex <= reverseIndex) {\n          reverseIndex++;\n        }\n      } else if (deltaItem.length === 1 && deltaIndex <= reverseIndex) {\n        reverseIndex--;\n      }\n    }\n  }\n\n  return reverseIndex;\n};\n\nfunction collectChildrenReverseFilter$1(context) {\n  if (!context || !context.children) {\n    return;\n  }\n  if (context.delta._t !== 'a') {\n    return;\n  }\n  var length = context.children.length;\n  var child = void 0;\n  var delta = {\n    _t: 'a'\n  };\n\n  for (var index = 0; index < length; index++) {\n    child = context.children[index];\n    var name = child.newName;\n    if (typeof name === 'undefined') {\n      name = reverseArrayDeltaIndex(context.delta, child.childName, child.result);\n    }\n    if (delta[name] !== child.result) {\n      delta[name] = child.result;\n    }\n  }\n  context.setResult(delta).exit();\n}\ncollectChildrenReverseFilter$1.filterName = 'arraysCollectChildren';\n\nvar diffFilter$2 = function datesDiffFilter(context) {\n  if (context.left instanceof Date) {\n    if (context.right instanceof Date) {\n      if (context.left.getTime() !== context.right.getTime()) {\n        context.setResult([context.left, context.right]);\n      } else {\n        context.setResult(undefined);\n      }\n    } else {\n      context.setResult([context.left, context.right]);\n    }\n    context.exit();\n  } else if (context.right instanceof Date) {\n    context.setResult([context.left, context.right]).exit();\n  }\n};\ndiffFilter$2.filterName = 'dates';\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar diffMatchPatch = createCommonjsModule(function (module) {\n/**\n * Diff Match and Patch\n * Copyright 2018 The diff-match-patch Authors.\n * https://github.com/google/diff-match-patch\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Computes the difference between two texts to create a patch.\n * Applies the patch onto another text, allowing for errors.\n * @author fraser@google.com (Neil Fraser)\n */\n\n/**\n * Class containing the diff, match and patch methods.\n * @constructor\n */\nfunction diff_match_patch() {\n\n  // Defaults.\n  // Redefine these in your program to override the defaults.\n\n  // Number of seconds to map a diff before giving up (0 for infinity).\n  this.Diff_Timeout = 1.0;\n  // Cost of an empty edit operation in terms of edit characters.\n  this.Diff_EditCost = 4;\n  // At what point is no match declared (0.0 = perfection, 1.0 = very loose).\n  this.Match_Threshold = 0.5;\n  // How far to search for a match (0 = exact location, 1000+ = broad match).\n  // A match this many characters away from the expected location will add\n  // 1.0 to the score (0.0 is a perfect match).\n  this.Match_Distance = 1000;\n  // When deleting a large block of text (over ~64 characters), how close do\n  // the contents have to be to match the expected contents. (0.0 = perfection,\n  // 1.0 = very loose).  Note that Match_Threshold controls how closely the\n  // end points of a delete need to match.\n  this.Patch_DeleteThreshold = 0.5;\n  // Chunk size for context length.\n  this.Patch_Margin = 4;\n\n  // The number of bits in an int.\n  this.Match_MaxBits = 32;\n}\n\n\n//  DIFF FUNCTIONS\n\n\n/**\n * The data structure representing a diff is an array of tuples:\n * [[DIFF_DELETE, 'Hello'], [DIFF_INSERT, 'Goodbye'], [DIFF_EQUAL, ' world.']]\n * which means: delete 'Hello', add 'Goodbye' and keep ' world.'\n */\nvar DIFF_DELETE = -1;\nvar DIFF_INSERT = 1;\nvar DIFF_EQUAL = 0;\n\n/** @typedef {{0: number, 1: string}} */\ndiff_match_patch.prototype.diff_main = function(text1, text2, opt_checklines,\n    opt_deadline) {\n  // Set a deadline by which time the diff must be complete.\n  if (typeof opt_deadline == 'undefined') {\n    if (this.Diff_Timeout <= 0) {\n      opt_deadline = Number.MAX_VALUE;\n    } else {\n      opt_deadline = (new Date).getTime() + this.Diff_Timeout * 1000;\n    }\n  }\n  var deadline = opt_deadline;\n\n  // Check for null inputs.\n  if (text1 == null || text2 == null) {\n    throw new Error('Null input. (diff_main)');\n  }\n\n  // Check for equality (speedup).\n  if (text1 == text2) {\n    if (text1) {\n      return [[DIFF_EQUAL, text1]];\n    }\n    return [];\n  }\n\n  if (typeof opt_checklines == 'undefined') {\n    opt_checklines = true;\n  }\n  var checklines = opt_checklines;\n\n  // Trim off common prefix (speedup).\n  var commonlength = this.diff_commonPrefix(text1, text2);\n  var commonprefix = text1.substring(0, commonlength);\n  text1 = text1.substring(commonlength);\n  text2 = text2.substring(commonlength);\n\n  // Trim off common suffix (speedup).\n  commonlength = this.diff_commonSuffix(text1, text2);\n  var commonsuffix = text1.substring(text1.length - commonlength);\n  text1 = text1.substring(0, text1.length - commonlength);\n  text2 = text2.substring(0, text2.length - commonlength);\n\n  // Compute the diff on the middle block.\n  var diffs = this.diff_compute_(text1, text2, checklines, deadline);\n\n  // Restore the prefix and suffix.\n  if (commonprefix) {\n    diffs.unshift([DIFF_EQUAL, commonprefix]);\n  }\n  if (commonsuffix) {\n    diffs.push([DIFF_EQUAL, commonsuffix]);\n  }\n  this.diff_cleanupMerge(diffs);\n  return diffs;\n};\n\n\n/**\n * Find the differences between two texts.  Assumes that the texts do not\n * have any common prefix or suffix.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {boolean} checklines Speedup flag.  If false, then don't run a\n *     line-level diff first to identify the changed areas.\n *     If true, then run a faster, slightly less optimal diff.\n * @param {number} deadline Time when the diff should be complete by.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n * @private\n */\ndiff_match_patch.prototype.diff_compute_ = function(text1, text2, checklines,\n    deadline) {\n  var diffs;\n\n  if (!text1) {\n    // Just add some text (speedup).\n    return [[DIFF_INSERT, text2]];\n  }\n\n  if (!text2) {\n    // Just delete some text (speedup).\n    return [[DIFF_DELETE, text1]];\n  }\n\n  var longtext = text1.length > text2.length ? text1 : text2;\n  var shorttext = text1.length > text2.length ? text2 : text1;\n  var i = longtext.indexOf(shorttext);\n  if (i != -1) {\n    // Shorter text is inside the longer text (speedup).\n    diffs = [[DIFF_INSERT, longtext.substring(0, i)],\n             [DIFF_EQUAL, shorttext],\n             [DIFF_INSERT, longtext.substring(i + shorttext.length)]];\n    // Swap insertions for deletions if diff is reversed.\n    if (text1.length > text2.length) {\n      diffs[0][0] = diffs[2][0] = DIFF_DELETE;\n    }\n    return diffs;\n  }\n\n  if (shorttext.length == 1) {\n    // Single character string.\n    // After the previous speedup, the character can't be an equality.\n    return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];\n  }\n\n  // Check to see if the problem can be split in two.\n  var hm = this.diff_halfMatch_(text1, text2);\n  if (hm) {\n    // A half-match was found, sort out the return data.\n    var text1_a = hm[0];\n    var text1_b = hm[1];\n    var text2_a = hm[2];\n    var text2_b = hm[3];\n    var mid_common = hm[4];\n    // Send both pairs off for separate processing.\n    var diffs_a = this.diff_main(text1_a, text2_a, checklines, deadline);\n    var diffs_b = this.diff_main(text1_b, text2_b, checklines, deadline);\n    // Merge the results.\n    return diffs_a.concat([[DIFF_EQUAL, mid_common]], diffs_b);\n  }\n\n  if (checklines && text1.length > 100 && text2.length > 100) {\n    return this.diff_lineMode_(text1, text2, deadline);\n  }\n\n  return this.diff_bisect_(text1, text2, deadline);\n};\n\n\n/**\n * Do a quick line-level diff on both strings, then rediff the parts for\n * greater accuracy.\n * This speedup can produce non-minimal diffs.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} deadline Time when the diff should be complete by.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n * @private\n */\ndiff_match_patch.prototype.diff_lineMode_ = function(text1, text2, deadline) {\n  // Scan the text on a line-by-line basis first.\n  var a = this.diff_linesToChars_(text1, text2);\n  text1 = a.chars1;\n  text2 = a.chars2;\n  var linearray = a.lineArray;\n\n  var diffs = this.diff_main(text1, text2, false, deadline);\n\n  // Convert the diff back to original text.\n  this.diff_charsToLines_(diffs, linearray);\n  // Eliminate freak matches (e.g. blank lines)\n  this.diff_cleanupSemantic(diffs);\n\n  // Rediff any replacement blocks, this time character-by-character.\n  // Add a dummy entry at the end.\n  diffs.push([DIFF_EQUAL, '']);\n  var pointer = 0;\n  var count_delete = 0;\n  var count_insert = 0;\n  var text_delete = '';\n  var text_insert = '';\n  while (pointer < diffs.length) {\n    switch (diffs[pointer][0]) {\n      case DIFF_INSERT:\n        count_insert++;\n        text_insert += diffs[pointer][1];\n        break;\n      case DIFF_DELETE:\n        count_delete++;\n        text_delete += diffs[pointer][1];\n        break;\n      case DIFF_EQUAL:\n        // Upon reaching an equality, check for prior redundancies.\n        if (count_delete >= 1 && count_insert >= 1) {\n          // Delete the offending records and add the merged ones.\n          diffs.splice(pointer - count_delete - count_insert,\n                       count_delete + count_insert);\n          pointer = pointer - count_delete - count_insert;\n          var a = this.diff_main(text_delete, text_insert, false, deadline);\n          for (var j = a.length - 1; j >= 0; j--) {\n            diffs.splice(pointer, 0, a[j]);\n          }\n          pointer = pointer + a.length;\n        }\n        count_insert = 0;\n        count_delete = 0;\n        text_delete = '';\n        text_insert = '';\n        break;\n    }\n    pointer++;\n  }\n  diffs.pop();  // Remove the dummy entry at the end.\n\n  return diffs;\n};\n\n\n/**\n * Find the 'middle snake' of a diff, split the problem in two\n * and return the recursively constructed diff.\n * See Myers 1986 paper: An O(ND) Difference Algorithm and Its Variations.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} deadline Time at which to bail if not yet complete.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n * @private\n */\ndiff_match_patch.prototype.diff_bisect_ = function(text1, text2, deadline) {\n  // Cache the text lengths to prevent multiple calls.\n  var text1_length = text1.length;\n  var text2_length = text2.length;\n  var max_d = Math.ceil((text1_length + text2_length) / 2);\n  var v_offset = max_d;\n  var v_length = 2 * max_d;\n  var v1 = new Array(v_length);\n  var v2 = new Array(v_length);\n  // Setting all elements to -1 is faster in Chrome & Firefox than mixing\n  // integers and undefined.\n  for (var x = 0; x < v_length; x++) {\n    v1[x] = -1;\n    v2[x] = -1;\n  }\n  v1[v_offset + 1] = 0;\n  v2[v_offset + 1] = 0;\n  var delta = text1_length - text2_length;\n  // If the total number of characters is odd, then the front path will collide\n  // with the reverse path.\n  var front = (delta % 2 != 0);\n  // Offsets for start and end of k loop.\n  // Prevents mapping of space beyond the grid.\n  var k1start = 0;\n  var k1end = 0;\n  var k2start = 0;\n  var k2end = 0;\n  for (var d = 0; d < max_d; d++) {\n    // Bail out if deadline is reached.\n    if ((new Date()).getTime() > deadline) {\n      break;\n    }\n\n    // Walk the front path one step.\n    for (var k1 = -d + k1start; k1 <= d - k1end; k1 += 2) {\n      var k1_offset = v_offset + k1;\n      var x1;\n      if (k1 == -d || (k1 != d && v1[k1_offset - 1] < v1[k1_offset + 1])) {\n        x1 = v1[k1_offset + 1];\n      } else {\n        x1 = v1[k1_offset - 1] + 1;\n      }\n      var y1 = x1 - k1;\n      while (x1 < text1_length && y1 < text2_length &&\n             text1.charAt(x1) == text2.charAt(y1)) {\n        x1++;\n        y1++;\n      }\n      v1[k1_offset] = x1;\n      if (x1 > text1_length) {\n        // Ran off the right of the graph.\n        k1end += 2;\n      } else if (y1 > text2_length) {\n        // Ran off the bottom of the graph.\n        k1start += 2;\n      } else if (front) {\n        var k2_offset = v_offset + delta - k1;\n        if (k2_offset >= 0 && k2_offset < v_length && v2[k2_offset] != -1) {\n          // Mirror x2 onto top-left coordinate system.\n          var x2 = text1_length - v2[k2_offset];\n          if (x1 >= x2) {\n            // Overlap detected.\n            return this.diff_bisectSplit_(text1, text2, x1, y1, deadline);\n          }\n        }\n      }\n    }\n\n    // Walk the reverse path one step.\n    for (var k2 = -d + k2start; k2 <= d - k2end; k2 += 2) {\n      var k2_offset = v_offset + k2;\n      var x2;\n      if (k2 == -d || (k2 != d && v2[k2_offset - 1] < v2[k2_offset + 1])) {\n        x2 = v2[k2_offset + 1];\n      } else {\n        x2 = v2[k2_offset - 1] + 1;\n      }\n      var y2 = x2 - k2;\n      while (x2 < text1_length && y2 < text2_length &&\n             text1.charAt(text1_length - x2 - 1) ==\n             text2.charAt(text2_length - y2 - 1)) {\n        x2++;\n        y2++;\n      }\n      v2[k2_offset] = x2;\n      if (x2 > text1_length) {\n        // Ran off the left of the graph.\n        k2end += 2;\n      } else if (y2 > text2_length) {\n        // Ran off the top of the graph.\n        k2start += 2;\n      } else if (!front) {\n        var k1_offset = v_offset + delta - k2;\n        if (k1_offset >= 0 && k1_offset < v_length && v1[k1_offset] != -1) {\n          var x1 = v1[k1_offset];\n          var y1 = v_offset + x1 - k1_offset;\n          // Mirror x2 onto top-left coordinate system.\n          x2 = text1_length - x2;\n          if (x1 >= x2) {\n            // Overlap detected.\n            return this.diff_bisectSplit_(text1, text2, x1, y1, deadline);\n          }\n        }\n      }\n    }\n  }\n  // Diff took too long and hit the deadline or\n  // number of diffs equals number of characters, no commonality at all.\n  return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];\n};\n\n\n/**\n * Given the location of the 'middle snake', split the diff in two parts\n * and recurse.\n * @param {string} text1 Old string to be diffed.\n * @param {string} text2 New string to be diffed.\n * @param {number} x Index of split point in text1.\n * @param {number} y Index of split point in text2.\n * @param {number} deadline Time at which to bail if not yet complete.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n * @private\n */\ndiff_match_patch.prototype.diff_bisectSplit_ = function(text1, text2, x, y,\n    deadline) {\n  var text1a = text1.substring(0, x);\n  var text2a = text2.substring(0, y);\n  var text1b = text1.substring(x);\n  var text2b = text2.substring(y);\n\n  // Compute both diffs serially.\n  var diffs = this.diff_main(text1a, text2a, false, deadline);\n  var diffsb = this.diff_main(text1b, text2b, false, deadline);\n\n  return diffs.concat(diffsb);\n};\n\n\n/**\n * Split two texts into an array of strings.  Reduce the texts to a string of\n * hashes where each Unicode character represents one line.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {{chars1: string, chars2: string, lineArray: !Array.<string>}}\n *     An object containing the encoded text1, the encoded text2 and\n *     the array of unique strings.\n *     The zeroth element of the array of unique strings is intentionally blank.\n * @private\n */\ndiff_match_patch.prototype.diff_linesToChars_ = function(text1, text2) {\n  var lineArray = [];  // e.g. lineArray[4] == 'Hello\\n'\n  var lineHash = {};   // e.g. lineHash['Hello\\n'] == 4\n\n  // '\\x00' is a valid character, but various debuggers don't like it.\n  // So we'll insert a junk entry to avoid generating a null character.\n  lineArray[0] = '';\n\n  /**\n   * Split a text into an array of strings.  Reduce the texts to a string of\n   * hashes where each Unicode character represents one line.\n   * Modifies linearray and linehash through being a closure.\n   * @param {string} text String to encode.\n   * @return {string} Encoded string.\n   * @private\n   */\n  function diff_linesToCharsMunge_(text) {\n    var chars = '';\n    // Walk the text, pulling out a substring for each line.\n    // text.split('\\n') would would temporarily double our memory footprint.\n    // Modifying text would create many large strings to garbage collect.\n    var lineStart = 0;\n    var lineEnd = -1;\n    // Keeping our own length variable is faster than looking it up.\n    var lineArrayLength = lineArray.length;\n    while (lineEnd < text.length - 1) {\n      lineEnd = text.indexOf('\\n', lineStart);\n      if (lineEnd == -1) {\n        lineEnd = text.length - 1;\n      }\n      var line = text.substring(lineStart, lineEnd + 1);\n      lineStart = lineEnd + 1;\n\n      if (lineHash.hasOwnProperty ? lineHash.hasOwnProperty(line) :\n          (lineHash[line] !== undefined)) {\n        chars += String.fromCharCode(lineHash[line]);\n      } else {\n        chars += String.fromCharCode(lineArrayLength);\n        lineHash[line] = lineArrayLength;\n        lineArray[lineArrayLength++] = line;\n      }\n    }\n    return chars;\n  }\n\n  var chars1 = diff_linesToCharsMunge_(text1);\n  var chars2 = diff_linesToCharsMunge_(text2);\n  return {chars1: chars1, chars2: chars2, lineArray: lineArray};\n};\n\n\n/**\n * Rehydrate the text in a diff from a string of line hashes to real lines of\n * text.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @param {!Array.<string>} lineArray Array of unique strings.\n * @private\n */\ndiff_match_patch.prototype.diff_charsToLines_ = function(diffs, lineArray) {\n  for (var x = 0; x < diffs.length; x++) {\n    var chars = diffs[x][1];\n    var text = [];\n    for (var y = 0; y < chars.length; y++) {\n      text[y] = lineArray[chars.charCodeAt(y)];\n    }\n    diffs[x][1] = text.join('');\n  }\n};\n\n\n/**\n * Determine the common prefix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the start of each\n *     string.\n */\ndiff_match_patch.prototype.diff_commonPrefix = function(text1, text2) {\n  // Quick check for common null cases.\n  if (!text1 || !text2 || text1.charAt(0) != text2.charAt(0)) {\n    return 0;\n  }\n  // Binary search.\n  // Performance analysis: http://neil.fraser.name/news/2007/10/09/\n  var pointermin = 0;\n  var pointermax = Math.min(text1.length, text2.length);\n  var pointermid = pointermax;\n  var pointerstart = 0;\n  while (pointermin < pointermid) {\n    if (text1.substring(pointerstart, pointermid) ==\n        text2.substring(pointerstart, pointermid)) {\n      pointermin = pointermid;\n      pointerstart = pointermin;\n    } else {\n      pointermax = pointermid;\n    }\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  }\n  return pointermid;\n};\n\n\n/**\n * Determine the common suffix of two strings.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the end of each string.\n */\ndiff_match_patch.prototype.diff_commonSuffix = function(text1, text2) {\n  // Quick check for common null cases.\n  if (!text1 || !text2 ||\n      text1.charAt(text1.length - 1) != text2.charAt(text2.length - 1)) {\n    return 0;\n  }\n  // Binary search.\n  // Performance analysis: http://neil.fraser.name/news/2007/10/09/\n  var pointermin = 0;\n  var pointermax = Math.min(text1.length, text2.length);\n  var pointermid = pointermax;\n  var pointerend = 0;\n  while (pointermin < pointermid) {\n    if (text1.substring(text1.length - pointermid, text1.length - pointerend) ==\n        text2.substring(text2.length - pointermid, text2.length - pointerend)) {\n      pointermin = pointermid;\n      pointerend = pointermin;\n    } else {\n      pointermax = pointermid;\n    }\n    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\n  }\n  return pointermid;\n};\n\n\n/**\n * Determine if the suffix of one string is the prefix of another.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {number} The number of characters common to the end of the first\n *     string and the start of the second string.\n * @private\n */\ndiff_match_patch.prototype.diff_commonOverlap_ = function(text1, text2) {\n  // Cache the text lengths to prevent multiple calls.\n  var text1_length = text1.length;\n  var text2_length = text2.length;\n  // Eliminate the null case.\n  if (text1_length == 0 || text2_length == 0) {\n    return 0;\n  }\n  // Truncate the longer string.\n  if (text1_length > text2_length) {\n    text1 = text1.substring(text1_length - text2_length);\n  } else if (text1_length < text2_length) {\n    text2 = text2.substring(0, text1_length);\n  }\n  var text_length = Math.min(text1_length, text2_length);\n  // Quick check for the worst case.\n  if (text1 == text2) {\n    return text_length;\n  }\n\n  // Start by looking for a single character match\n  // and increase length until no match is found.\n  // Performance analysis: http://neil.fraser.name/news/2010/11/04/\n  var best = 0;\n  var length = 1;\n  while (true) {\n    var pattern = text1.substring(text_length - length);\n    var found = text2.indexOf(pattern);\n    if (found == -1) {\n      return best;\n    }\n    length += found;\n    if (found == 0 || text1.substring(text_length - length) ==\n        text2.substring(0, length)) {\n      best = length;\n      length++;\n    }\n  }\n};\n\n\n/**\n * Do the two texts share a substring which is at least half the length of the\n * longer text?\n * This speedup can produce non-minimal diffs.\n * @param {string} text1 First string.\n * @param {string} text2 Second string.\n * @return {Array.<string>} Five element Array, containing the prefix of\n *     text1, the suffix of text1, the prefix of text2, the suffix of\n *     text2 and the common middle.  Or null if there was no match.\n * @private\n */\ndiff_match_patch.prototype.diff_halfMatch_ = function(text1, text2) {\n  if (this.Diff_Timeout <= 0) {\n    // Don't risk returning a non-optimal diff if we have unlimited time.\n    return null;\n  }\n  var longtext = text1.length > text2.length ? text1 : text2;\n  var shorttext = text1.length > text2.length ? text2 : text1;\n  if (longtext.length < 4 || shorttext.length * 2 < longtext.length) {\n    return null;  // Pointless.\n  }\n  var dmp = this;  // 'this' becomes 'window' in a closure.\n\n  /**\n   * Does a substring of shorttext exist within longtext such that the substring\n   * is at least half the length of longtext?\n   * Closure, but does not reference any external variables.\n   * @param {string} longtext Longer string.\n   * @param {string} shorttext Shorter string.\n   * @param {number} i Start index of quarter length substring within longtext.\n   * @return {Array.<string>} Five element Array, containing the prefix of\n   *     longtext, the suffix of longtext, the prefix of shorttext, the suffix\n   *     of shorttext and the common middle.  Or null if there was no match.\n   * @private\n   */\n  function diff_halfMatchI_(longtext, shorttext, i) {\n    // Start with a 1/4 length substring at position i as a seed.\n    var seed = longtext.substring(i, i + Math.floor(longtext.length / 4));\n    var j = -1;\n    var best_common = '';\n    var best_longtext_a, best_longtext_b, best_shorttext_a, best_shorttext_b;\n    while ((j = shorttext.indexOf(seed, j + 1)) != -1) {\n      var prefixLength = dmp.diff_commonPrefix(longtext.substring(i),\n                                               shorttext.substring(j));\n      var suffixLength = dmp.diff_commonSuffix(longtext.substring(0, i),\n                                               shorttext.substring(0, j));\n      if (best_common.length < suffixLength + prefixLength) {\n        best_common = shorttext.substring(j - suffixLength, j) +\n            shorttext.substring(j, j + prefixLength);\n        best_longtext_a = longtext.substring(0, i - suffixLength);\n        best_longtext_b = longtext.substring(i + prefixLength);\n        best_shorttext_a = shorttext.substring(0, j - suffixLength);\n        best_shorttext_b = shorttext.substring(j + prefixLength);\n      }\n    }\n    if (best_common.length * 2 >= longtext.length) {\n      return [best_longtext_a, best_longtext_b,\n              best_shorttext_a, best_shorttext_b, best_common];\n    } else {\n      return null;\n    }\n  }\n\n  // First check if the second quarter is the seed for a half-match.\n  var hm1 = diff_halfMatchI_(longtext, shorttext,\n                             Math.ceil(longtext.length / 4));\n  // Check again based on the third quarter.\n  var hm2 = diff_halfMatchI_(longtext, shorttext,\n                             Math.ceil(longtext.length / 2));\n  var hm;\n  if (!hm1 && !hm2) {\n    return null;\n  } else if (!hm2) {\n    hm = hm1;\n  } else if (!hm1) {\n    hm = hm2;\n  } else {\n    // Both matched.  Select the longest.\n    hm = hm1[4].length > hm2[4].length ? hm1 : hm2;\n  }\n\n  // A half-match was found, sort out the return data.\n  var text1_a, text1_b, text2_a, text2_b;\n  if (text1.length > text2.length) {\n    text1_a = hm[0];\n    text1_b = hm[1];\n    text2_a = hm[2];\n    text2_b = hm[3];\n  } else {\n    text2_a = hm[0];\n    text2_b = hm[1];\n    text1_a = hm[2];\n    text1_b = hm[3];\n  }\n  var mid_common = hm[4];\n  return [text1_a, text1_b, text2_a, text2_b, mid_common];\n};\n\n\n/**\n * Reduce the number of edits by eliminating semantically trivial equalities.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n */\ndiff_match_patch.prototype.diff_cleanupSemantic = function(diffs) {\n  var changes = false;\n  var equalities = [];  // Stack of indices where equalities are found.\n  var equalitiesLength = 0;  // Keeping our own length var is faster in JS.\n  /** @type {?string} */\n  var lastequality = null;\n  // Always equal to diffs[equalities[equalitiesLength - 1]][1]\n  var pointer = 0;  // Index of current position.\n  // Number of characters that changed prior to the equality.\n  var length_insertions1 = 0;\n  var length_deletions1 = 0;\n  // Number of characters that changed after the equality.\n  var length_insertions2 = 0;\n  var length_deletions2 = 0;\n  while (pointer < diffs.length) {\n    if (diffs[pointer][0] == DIFF_EQUAL) {  // Equality found.\n      equalities[equalitiesLength++] = pointer;\n      length_insertions1 = length_insertions2;\n      length_deletions1 = length_deletions2;\n      length_insertions2 = 0;\n      length_deletions2 = 0;\n      lastequality = diffs[pointer][1];\n    } else {  // An insertion or deletion.\n      if (diffs[pointer][0] == DIFF_INSERT) {\n        length_insertions2 += diffs[pointer][1].length;\n      } else {\n        length_deletions2 += diffs[pointer][1].length;\n      }\n      // Eliminate an equality that is smaller or equal to the edits on both\n      // sides of it.\n      if (lastequality && (lastequality.length <=\n          Math.max(length_insertions1, length_deletions1)) &&\n          (lastequality.length <= Math.max(length_insertions2,\n                                           length_deletions2))) {\n        // Duplicate record.\n        diffs.splice(equalities[equalitiesLength - 1], 0,\n                     [DIFF_DELETE, lastequality]);\n        // Change second copy to insert.\n        diffs[equalities[equalitiesLength - 1] + 1][0] = DIFF_INSERT;\n        // Throw away the equality we just deleted.\n        equalitiesLength--;\n        // Throw away the previous equality (it needs to be reevaluated).\n        equalitiesLength--;\n        pointer = equalitiesLength > 0 ? equalities[equalitiesLength - 1] : -1;\n        length_insertions1 = 0;  // Reset the counters.\n        length_deletions1 = 0;\n        length_insertions2 = 0;\n        length_deletions2 = 0;\n        lastequality = null;\n        changes = true;\n      }\n    }\n    pointer++;\n  }\n\n  // Normalize the diff.\n  if (changes) {\n    this.diff_cleanupMerge(diffs);\n  }\n  this.diff_cleanupSemanticLossless(diffs);\n\n  // Find any overlaps between deletions and insertions.\n  // e.g: <del>abcxxx</del><ins>xxxdef</ins>\n  //   -> <del>abc</del>xxx<ins>def</ins>\n  // e.g: <del>xxxabc</del><ins>defxxx</ins>\n  //   -> <ins>def</ins>xxx<del>abc</del>\n  // Only extract an overlap if it is as big as the edit ahead or behind it.\n  pointer = 1;\n  while (pointer < diffs.length) {\n    if (diffs[pointer - 1][0] == DIFF_DELETE &&\n        diffs[pointer][0] == DIFF_INSERT) {\n      var deletion = diffs[pointer - 1][1];\n      var insertion = diffs[pointer][1];\n      var overlap_length1 = this.diff_commonOverlap_(deletion, insertion);\n      var overlap_length2 = this.diff_commonOverlap_(insertion, deletion);\n      if (overlap_length1 >= overlap_length2) {\n        if (overlap_length1 >= deletion.length / 2 ||\n            overlap_length1 >= insertion.length / 2) {\n          // Overlap found.  Insert an equality and trim the surrounding edits.\n          diffs.splice(pointer, 0,\n              [DIFF_EQUAL, insertion.substring(0, overlap_length1)]);\n          diffs[pointer - 1][1] =\n              deletion.substring(0, deletion.length - overlap_length1);\n          diffs[pointer + 1][1] = insertion.substring(overlap_length1);\n          pointer++;\n        }\n      } else {\n        if (overlap_length2 >= deletion.length / 2 ||\n            overlap_length2 >= insertion.length / 2) {\n          // Reverse overlap found.\n          // Insert an equality and swap and trim the surrounding edits.\n          diffs.splice(pointer, 0,\n              [DIFF_EQUAL, deletion.substring(0, overlap_length2)]);\n          diffs[pointer - 1][0] = DIFF_INSERT;\n          diffs[pointer - 1][1] =\n              insertion.substring(0, insertion.length - overlap_length2);\n          diffs[pointer + 1][0] = DIFF_DELETE;\n          diffs[pointer + 1][1] =\n              deletion.substring(overlap_length2);\n          pointer++;\n        }\n      }\n      pointer++;\n    }\n    pointer++;\n  }\n};\n\n\n/**\n * Look for single edits surrounded on both sides by equalities\n * which can be shifted sideways to align the edit to a word boundary.\n * e.g: The c<ins>at c</ins>ame. -> The <ins>cat </ins>came.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n */\ndiff_match_patch.prototype.diff_cleanupSemanticLossless = function(diffs) {\n  /**\n   * Given two strings, compute a score representing whether the internal\n   * boundary falls on logical boundaries.\n   * Scores range from 6 (best) to 0 (worst).\n   * Closure, but does not reference any external variables.\n   * @param {string} one First string.\n   * @param {string} two Second string.\n   * @return {number} The score.\n   * @private\n   */\n  function diff_cleanupSemanticScore_(one, two) {\n    if (!one || !two) {\n      // Edges are the best.\n      return 6;\n    }\n\n    // Each port of this function behaves slightly differently due to\n    // subtle differences in each language's definition of things like\n    // 'whitespace'.  Since this function's purpose is largely cosmetic,\n    // the choice has been made to use each language's native features\n    // rather than force total conformity.\n    var char1 = one.charAt(one.length - 1);\n    var char2 = two.charAt(0);\n    var nonAlphaNumeric1 = char1.match(diff_match_patch.nonAlphaNumericRegex_);\n    var nonAlphaNumeric2 = char2.match(diff_match_patch.nonAlphaNumericRegex_);\n    var whitespace1 = nonAlphaNumeric1 &&\n        char1.match(diff_match_patch.whitespaceRegex_);\n    var whitespace2 = nonAlphaNumeric2 &&\n        char2.match(diff_match_patch.whitespaceRegex_);\n    var lineBreak1 = whitespace1 &&\n        char1.match(diff_match_patch.linebreakRegex_);\n    var lineBreak2 = whitespace2 &&\n        char2.match(diff_match_patch.linebreakRegex_);\n    var blankLine1 = lineBreak1 &&\n        one.match(diff_match_patch.blanklineEndRegex_);\n    var blankLine2 = lineBreak2 &&\n        two.match(diff_match_patch.blanklineStartRegex_);\n\n    if (blankLine1 || blankLine2) {\n      // Five points for blank lines.\n      return 5;\n    } else if (lineBreak1 || lineBreak2) {\n      // Four points for line breaks.\n      return 4;\n    } else if (nonAlphaNumeric1 && !whitespace1 && whitespace2) {\n      // Three points for end of sentences.\n      return 3;\n    } else if (whitespace1 || whitespace2) {\n      // Two points for whitespace.\n      return 2;\n    } else if (nonAlphaNumeric1 || nonAlphaNumeric2) {\n      // One point for non-alphanumeric.\n      return 1;\n    }\n    return 0;\n  }\n\n  var pointer = 1;\n  // Intentionally ignore the first and last element (don't need checking).\n  while (pointer < diffs.length - 1) {\n    if (diffs[pointer - 1][0] == DIFF_EQUAL &&\n        diffs[pointer + 1][0] == DIFF_EQUAL) {\n      // This is a single edit surrounded by equalities.\n      var equality1 = diffs[pointer - 1][1];\n      var edit = diffs[pointer][1];\n      var equality2 = diffs[pointer + 1][1];\n\n      // First, shift the edit as far left as possible.\n      var commonOffset = this.diff_commonSuffix(equality1, edit);\n      if (commonOffset) {\n        var commonString = edit.substring(edit.length - commonOffset);\n        equality1 = equality1.substring(0, equality1.length - commonOffset);\n        edit = commonString + edit.substring(0, edit.length - commonOffset);\n        equality2 = commonString + equality2;\n      }\n\n      // Second, step character by character right, looking for the best fit.\n      var bestEquality1 = equality1;\n      var bestEdit = edit;\n      var bestEquality2 = equality2;\n      var bestScore = diff_cleanupSemanticScore_(equality1, edit) +\n          diff_cleanupSemanticScore_(edit, equality2);\n      while (edit.charAt(0) === equality2.charAt(0)) {\n        equality1 += edit.charAt(0);\n        edit = edit.substring(1) + equality2.charAt(0);\n        equality2 = equality2.substring(1);\n        var score = diff_cleanupSemanticScore_(equality1, edit) +\n            diff_cleanupSemanticScore_(edit, equality2);\n        // The >= encourages trailing rather than leading whitespace on edits.\n        if (score >= bestScore) {\n          bestScore = score;\n          bestEquality1 = equality1;\n          bestEdit = edit;\n          bestEquality2 = equality2;\n        }\n      }\n\n      if (diffs[pointer - 1][1] != bestEquality1) {\n        // We have an improvement, save it back to the diff.\n        if (bestEquality1) {\n          diffs[pointer - 1][1] = bestEquality1;\n        } else {\n          diffs.splice(pointer - 1, 1);\n          pointer--;\n        }\n        diffs[pointer][1] = bestEdit;\n        if (bestEquality2) {\n          diffs[pointer + 1][1] = bestEquality2;\n        } else {\n          diffs.splice(pointer + 1, 1);\n          pointer--;\n        }\n      }\n    }\n    pointer++;\n  }\n};\n\n// Define some regex patterns for matching boundaries.\ndiff_match_patch.nonAlphaNumericRegex_ = /[^a-zA-Z0-9]/;\ndiff_match_patch.whitespaceRegex_ = /\\s/;\ndiff_match_patch.linebreakRegex_ = /[\\r\\n]/;\ndiff_match_patch.blanklineEndRegex_ = /\\n\\r?\\n$/;\ndiff_match_patch.blanklineStartRegex_ = /^\\r?\\n\\r?\\n/;\n\n/**\n * Reduce the number of edits by eliminating operationally trivial equalities.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n */\ndiff_match_patch.prototype.diff_cleanupEfficiency = function(diffs) {\n  var changes = false;\n  var equalities = [];  // Stack of indices where equalities are found.\n  var equalitiesLength = 0;  // Keeping our own length var is faster in JS.\n  /** @type {?string} */\n  var lastequality = null;\n  // Always equal to diffs[equalities[equalitiesLength - 1]][1]\n  var pointer = 0;  // Index of current position.\n  // Is there an insertion operation before the last equality.\n  var pre_ins = false;\n  // Is there a deletion operation before the last equality.\n  var pre_del = false;\n  // Is there an insertion operation after the last equality.\n  var post_ins = false;\n  // Is there a deletion operation after the last equality.\n  var post_del = false;\n  while (pointer < diffs.length) {\n    if (diffs[pointer][0] == DIFF_EQUAL) {  // Equality found.\n      if (diffs[pointer][1].length < this.Diff_EditCost &&\n          (post_ins || post_del)) {\n        // Candidate found.\n        equalities[equalitiesLength++] = pointer;\n        pre_ins = post_ins;\n        pre_del = post_del;\n        lastequality = diffs[pointer][1];\n      } else {\n        // Not a candidate, and can never become one.\n        equalitiesLength = 0;\n        lastequality = null;\n      }\n      post_ins = post_del = false;\n    } else {  // An insertion or deletion.\n      if (diffs[pointer][0] == DIFF_DELETE) {\n        post_del = true;\n      } else {\n        post_ins = true;\n      }\n      /*\n       * Five types to be split:\n       * <ins>A</ins><del>B</del>XY<ins>C</ins><del>D</del>\n       * <ins>A</ins>X<ins>C</ins><del>D</del>\n       * <ins>A</ins><del>B</del>X<ins>C</ins>\n       * <ins>A</del>X<ins>C</ins><del>D</del>\n       * <ins>A</ins><del>B</del>X<del>C</del>\n       */\n      if (lastequality && ((pre_ins && pre_del && post_ins && post_del) ||\n                           ((lastequality.length < this.Diff_EditCost / 2) &&\n                            (pre_ins + pre_del + post_ins + post_del) == 3))) {\n        // Duplicate record.\n        diffs.splice(equalities[equalitiesLength - 1], 0,\n                     [DIFF_DELETE, lastequality]);\n        // Change second copy to insert.\n        diffs[equalities[equalitiesLength - 1] + 1][0] = DIFF_INSERT;\n        equalitiesLength--;  // Throw away the equality we just deleted;\n        lastequality = null;\n        if (pre_ins && pre_del) {\n          // No changes made which could affect previous entry, keep going.\n          post_ins = post_del = true;\n          equalitiesLength = 0;\n        } else {\n          equalitiesLength--;  // Throw away the previous equality.\n          pointer = equalitiesLength > 0 ?\n              equalities[equalitiesLength - 1] : -1;\n          post_ins = post_del = false;\n        }\n        changes = true;\n      }\n    }\n    pointer++;\n  }\n\n  if (changes) {\n    this.diff_cleanupMerge(diffs);\n  }\n};\n\n\n/**\n * Reorder and merge like edit sections.  Merge equalities.\n * Any edit section can move as long as it doesn't cross an equality.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n */\ndiff_match_patch.prototype.diff_cleanupMerge = function(diffs) {\n  diffs.push([DIFF_EQUAL, '']);  // Add a dummy entry at the end.\n  var pointer = 0;\n  var count_delete = 0;\n  var count_insert = 0;\n  var text_delete = '';\n  var text_insert = '';\n  var commonlength;\n  while (pointer < diffs.length) {\n    switch (diffs[pointer][0]) {\n      case DIFF_INSERT:\n        count_insert++;\n        text_insert += diffs[pointer][1];\n        pointer++;\n        break;\n      case DIFF_DELETE:\n        count_delete++;\n        text_delete += diffs[pointer][1];\n        pointer++;\n        break;\n      case DIFF_EQUAL:\n        // Upon reaching an equality, check for prior redundancies.\n        if (count_delete + count_insert > 1) {\n          if (count_delete !== 0 && count_insert !== 0) {\n            // Factor out any common prefixies.\n            commonlength = this.diff_commonPrefix(text_insert, text_delete);\n            if (commonlength !== 0) {\n              if ((pointer - count_delete - count_insert) > 0 &&\n                  diffs[pointer - count_delete - count_insert - 1][0] ==\n                  DIFF_EQUAL) {\n                diffs[pointer - count_delete - count_insert - 1][1] +=\n                    text_insert.substring(0, commonlength);\n              } else {\n                diffs.splice(0, 0, [DIFF_EQUAL,\n                                    text_insert.substring(0, commonlength)]);\n                pointer++;\n              }\n              text_insert = text_insert.substring(commonlength);\n              text_delete = text_delete.substring(commonlength);\n            }\n            // Factor out any common suffixies.\n            commonlength = this.diff_commonSuffix(text_insert, text_delete);\n            if (commonlength !== 0) {\n              diffs[pointer][1] = text_insert.substring(text_insert.length -\n                  commonlength) + diffs[pointer][1];\n              text_insert = text_insert.substring(0, text_insert.length -\n                  commonlength);\n              text_delete = text_delete.substring(0, text_delete.length -\n                  commonlength);\n            }\n          }\n          // Delete the offending records and add the merged ones.\n          if (count_delete === 0) {\n            diffs.splice(pointer - count_insert,\n                count_delete + count_insert, [DIFF_INSERT, text_insert]);\n          } else if (count_insert === 0) {\n            diffs.splice(pointer - count_delete,\n                count_delete + count_insert, [DIFF_DELETE, text_delete]);\n          } else {\n            diffs.splice(pointer - count_delete - count_insert,\n                count_delete + count_insert, [DIFF_DELETE, text_delete],\n                [DIFF_INSERT, text_insert]);\n          }\n          pointer = pointer - count_delete - count_insert +\n                    (count_delete ? 1 : 0) + (count_insert ? 1 : 0) + 1;\n        } else if (pointer !== 0 && diffs[pointer - 1][0] == DIFF_EQUAL) {\n          // Merge this equality with the previous one.\n          diffs[pointer - 1][1] += diffs[pointer][1];\n          diffs.splice(pointer, 1);\n        } else {\n          pointer++;\n        }\n        count_insert = 0;\n        count_delete = 0;\n        text_delete = '';\n        text_insert = '';\n        break;\n    }\n  }\n  if (diffs[diffs.length - 1][1] === '') {\n    diffs.pop();  // Remove the dummy entry at the end.\n  }\n\n  // Second pass: look for single edits surrounded on both sides by equalities\n  // which can be shifted sideways to eliminate an equality.\n  // e.g: A<ins>BA</ins>C -> <ins>AB</ins>AC\n  var changes = false;\n  pointer = 1;\n  // Intentionally ignore the first and last element (don't need checking).\n  while (pointer < diffs.length - 1) {\n    if (diffs[pointer - 1][0] == DIFF_EQUAL &&\n        diffs[pointer + 1][0] == DIFF_EQUAL) {\n      // This is a single edit surrounded by equalities.\n      if (diffs[pointer][1].substring(diffs[pointer][1].length -\n          diffs[pointer - 1][1].length) == diffs[pointer - 1][1]) {\n        // Shift the edit over the previous equality.\n        diffs[pointer][1] = diffs[pointer - 1][1] +\n            diffs[pointer][1].substring(0, diffs[pointer][1].length -\n                                        diffs[pointer - 1][1].length);\n        diffs[pointer + 1][1] = diffs[pointer - 1][1] + diffs[pointer + 1][1];\n        diffs.splice(pointer - 1, 1);\n        changes = true;\n      } else if (diffs[pointer][1].substring(0, diffs[pointer + 1][1].length) ==\n          diffs[pointer + 1][1]) {\n        // Shift the edit over the next equality.\n        diffs[pointer - 1][1] += diffs[pointer + 1][1];\n        diffs[pointer][1] =\n            diffs[pointer][1].substring(diffs[pointer + 1][1].length) +\n            diffs[pointer + 1][1];\n        diffs.splice(pointer + 1, 1);\n        changes = true;\n      }\n    }\n    pointer++;\n  }\n  // If shifts were made, the diff needs reordering and another shift sweep.\n  if (changes) {\n    this.diff_cleanupMerge(diffs);\n  }\n};\n\n\n/**\n * loc is a location in text1, compute and return the equivalent location in\n * text2.\n * e.g. 'The cat' vs 'The big cat', 1->1, 5->8\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @param {number} loc Location within text1.\n * @return {number} Location within text2.\n */\ndiff_match_patch.prototype.diff_xIndex = function(diffs, loc) {\n  var chars1 = 0;\n  var chars2 = 0;\n  var last_chars1 = 0;\n  var last_chars2 = 0;\n  var x;\n  for (x = 0; x < diffs.length; x++) {\n    if (diffs[x][0] !== DIFF_INSERT) {  // Equality or deletion.\n      chars1 += diffs[x][1].length;\n    }\n    if (diffs[x][0] !== DIFF_DELETE) {  // Equality or insertion.\n      chars2 += diffs[x][1].length;\n    }\n    if (chars1 > loc) {  // Overshot the location.\n      break;\n    }\n    last_chars1 = chars1;\n    last_chars2 = chars2;\n  }\n  // Was the location was deleted?\n  if (diffs.length != x && diffs[x][0] === DIFF_DELETE) {\n    return last_chars2;\n  }\n  // Add the remaining character length.\n  return last_chars2 + (loc - last_chars1);\n};\n\n\n/**\n * Convert a diff array into a pretty HTML report.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @return {string} HTML representation.\n */\ndiff_match_patch.prototype.diff_prettyHtml = function(diffs) {\n  var html = [];\n  var pattern_amp = /&/g;\n  var pattern_lt = /</g;\n  var pattern_gt = />/g;\n  var pattern_para = /\\n/g;\n  for (var x = 0; x < diffs.length; x++) {\n    var op = diffs[x][0];    // Operation (insert, delete, equal)\n    var data = diffs[x][1];  // Text of change.\n    var text = data.replace(pattern_amp, '&amp;').replace(pattern_lt, '&lt;')\n        .replace(pattern_gt, '&gt;').replace(pattern_para, '&para;<br>');\n    switch (op) {\n      case DIFF_INSERT:\n        html[x] = '<ins style=\"background:#e6ffe6;\">' + text + '</ins>';\n        break;\n      case DIFF_DELETE:\n        html[x] = '<del style=\"background:#ffe6e6;\">' + text + '</del>';\n        break;\n      case DIFF_EQUAL:\n        html[x] = '<span>' + text + '</span>';\n        break;\n    }\n  }\n  return html.join('');\n};\n\n\n/**\n * Compute and return the source text (all equalities and deletions).\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @return {string} Source text.\n */\ndiff_match_patch.prototype.diff_text1 = function(diffs) {\n  var text = [];\n  for (var x = 0; x < diffs.length; x++) {\n    if (diffs[x][0] !== DIFF_INSERT) {\n      text[x] = diffs[x][1];\n    }\n  }\n  return text.join('');\n};\n\n\n/**\n * Compute and return the destination text (all equalities and insertions).\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @return {string} Destination text.\n */\ndiff_match_patch.prototype.diff_text2 = function(diffs) {\n  var text = [];\n  for (var x = 0; x < diffs.length; x++) {\n    if (diffs[x][0] !== DIFF_DELETE) {\n      text[x] = diffs[x][1];\n    }\n  }\n  return text.join('');\n};\n\n\n/**\n * Compute the Levenshtein distance; the number of inserted, deleted or\n * substituted characters.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @return {number} Number of changes.\n */\ndiff_match_patch.prototype.diff_levenshtein = function(diffs) {\n  var levenshtein = 0;\n  var insertions = 0;\n  var deletions = 0;\n  for (var x = 0; x < diffs.length; x++) {\n    var op = diffs[x][0];\n    var data = diffs[x][1];\n    switch (op) {\n      case DIFF_INSERT:\n        insertions += data.length;\n        break;\n      case DIFF_DELETE:\n        deletions += data.length;\n        break;\n      case DIFF_EQUAL:\n        // A deletion and an insertion is one substitution.\n        levenshtein += Math.max(insertions, deletions);\n        insertions = 0;\n        deletions = 0;\n        break;\n    }\n  }\n  levenshtein += Math.max(insertions, deletions);\n  return levenshtein;\n};\n\n\n/**\n * Crush the diff into an encoded string which describes the operations\n * required to transform text1 into text2.\n * E.g. =3\\t-2\\t+ing  -> Keep 3 chars, delete 2 chars, insert 'ing'.\n * Operations are tab-separated.  Inserted text is escaped using %xx notation.\n * @param {!Array.<!diff_match_patch.Diff>} diffs Array of diff tuples.\n * @return {string} Delta text.\n */\ndiff_match_patch.prototype.diff_toDelta = function(diffs) {\n  var text = [];\n  for (var x = 0; x < diffs.length; x++) {\n    switch (diffs[x][0]) {\n      case DIFF_INSERT:\n        text[x] = '+' + encodeURI(diffs[x][1]);\n        break;\n      case DIFF_DELETE:\n        text[x] = '-' + diffs[x][1].length;\n        break;\n      case DIFF_EQUAL:\n        text[x] = '=' + diffs[x][1].length;\n        break;\n    }\n  }\n  return text.join('\\t').replace(/%20/g, ' ');\n};\n\n\n/**\n * Given the original text1, and an encoded string which describes the\n * operations required to transform text1 into text2, compute the full diff.\n * @param {string} text1 Source string for the diff.\n * @param {string} delta Delta text.\n * @return {!Array.<!diff_match_patch.Diff>} Array of diff tuples.\n * @throws {!Error} If invalid input.\n */\ndiff_match_patch.prototype.diff_fromDelta = function(text1, delta) {\n  var diffs = [];\n  var diffsLength = 0;  // Keeping our own length var is faster in JS.\n  var pointer = 0;  // Cursor in text1\n  var tokens = delta.split(/\\t/g);\n  for (var x = 0; x < tokens.length; x++) {\n    // Each token begins with a one character parameter which specifies the\n    // operation of this token (delete, insert, equality).\n    var param = tokens[x].substring(1);\n    switch (tokens[x].charAt(0)) {\n      case '+':\n        try {\n          diffs[diffsLength++] = [DIFF_INSERT, decodeURI(param)];\n        } catch (ex) {\n          // Malformed URI sequence.\n          throw new Error('Illegal escape in diff_fromDelta: ' + param);\n        }\n        break;\n      case '-':\n        // Fall through.\n      case '=':\n        var n = parseInt(param, 10);\n        if (isNaN(n) || n < 0) {\n          throw new Error('Invalid number in diff_fromDelta: ' + param);\n        }\n        var text = text1.substring(pointer, pointer += n);\n        if (tokens[x].charAt(0) == '=') {\n          diffs[diffsLength++] = [DIFF_EQUAL, text];\n        } else {\n          diffs[diffsLength++] = [DIFF_DELETE, text];\n        }\n        break;\n      default:\n        // Blank tokens are ok (from a trailing \\t).\n        // Anything else is an error.\n        if (tokens[x]) {\n          throw new Error('Invalid diff operation in diff_fromDelta: ' +\n                          tokens[x]);\n        }\n    }\n  }\n  if (pointer != text1.length) {\n    throw new Error('Delta length (' + pointer +\n        ') does not equal source text length (' + text1.length + ').');\n  }\n  return diffs;\n};\n\n\n//  MATCH FUNCTIONS\n\n\n/**\n * Locate the best instance of 'pattern' in 'text' near 'loc'.\n * @param {string} text The text to search.\n * @param {string} pattern The pattern to search for.\n * @param {number} loc The location to search around.\n * @return {number} Best match index or -1.\n */\ndiff_match_patch.prototype.match_main = function(text, pattern, loc) {\n  // Check for null inputs.\n  if (text == null || pattern == null || loc == null) {\n    throw new Error('Null input. (match_main)');\n  }\n\n  loc = Math.max(0, Math.min(loc, text.length));\n  if (text == pattern) {\n    // Shortcut (potentially not guaranteed by the algorithm)\n    return 0;\n  } else if (!text.length) {\n    // Nothing to match.\n    return -1;\n  } else if (text.substring(loc, loc + pattern.length) == pattern) {\n    // Perfect match at the perfect spot!  (Includes case of null pattern)\n    return loc;\n  } else {\n    // Do a fuzzy compare.\n    return this.match_bitap_(text, pattern, loc);\n  }\n};\n\n\n/**\n * Locate the best instance of 'pattern' in 'text' near 'loc' using the\n * Bitap algorithm.\n * @param {string} text The text to search.\n * @param {string} pattern The pattern to search for.\n * @param {number} loc The location to search around.\n * @return {number} Best match index or -1.\n * @private\n */\ndiff_match_patch.prototype.match_bitap_ = function(text, pattern, loc) {\n  if (pattern.length > this.Match_MaxBits) {\n    throw new Error('Pattern too long for this browser.');\n  }\n\n  // Initialise the alphabet.\n  var s = this.match_alphabet_(pattern);\n\n  var dmp = this;  // 'this' becomes 'window' in a closure.\n\n  /**\n   * Compute and return the score for a match with e errors and x location.\n   * Accesses loc and pattern through being a closure.\n   * @param {number} e Number of errors in match.\n   * @param {number} x Location of match.\n   * @return {number} Overall score for match (0.0 = good, 1.0 = bad).\n   * @private\n   */\n  function match_bitapScore_(e, x) {\n    var accuracy = e / pattern.length;\n    var proximity = Math.abs(loc - x);\n    if (!dmp.Match_Distance) {\n      // Dodge divide by zero error.\n      return proximity ? 1.0 : accuracy;\n    }\n    return accuracy + (proximity / dmp.Match_Distance);\n  }\n\n  // Highest score beyond which we give up.\n  var score_threshold = this.Match_Threshold;\n  // Is there a nearby exact match? (speedup)\n  var best_loc = text.indexOf(pattern, loc);\n  if (best_loc != -1) {\n    score_threshold = Math.min(match_bitapScore_(0, best_loc), score_threshold);\n    // What about in the other direction? (speedup)\n    best_loc = text.lastIndexOf(pattern, loc + pattern.length);\n    if (best_loc != -1) {\n      score_threshold =\n          Math.min(match_bitapScore_(0, best_loc), score_threshold);\n    }\n  }\n\n  // Initialise the bit arrays.\n  var matchmask = 1 << (pattern.length - 1);\n  best_loc = -1;\n\n  var bin_min, bin_mid;\n  var bin_max = pattern.length + text.length;\n  var last_rd;\n  for (var d = 0; d < pattern.length; d++) {\n    // Scan for the best match; each iteration allows for one more error.\n    // Run a binary search to determine how far from 'loc' we can stray at this\n    // error level.\n    bin_min = 0;\n    bin_mid = bin_max;\n    while (bin_min < bin_mid) {\n      if (match_bitapScore_(d, loc + bin_mid) <= score_threshold) {\n        bin_min = bin_mid;\n      } else {\n        bin_max = bin_mid;\n      }\n      bin_mid = Math.floor((bin_max - bin_min) / 2 + bin_min);\n    }\n    // Use the result from this iteration as the maximum for the next.\n    bin_max = bin_mid;\n    var start = Math.max(1, loc - bin_mid + 1);\n    var finish = Math.min(loc + bin_mid, text.length) + pattern.length;\n\n    var rd = Array(finish + 2);\n    rd[finish + 1] = (1 << d) - 1;\n    for (var j = finish; j >= start; j--) {\n      // The alphabet (s) is a sparse hash, so the following line generates\n      // warnings.\n      var charMatch = s[text.charAt(j - 1)];\n      if (d === 0) {  // First pass: exact match.\n        rd[j] = ((rd[j + 1] << 1) | 1) & charMatch;\n      } else {  // Subsequent passes: fuzzy match.\n        rd[j] = (((rd[j + 1] << 1) | 1) & charMatch) |\n                (((last_rd[j + 1] | last_rd[j]) << 1) | 1) |\n                last_rd[j + 1];\n      }\n      if (rd[j] & matchmask) {\n        var score = match_bitapScore_(d, j - 1);\n        // This match will almost certainly be better than any existing match.\n        // But check anyway.\n        if (score <= score_threshold) {\n          // Told you so.\n          score_threshold = score;\n          best_loc = j - 1;\n          if (best_loc > loc) {\n            // When passing loc, don't exceed our current distance from loc.\n            start = Math.max(1, 2 * loc - best_loc);\n          } else {\n            // Already passed loc, downhill from here on in.\n            break;\n          }\n        }\n      }\n    }\n    // No hope for a (better) match at greater error levels.\n    if (match_bitapScore_(d + 1, loc) > score_threshold) {\n      break;\n    }\n    last_rd = rd;\n  }\n  return best_loc;\n};\n\n\n/**\n * Initialise the alphabet for the Bitap algorithm.\n * @param {string} pattern The text to encode.\n * @return {!Object} Hash of character locations.\n * @private\n */\ndiff_match_patch.prototype.match_alphabet_ = function(pattern) {\n  var s = {};\n  for (var i = 0; i < pattern.length; i++) {\n    s[pattern.charAt(i)] = 0;\n  }\n  for (var i = 0; i < pattern.length; i++) {\n    s[pattern.charAt(i)] |= 1 << (pattern.length - i - 1);\n  }\n  return s;\n};\n\n\n//  PATCH FUNCTIONS\n\n\n/**\n * Increase the context until it is unique,\n * but don't let the pattern expand beyond Match_MaxBits.\n * @param {!diff_match_patch.patch_obj} patch The patch to grow.\n * @param {string} text Source text.\n * @private\n */\ndiff_match_patch.prototype.patch_addContext_ = function(patch, text) {\n  if (text.length == 0) {\n    return;\n  }\n  var pattern = text.substring(patch.start2, patch.start2 + patch.length1);\n  var padding = 0;\n\n  // Look for the first and last matches of pattern in text.  If two different\n  // matches are found, increase the pattern length.\n  while (text.indexOf(pattern) != text.lastIndexOf(pattern) &&\n         pattern.length < this.Match_MaxBits - this.Patch_Margin -\n         this.Patch_Margin) {\n    padding += this.Patch_Margin;\n    pattern = text.substring(patch.start2 - padding,\n                             patch.start2 + patch.length1 + padding);\n  }\n  // Add one chunk for good luck.\n  padding += this.Patch_Margin;\n\n  // Add the prefix.\n  var prefix = text.substring(patch.start2 - padding, patch.start2);\n  if (prefix) {\n    patch.diffs.unshift([DIFF_EQUAL, prefix]);\n  }\n  // Add the suffix.\n  var suffix = text.substring(patch.start2 + patch.length1,\n                              patch.start2 + patch.length1 + padding);\n  if (suffix) {\n    patch.diffs.push([DIFF_EQUAL, suffix]);\n  }\n\n  // Roll back the start points.\n  patch.start1 -= prefix.length;\n  patch.start2 -= prefix.length;\n  // Extend the lengths.\n  patch.length1 += prefix.length + suffix.length;\n  patch.length2 += prefix.length + suffix.length;\n};\n\n\n/**\n * Compute a list of patches to turn text1 into text2.\n * Use diffs if provided, otherwise compute it ourselves.\n * There are four ways to call this function, depending on what data is\n * available to the caller:\n * Method 1:\n * a = text1, b = text2\n * Method 2:\n * a = diffs\n * Method 3 (optimal):\n * a = text1, b = diffs\n * Method 4 (deprecated, use method 3):\n * a = text1, b = text2, c = diffs\n *\n * @param {string|!Array.<!diff_match_patch.Diff>} a text1 (methods 1,3,4) or\n * Array of diff tuples for text1 to text2 (method 2).\n * @param {string|!Array.<!diff_match_patch.Diff>} opt_b text2 (methods 1,4) or\n * Array of diff tuples for text1 to text2 (method 3) or undefined (method 2).\n * @param {string|!Array.<!diff_match_patch.Diff>} opt_c Array of diff tuples\n * for text1 to text2 (method 4) or undefined (methods 1,2,3).\n * @return {!Array.<!diff_match_patch.patch_obj>} Array of Patch objects.\n */\ndiff_match_patch.prototype.patch_make = function(a, opt_b, opt_c) {\n  var text1, diffs;\n  if (typeof a == 'string' && typeof opt_b == 'string' &&\n      typeof opt_c == 'undefined') {\n    // Method 1: text1, text2\n    // Compute diffs from text1 and text2.\n    text1 = /** @type {string} */(a);\n    diffs = this.diff_main(text1, /** @type {string} */(opt_b), true);\n    if (diffs.length > 2) {\n      this.diff_cleanupSemantic(diffs);\n      this.diff_cleanupEfficiency(diffs);\n    }\n  } else if (a && typeof a == 'object' && typeof opt_b == 'undefined' &&\n      typeof opt_c == 'undefined') {\n    // Method 2: diffs\n    // Compute text1 from diffs.\n    diffs = /** @type {!Array.<!diff_match_patch.Diff>} */(a);\n    text1 = this.diff_text1(diffs);\n  } else if (typeof a == 'string' && opt_b && typeof opt_b == 'object' &&\n      typeof opt_c == 'undefined') {\n    // Method 3: text1, diffs\n    text1 = /** @type {string} */(a);\n    diffs = /** @type {!Array.<!diff_match_patch.Diff>} */(opt_b);\n  } else if (typeof a == 'string' && typeof opt_b == 'string' &&\n      opt_c && typeof opt_c == 'object') {\n    // Method 4: text1, text2, diffs\n    // text2 is not used.\n    text1 = /** @type {string} */(a);\n    diffs = /** @type {!Array.<!diff_match_patch.Diff>} */(opt_c);\n  } else {\n    throw new Error('Unknown call format to patch_make.');\n  }\n\n  if (diffs.length === 0) {\n    return [];  // Get rid of the null case.\n  }\n  var patches = [];\n  var patch = new diff_match_patch.patch_obj();\n  var patchDiffLength = 0;  // Keeping our own length var is faster in JS.\n  var char_count1 = 0;  // Number of characters into the text1 string.\n  var char_count2 = 0;  // Number of characters into the text2 string.\n  // Start with text1 (prepatch_text) and apply the diffs until we arrive at\n  // text2 (postpatch_text).  We recreate the patches one by one to determine\n  // context info.\n  var prepatch_text = text1;\n  var postpatch_text = text1;\n  for (var x = 0; x < diffs.length; x++) {\n    var diff_type = diffs[x][0];\n    var diff_text = diffs[x][1];\n\n    if (!patchDiffLength && diff_type !== DIFF_EQUAL) {\n      // A new patch starts here.\n      patch.start1 = char_count1;\n      patch.start2 = char_count2;\n    }\n\n    switch (diff_type) {\n      case DIFF_INSERT:\n        patch.diffs[patchDiffLength++] = diffs[x];\n        patch.length2 += diff_text.length;\n        postpatch_text = postpatch_text.substring(0, char_count2) + diff_text +\n                         postpatch_text.substring(char_count2);\n        break;\n      case DIFF_DELETE:\n        patch.length1 += diff_text.length;\n        patch.diffs[patchDiffLength++] = diffs[x];\n        postpatch_text = postpatch_text.substring(0, char_count2) +\n                         postpatch_text.substring(char_count2 +\n                             diff_text.length);\n        break;\n      case DIFF_EQUAL:\n        if (diff_text.length <= 2 * this.Patch_Margin &&\n            patchDiffLength && diffs.length != x + 1) {\n          // Small equality inside a patch.\n          patch.diffs[patchDiffLength++] = diffs[x];\n          patch.length1 += diff_text.length;\n          patch.length2 += diff_text.length;\n        } else if (diff_text.length >= 2 * this.Patch_Margin) {\n          // Time for a new patch.\n          if (patchDiffLength) {\n            this.patch_addContext_(patch, prepatch_text);\n            patches.push(patch);\n            patch = new diff_match_patch.patch_obj();\n            patchDiffLength = 0;\n            // Unlike Unidiff, our patch lists have a rolling context.\n            // http://code.google.com/p/google-diff-match-patch/wiki/Unidiff\n            // Update prepatch text & pos to reflect the application of the\n            // just completed patch.\n            prepatch_text = postpatch_text;\n            char_count1 = char_count2;\n          }\n        }\n        break;\n    }\n\n    // Update the current character count.\n    if (diff_type !== DIFF_INSERT) {\n      char_count1 += diff_text.length;\n    }\n    if (diff_type !== DIFF_DELETE) {\n      char_count2 += diff_text.length;\n    }\n  }\n  // Pick up the leftover patch if not empty.\n  if (patchDiffLength) {\n    this.patch_addContext_(patch, prepatch_text);\n    patches.push(patch);\n  }\n\n  return patches;\n};\n\n\n/**\n * Given an array of patches, return another array that is identical.\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.\n * @return {!Array.<!diff_match_patch.patch_obj>} Array of Patch objects.\n */\ndiff_match_patch.prototype.patch_deepCopy = function(patches) {\n  // Making deep copies is hard in JavaScript.\n  var patchesCopy = [];\n  for (var x = 0; x < patches.length; x++) {\n    var patch = patches[x];\n    var patchCopy = new diff_match_patch.patch_obj();\n    patchCopy.diffs = [];\n    for (var y = 0; y < patch.diffs.length; y++) {\n      patchCopy.diffs[y] = patch.diffs[y].slice();\n    }\n    patchCopy.start1 = patch.start1;\n    patchCopy.start2 = patch.start2;\n    patchCopy.length1 = patch.length1;\n    patchCopy.length2 = patch.length2;\n    patchesCopy[x] = patchCopy;\n  }\n  return patchesCopy;\n};\n\n\n/**\n * Merge a set of patches onto the text.  Return a patched text, as well\n * as a list of true/false values indicating which patches were applied.\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.\n * @param {string} text Old text.\n * @return {!Array.<string|!Array.<boolean>>} Two element Array, containing the\n *      new text and an array of boolean values.\n */\ndiff_match_patch.prototype.patch_apply = function(patches, text) {\n  if (patches.length == 0) {\n    return [text, []];\n  }\n\n  // Deep copy the patches so that no changes are made to originals.\n  patches = this.patch_deepCopy(patches);\n\n  var nullPadding = this.patch_addPadding(patches);\n  text = nullPadding + text + nullPadding;\n\n  this.patch_splitMax(patches);\n  // delta keeps track of the offset between the expected and actual location\n  // of the previous patch.  If there are patches expected at positions 10 and\n  // 20, but the first patch was found at 12, delta is 2 and the second patch\n  // has an effective expected position of 22.\n  var delta = 0;\n  var results = [];\n  for (var x = 0; x < patches.length; x++) {\n    var expected_loc = patches[x].start2 + delta;\n    var text1 = this.diff_text1(patches[x].diffs);\n    var start_loc;\n    var end_loc = -1;\n    if (text1.length > this.Match_MaxBits) {\n      // patch_splitMax will only provide an oversized pattern in the case of\n      // a monster delete.\n      start_loc = this.match_main(text, text1.substring(0, this.Match_MaxBits),\n                                  expected_loc);\n      if (start_loc != -1) {\n        end_loc = this.match_main(text,\n            text1.substring(text1.length - this.Match_MaxBits),\n            expected_loc + text1.length - this.Match_MaxBits);\n        if (end_loc == -1 || start_loc >= end_loc) {\n          // Can't find valid trailing context.  Drop this patch.\n          start_loc = -1;\n        }\n      }\n    } else {\n      start_loc = this.match_main(text, text1, expected_loc);\n    }\n    if (start_loc == -1) {\n      // No match found.  :(\n      results[x] = false;\n      // Subtract the delta for this failed patch from subsequent patches.\n      delta -= patches[x].length2 - patches[x].length1;\n    } else {\n      // Found a match.  :)\n      results[x] = true;\n      delta = start_loc - expected_loc;\n      var text2;\n      if (end_loc == -1) {\n        text2 = text.substring(start_loc, start_loc + text1.length);\n      } else {\n        text2 = text.substring(start_loc, end_loc + this.Match_MaxBits);\n      }\n      if (text1 == text2) {\n        // Perfect match, just shove the replacement text in.\n        text = text.substring(0, start_loc) +\n               this.diff_text2(patches[x].diffs) +\n               text.substring(start_loc + text1.length);\n      } else {\n        // Imperfect match.  Run a diff to get a framework of equivalent\n        // indices.\n        var diffs = this.diff_main(text1, text2, false);\n        if (text1.length > this.Match_MaxBits &&\n            this.diff_levenshtein(diffs) / text1.length >\n            this.Patch_DeleteThreshold) {\n          // The end points match, but the content is unacceptably bad.\n          results[x] = false;\n        } else {\n          this.diff_cleanupSemanticLossless(diffs);\n          var index1 = 0;\n          var index2;\n          for (var y = 0; y < patches[x].diffs.length; y++) {\n            var mod = patches[x].diffs[y];\n            if (mod[0] !== DIFF_EQUAL) {\n              index2 = this.diff_xIndex(diffs, index1);\n            }\n            if (mod[0] === DIFF_INSERT) {  // Insertion\n              text = text.substring(0, start_loc + index2) + mod[1] +\n                     text.substring(start_loc + index2);\n            } else if (mod[0] === DIFF_DELETE) {  // Deletion\n              text = text.substring(0, start_loc + index2) +\n                     text.substring(start_loc + this.diff_xIndex(diffs,\n                         index1 + mod[1].length));\n            }\n            if (mod[0] !== DIFF_DELETE) {\n              index1 += mod[1].length;\n            }\n          }\n        }\n      }\n    }\n  }\n  // Strip the padding off.\n  text = text.substring(nullPadding.length, text.length - nullPadding.length);\n  return [text, results];\n};\n\n\n/**\n * Add some padding on text start and end so that edges can match something.\n * Intended to be called only from within patch_apply.\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.\n * @return {string} The padding string added to each side.\n */\ndiff_match_patch.prototype.patch_addPadding = function(patches) {\n  var paddingLength = this.Patch_Margin;\n  var nullPadding = '';\n  for (var x = 1; x <= paddingLength; x++) {\n    nullPadding += String.fromCharCode(x);\n  }\n\n  // Bump all the patches forward.\n  for (var x = 0; x < patches.length; x++) {\n    patches[x].start1 += paddingLength;\n    patches[x].start2 += paddingLength;\n  }\n\n  // Add some padding on start of first diff.\n  var patch = patches[0];\n  var diffs = patch.diffs;\n  if (diffs.length == 0 || diffs[0][0] != DIFF_EQUAL) {\n    // Add nullPadding equality.\n    diffs.unshift([DIFF_EQUAL, nullPadding]);\n    patch.start1 -= paddingLength;  // Should be 0.\n    patch.start2 -= paddingLength;  // Should be 0.\n    patch.length1 += paddingLength;\n    patch.length2 += paddingLength;\n  } else if (paddingLength > diffs[0][1].length) {\n    // Grow first equality.\n    var extraLength = paddingLength - diffs[0][1].length;\n    diffs[0][1] = nullPadding.substring(diffs[0][1].length) + diffs[0][1];\n    patch.start1 -= extraLength;\n    patch.start2 -= extraLength;\n    patch.length1 += extraLength;\n    patch.length2 += extraLength;\n  }\n\n  // Add some padding on end of last diff.\n  patch = patches[patches.length - 1];\n  diffs = patch.diffs;\n  if (diffs.length == 0 || diffs[diffs.length - 1][0] != DIFF_EQUAL) {\n    // Add nullPadding equality.\n    diffs.push([DIFF_EQUAL, nullPadding]);\n    patch.length1 += paddingLength;\n    patch.length2 += paddingLength;\n  } else if (paddingLength > diffs[diffs.length - 1][1].length) {\n    // Grow last equality.\n    var extraLength = paddingLength - diffs[diffs.length - 1][1].length;\n    diffs[diffs.length - 1][1] += nullPadding.substring(0, extraLength);\n    patch.length1 += extraLength;\n    patch.length2 += extraLength;\n  }\n\n  return nullPadding;\n};\n\n\n/**\n * Look through the patches and break up any which are longer than the maximum\n * limit of the match algorithm.\n * Intended to be called only from within patch_apply.\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.\n */\ndiff_match_patch.prototype.patch_splitMax = function(patches) {\n  var patch_size = this.Match_MaxBits;\n  for (var x = 0; x < patches.length; x++) {\n    if (patches[x].length1 <= patch_size) {\n      continue;\n    }\n    var bigpatch = patches[x];\n    // Remove the big old patch.\n    patches.splice(x--, 1);\n    var start1 = bigpatch.start1;\n    var start2 = bigpatch.start2;\n    var precontext = '';\n    while (bigpatch.diffs.length !== 0) {\n      // Create one of several smaller patches.\n      var patch = new diff_match_patch.patch_obj();\n      var empty = true;\n      patch.start1 = start1 - precontext.length;\n      patch.start2 = start2 - precontext.length;\n      if (precontext !== '') {\n        patch.length1 = patch.length2 = precontext.length;\n        patch.diffs.push([DIFF_EQUAL, precontext]);\n      }\n      while (bigpatch.diffs.length !== 0 &&\n             patch.length1 < patch_size - this.Patch_Margin) {\n        var diff_type = bigpatch.diffs[0][0];\n        var diff_text = bigpatch.diffs[0][1];\n        if (diff_type === DIFF_INSERT) {\n          // Insertions are harmless.\n          patch.length2 += diff_text.length;\n          start2 += diff_text.length;\n          patch.diffs.push(bigpatch.diffs.shift());\n          empty = false;\n        } else if (diff_type === DIFF_DELETE && patch.diffs.length == 1 &&\n                   patch.diffs[0][0] == DIFF_EQUAL &&\n                   diff_text.length > 2 * patch_size) {\n          // This is a large deletion.  Let it pass in one chunk.\n          patch.length1 += diff_text.length;\n          start1 += diff_text.length;\n          empty = false;\n          patch.diffs.push([diff_type, diff_text]);\n          bigpatch.diffs.shift();\n        } else {\n          // Deletion or equality.  Only take as much as we can stomach.\n          diff_text = diff_text.substring(0,\n              patch_size - patch.length1 - this.Patch_Margin);\n          patch.length1 += diff_text.length;\n          start1 += diff_text.length;\n          if (diff_type === DIFF_EQUAL) {\n            patch.length2 += diff_text.length;\n            start2 += diff_text.length;\n          } else {\n            empty = false;\n          }\n          patch.diffs.push([diff_type, diff_text]);\n          if (diff_text == bigpatch.diffs[0][1]) {\n            bigpatch.diffs.shift();\n          } else {\n            bigpatch.diffs[0][1] =\n                bigpatch.diffs[0][1].substring(diff_text.length);\n          }\n        }\n      }\n      // Compute the head context for the next patch.\n      precontext = this.diff_text2(patch.diffs);\n      precontext =\n          precontext.substring(precontext.length - this.Patch_Margin);\n      // Append the end context for this patch.\n      var postcontext = this.diff_text1(bigpatch.diffs)\n                            .substring(0, this.Patch_Margin);\n      if (postcontext !== '') {\n        patch.length1 += postcontext.length;\n        patch.length2 += postcontext.length;\n        if (patch.diffs.length !== 0 &&\n            patch.diffs[patch.diffs.length - 1][0] === DIFF_EQUAL) {\n          patch.diffs[patch.diffs.length - 1][1] += postcontext;\n        } else {\n          patch.diffs.push([DIFF_EQUAL, postcontext]);\n        }\n      }\n      if (!empty) {\n        patches.splice(++x, 0, patch);\n      }\n    }\n  }\n};\n\n\n/**\n * Take a list of patches and return a textual representation.\n * @param {!Array.<!diff_match_patch.patch_obj>} patches Array of Patch objects.\n * @return {string} Text representation of patches.\n */\ndiff_match_patch.prototype.patch_toText = function(patches) {\n  var text = [];\n  for (var x = 0; x < patches.length; x++) {\n    text[x] = patches[x];\n  }\n  return text.join('');\n};\n\n\n/**\n * Parse a textual representation of patches and return a list of Patch objects.\n * @param {string} textline Text representation of patches.\n * @return {!Array.<!diff_match_patch.patch_obj>} Array of Patch objects.\n * @throws {!Error} If invalid input.\n */\ndiff_match_patch.prototype.patch_fromText = function(textline) {\n  var patches = [];\n  if (!textline) {\n    return patches;\n  }\n  var text = textline.split('\\n');\n  var textPointer = 0;\n  var patchHeader = /^@@ -(\\d+),?(\\d*) \\+(\\d+),?(\\d*) @@$/;\n  while (textPointer < text.length) {\n    var m = text[textPointer].match(patchHeader);\n    if (!m) {\n      throw new Error('Invalid patch string: ' + text[textPointer]);\n    }\n    var patch = new diff_match_patch.patch_obj();\n    patches.push(patch);\n    patch.start1 = parseInt(m[1], 10);\n    if (m[2] === '') {\n      patch.start1--;\n      patch.length1 = 1;\n    } else if (m[2] == '0') {\n      patch.length1 = 0;\n    } else {\n      patch.start1--;\n      patch.length1 = parseInt(m[2], 10);\n    }\n\n    patch.start2 = parseInt(m[3], 10);\n    if (m[4] === '') {\n      patch.start2--;\n      patch.length2 = 1;\n    } else if (m[4] == '0') {\n      patch.length2 = 0;\n    } else {\n      patch.start2--;\n      patch.length2 = parseInt(m[4], 10);\n    }\n    textPointer++;\n\n    while (textPointer < text.length) {\n      var sign = text[textPointer].charAt(0);\n      try {\n        var line = decodeURI(text[textPointer].substring(1));\n      } catch (ex) {\n        // Malformed URI sequence.\n        throw new Error('Illegal escape in patch_fromText: ' + line);\n      }\n      if (sign == '-') {\n        // Deletion.\n        patch.diffs.push([DIFF_DELETE, line]);\n      } else if (sign == '+') {\n        // Insertion.\n        patch.diffs.push([DIFF_INSERT, line]);\n      } else if (sign == ' ') {\n        // Minor equality.\n        patch.diffs.push([DIFF_EQUAL, line]);\n      } else if (sign == '@') {\n        // Start of next patch.\n        break;\n      } else if (sign === '') {\n        // Blank line?  Whatever.\n      } else {\n        // WTF?\n        throw new Error('Invalid patch mode \"' + sign + '\" in: ' + line);\n      }\n      textPointer++;\n    }\n  }\n  return patches;\n};\n\n\n/**\n * Class representing one patch operation.\n * @constructor\n */\ndiff_match_patch.patch_obj = function() {\n  /** @type {!Array.<!diff_match_patch.Diff>} */\n  this.diffs = [];\n  /** @type {?number} */\n  this.start1 = null;\n  /** @type {?number} */\n  this.start2 = null;\n  /** @type {number} */\n  this.length1 = 0;\n  /** @type {number} */\n  this.length2 = 0;\n};\n\n\n/**\n * Emmulate GNU diff's format.\n * Header: @@ -382,8 +481,9 @@\n * Indicies are printed as 1-based, not 0-based.\n * @return {string} The GNU diff string.\n */\ndiff_match_patch.patch_obj.prototype.toString = function() {\n  var coords1, coords2;\n  if (this.length1 === 0) {\n    coords1 = this.start1 + ',0';\n  } else if (this.length1 == 1) {\n    coords1 = this.start1 + 1;\n  } else {\n    coords1 = (this.start1 + 1) + ',' + this.length1;\n  }\n  if (this.length2 === 0) {\n    coords2 = this.start2 + ',0';\n  } else if (this.length2 == 1) {\n    coords2 = this.start2 + 1;\n  } else {\n    coords2 = (this.start2 + 1) + ',' + this.length2;\n  }\n  var text = ['@@ -' + coords1 + ' +' + coords2 + ' @@\\n'];\n  var op;\n  // Escape the body of the patch with %xx notation.\n  for (var x = 0; x < this.diffs.length; x++) {\n    switch (this.diffs[x][0]) {\n      case DIFF_INSERT:\n        op = '+';\n        break;\n      case DIFF_DELETE:\n        op = '-';\n        break;\n      case DIFF_EQUAL:\n        op = ' ';\n        break;\n    }\n    text[x + 1] = op + encodeURI(this.diffs[x][1]) + '\\n';\n  }\n  return text.join('').replace(/%20/g, ' ');\n};\n\n\n// The following export code was added by @ForbesLindesay\nmodule.exports = diff_match_patch;\nmodule.exports['diff_match_patch'] = diff_match_patch;\nmodule.exports['DIFF_DELETE'] = DIFF_DELETE;\nmodule.exports['DIFF_INSERT'] = DIFF_INSERT;\nmodule.exports['DIFF_EQUAL'] = DIFF_EQUAL;\n});\n\n/* global diff_match_patch */\nvar TEXT_DIFF = 2;\nvar DEFAULT_MIN_LENGTH = 60;\nvar cachedDiffPatch = null;\n\nvar getDiffMatchPatch = function getDiffMatchPatch(required) {\n  /* jshint camelcase: false */\n\n  if (!cachedDiffPatch) {\n    var instance = void 0;\n    /* eslint-disable camelcase, new-cap */\n    if (typeof diff_match_patch !== 'undefined') {\n      // already loaded, probably a browser\n      instance = typeof diff_match_patch === 'function' ? new diff_match_patch() : new diff_match_patch.diff_match_patch();\n    } else if (diffMatchPatch) {\n      try {\n        instance = diffMatchPatch && new diffMatchPatch();\n      } catch (err) {\n        instance = null;\n      }\n    }\n    /* eslint-enable camelcase, new-cap */\n    if (!instance) {\n      if (!required) {\n        return null;\n      }\n      var error = new Error('text diff_match_patch library not found');\n      // eslint-disable-next-line camelcase\n      error.diff_match_patch_not_found = true;\n      throw error;\n    }\n    cachedDiffPatch = {\n      diff: function diff(txt1, txt2) {\n        return instance.patch_toText(instance.patch_make(txt1, txt2));\n      },\n      patch: function patch(txt1, _patch) {\n        var results = instance.patch_apply(instance.patch_fromText(_patch), txt1);\n        for (var i = 0; i < results[1].length; i++) {\n          if (!results[1][i]) {\n            var _error = new Error('text patch failed');\n            _error.textPatchFailed = true;\n          }\n        }\n        return results[0];\n      }\n    };\n  }\n  return cachedDiffPatch;\n};\n\nvar diffFilter$3 = function textsDiffFilter(context) {\n  if (context.leftType !== 'string') {\n    return;\n  }\n  var minLength = context.options && context.options.textDiff && context.options.textDiff.minLength || DEFAULT_MIN_LENGTH;\n  if (context.left.length < minLength || context.right.length < minLength) {\n    context.setResult([context.left, context.right]).exit();\n    return;\n  }\n  // large text, try to use a text-diff algorithm\n  var diffMatchPatch$$1 = getDiffMatchPatch();\n  if (!diffMatchPatch$$1) {\n    // diff-match-patch library not available,\n    // fallback to regular string replace\n    context.setResult([context.left, context.right]).exit();\n    return;\n  }\n  var diff = diffMatchPatch$$1.diff;\n  context.setResult([diff(context.left, context.right), 0, TEXT_DIFF]).exit();\n};\ndiffFilter$3.filterName = 'texts';\n\nvar patchFilter$3 = function textsPatchFilter(context) {\n  if (context.nested) {\n    return;\n  }\n  if (context.delta[2] !== TEXT_DIFF) {\n    return;\n  }\n\n  // text-diff, use a text-patch algorithm\n  var patch = getDiffMatchPatch(true).patch;\n  context.setResult(patch(context.left, context.delta[0])).exit();\n};\npatchFilter$3.filterName = 'texts';\n\nvar textDeltaReverse = function textDeltaReverse(delta) {\n  var i = void 0;\n  var l = void 0;\n  var lines = void 0;\n  var line = void 0;\n  var lineTmp = void 0;\n  var header = null;\n  var headerRegex = /^@@ +-(\\d+),(\\d+) +\\+(\\d+),(\\d+) +@@$/;\n  var lineHeader = void 0;\n  lines = delta.split('\\n');\n  for (i = 0, l = lines.length; i < l; i++) {\n    line = lines[i];\n    var lineStart = line.slice(0, 1);\n    if (lineStart === '@') {\n      header = headerRegex.exec(line);\n      lineHeader = i;\n\n      // fix header\n      lines[lineHeader] = '@@ -' + header[3] + ',' + header[4] + ' +' + header[1] + ',' + header[2] + ' @@';\n    } else if (lineStart === '+') {\n      lines[i] = '-' + lines[i].slice(1);\n      if (lines[i - 1].slice(0, 1) === '+') {\n        // swap lines to keep default order (-+)\n        lineTmp = lines[i];\n        lines[i] = lines[i - 1];\n        lines[i - 1] = lineTmp;\n      }\n    } else if (lineStart === '-') {\n      lines[i] = '+' + lines[i].slice(1);\n    }\n  }\n  return lines.join('\\n');\n};\n\nvar reverseFilter$3 = function textsReverseFilter(context) {\n  if (context.nested) {\n    return;\n  }\n  if (context.delta[2] !== TEXT_DIFF) {\n    return;\n  }\n\n  // text-diff, use a text-diff algorithm\n  context.setResult([textDeltaReverse(context.delta[0]), 0, TEXT_DIFF]).exit();\n};\nreverseFilter$3.filterName = 'texts';\n\nvar DiffPatcher = function () {\n  function DiffPatcher(options) {\n    classCallCheck(this, DiffPatcher);\n\n    this.processor = new Processor(options);\n    this.processor.pipe(new Pipe('diff').append(collectChildrenDiffFilter, diffFilter, diffFilter$2, diffFilter$3, objectsDiffFilter, diffFilter$1).shouldHaveResult());\n    this.processor.pipe(new Pipe('patch').append(collectChildrenPatchFilter, collectChildrenPatchFilter$1, patchFilter, patchFilter$3, patchFilter$1, patchFilter$2).shouldHaveResult());\n    this.processor.pipe(new Pipe('reverse').append(collectChildrenReverseFilter, collectChildrenReverseFilter$1, reverseFilter, reverseFilter$3, reverseFilter$1, reverseFilter$2).shouldHaveResult());\n  }\n\n  createClass(DiffPatcher, [{\n    key: 'options',\n    value: function options() {\n      var _processor;\n\n      return (_processor = this.processor).options.apply(_processor, arguments);\n    }\n  }, {\n    key: 'diff',\n    value: function diff(left, right) {\n      return this.processor.process(new DiffContext(left, right));\n    }\n  }, {\n    key: 'patch',\n    value: function patch(left, delta) {\n      return this.processor.process(new PatchContext(left, delta));\n    }\n  }, {\n    key: 'reverse',\n    value: function reverse(delta) {\n      return this.processor.process(new ReverseContext(delta));\n    }\n  }, {\n    key: 'unpatch',\n    value: function unpatch(right, delta) {\n      return this.patch(right, this.reverse(delta));\n    }\n  }, {\n    key: 'clone',\n    value: function clone$$1(value) {\n      return clone(value);\n    }\n  }]);\n  return DiffPatcher;\n}();\n\nvar isArray$3 = typeof Array.isArray === 'function' ? Array.isArray : function (a) {\n  return a instanceof Array;\n};\n\nvar getObjectKeys = typeof Object.keys === 'function' ? function (obj) {\n  return Object.keys(obj);\n} : function (obj) {\n  var names = [];\n  for (var property in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, property)) {\n      names.push(property);\n    }\n  }\n  return names;\n};\n\nvar trimUnderscore = function trimUnderscore(str) {\n  if (str.substr(0, 1) === '_') {\n    return str.slice(1);\n  }\n  return str;\n};\n\nvar arrayKeyToSortNumber = function arrayKeyToSortNumber(key) {\n  if (key === '_t') {\n    return -1;\n  } else {\n    if (key.substr(0, 1) === '_') {\n      return parseInt(key.slice(1), 10);\n    } else {\n      return parseInt(key, 10) + 0.1;\n    }\n  }\n};\n\nvar arrayKeyComparer = function arrayKeyComparer(key1, key2) {\n  return arrayKeyToSortNumber(key1) - arrayKeyToSortNumber(key2);\n};\n\nvar BaseFormatter = function () {\n  function BaseFormatter() {\n    classCallCheck(this, BaseFormatter);\n  }\n\n  createClass(BaseFormatter, [{\n    key: 'format',\n    value: function format(delta, left) {\n      var context = {};\n      this.prepareContext(context);\n      this.recurse(context, delta, left);\n      return this.finalize(context);\n    }\n  }, {\n    key: 'prepareContext',\n    value: function prepareContext(context) {\n      context.buffer = [];\n      context.out = function () {\n        var _buffer;\n\n        (_buffer = this.buffer).push.apply(_buffer, arguments);\n      };\n    }\n  }, {\n    key: 'typeFormattterNotFound',\n    value: function typeFormattterNotFound(context, deltaType) {\n      throw new Error('cannot format delta type: ' + deltaType);\n    }\n  }, {\n    key: 'typeFormattterErrorFormatter',\n    value: function typeFormattterErrorFormatter(context, err) {\n      return err.toString();\n    }\n  }, {\n    key: 'finalize',\n    value: function finalize(_ref) {\n      var buffer = _ref.buffer;\n\n      if (isArray$3(buffer)) {\n        return buffer.join('');\n      }\n    }\n  }, {\n    key: 'recurse',\n    value: function recurse(context, delta, left, key, leftKey, movedFrom, isLast) {\n      var useMoveOriginHere = delta && movedFrom;\n      var leftValue = useMoveOriginHere ? movedFrom.value : left;\n\n      if (typeof delta === 'undefined' && typeof key === 'undefined') {\n        return undefined;\n      }\n\n      var type = this.getDeltaType(delta, movedFrom);\n      var nodeType = type === 'node' ? delta._t === 'a' ? 'array' : 'object' : '';\n\n      if (typeof key !== 'undefined') {\n        this.nodeBegin(context, key, leftKey, type, nodeType, isLast);\n      } else {\n        this.rootBegin(context, type, nodeType);\n      }\n\n      var typeFormattter = void 0;\n      try {\n        typeFormattter = this['format_' + type] || this.typeFormattterNotFound(context, type);\n        typeFormattter.call(this, context, delta, leftValue, key, leftKey, movedFrom);\n      } catch (err) {\n        this.typeFormattterErrorFormatter(context, err, delta, leftValue, key, leftKey, movedFrom);\n        if (typeof console !== 'undefined' && console.error) {\n          console.error(err.stack);\n        }\n      }\n\n      if (typeof key !== 'undefined') {\n        this.nodeEnd(context, key, leftKey, type, nodeType, isLast);\n      } else {\n        this.rootEnd(context, type, nodeType);\n      }\n    }\n  }, {\n    key: 'formatDeltaChildren',\n    value: function formatDeltaChildren(context, delta, left) {\n      var self = this;\n      this.forEachDeltaKey(delta, left, function (key, leftKey, movedFrom, isLast) {\n        self.recurse(context, delta[key], left ? left[leftKey] : undefined, key, leftKey, movedFrom, isLast);\n      });\n    }\n  }, {\n    key: 'forEachDeltaKey',\n    value: function forEachDeltaKey(delta, left, fn) {\n      var keys = getObjectKeys(delta);\n      var arrayKeys = delta._t === 'a';\n      var moveDestinations = {};\n      var name = void 0;\n      if (typeof left !== 'undefined') {\n        for (name in left) {\n          if (Object.prototype.hasOwnProperty.call(left, name)) {\n            if (typeof delta[name] === 'undefined' && (!arrayKeys || typeof delta['_' + name] === 'undefined')) {\n              keys.push(name);\n            }\n          }\n        }\n      }\n      // look for move destinations\n      for (name in delta) {\n        if (Object.prototype.hasOwnProperty.call(delta, name)) {\n          var value = delta[name];\n          if (isArray$3(value) && value[2] === 3) {\n            moveDestinations[value[1].toString()] = {\n              key: name,\n              value: left && left[parseInt(name.substr(1))]\n            };\n            if (this.includeMoveDestinations !== false) {\n              if (typeof left === 'undefined' && typeof delta[value[1]] === 'undefined') {\n                keys.push(value[1].toString());\n              }\n            }\n          }\n        }\n      }\n      if (arrayKeys) {\n        keys.sort(arrayKeyComparer);\n      } else {\n        keys.sort();\n      }\n      for (var index = 0, length = keys.length; index < length; index++) {\n        var key = keys[index];\n        if (arrayKeys && key === '_t') {\n          continue;\n        }\n        var leftKey = arrayKeys ? typeof key === 'number' ? key : parseInt(trimUnderscore(key), 10) : key;\n        var isLast = index === length - 1;\n        fn(key, leftKey, moveDestinations[leftKey], isLast);\n      }\n    }\n  }, {\n    key: 'getDeltaType',\n    value: function getDeltaType(delta, movedFrom) {\n      if (typeof delta === 'undefined') {\n        if (typeof movedFrom !== 'undefined') {\n          return 'movedestination';\n        }\n        return 'unchanged';\n      }\n      if (isArray$3(delta)) {\n        if (delta.length === 1) {\n          return 'added';\n        }\n        if (delta.length === 2) {\n          return 'modified';\n        }\n        if (delta.length === 3 && delta[2] === 0) {\n          return 'deleted';\n        }\n        if (delta.length === 3 && delta[2] === 2) {\n          return 'textdiff';\n        }\n        if (delta.length === 3 && delta[2] === 3) {\n          return 'moved';\n        }\n      } else if ((typeof delta === 'undefined' ? 'undefined' : _typeof(delta)) === 'object') {\n        return 'node';\n      }\n      return 'unknown';\n    }\n  }, {\n    key: 'parseTextDiff',\n    value: function parseTextDiff(value) {\n      var output = [];\n      var lines = value.split('\\n@@ ');\n      for (var i = 0, l = lines.length; i < l; i++) {\n        var line = lines[i];\n        var lineOutput = {\n          pieces: []\n        };\n        var location = /^(?:@@ )?[-+]?(\\d+),(\\d+)/.exec(line).slice(1);\n        lineOutput.location = {\n          line: location[0],\n          chr: location[1]\n        };\n        var pieces = line.split('\\n').slice(1);\n        for (var pieceIndex = 0, piecesLength = pieces.length; pieceIndex < piecesLength; pieceIndex++) {\n          var piece = pieces[pieceIndex];\n          if (!piece.length) {\n            continue;\n          }\n          var pieceOutput = {\n            type: 'context'\n          };\n          if (piece.substr(0, 1) === '+') {\n            pieceOutput.type = 'added';\n          } else if (piece.substr(0, 1) === '-') {\n            pieceOutput.type = 'deleted';\n          }\n          pieceOutput.text = piece.slice(1);\n          lineOutput.pieces.push(pieceOutput);\n        }\n        output.push(lineOutput);\n      }\n      return output;\n    }\n  }]);\n  return BaseFormatter;\n}();\n\n\n\nvar base = Object.freeze({\n\tdefault: BaseFormatter\n});\n\nvar HtmlFormatter = function (_BaseFormatter) {\n  inherits(HtmlFormatter, _BaseFormatter);\n\n  function HtmlFormatter() {\n    classCallCheck(this, HtmlFormatter);\n    return possibleConstructorReturn(this, (HtmlFormatter.__proto__ || Object.getPrototypeOf(HtmlFormatter)).apply(this, arguments));\n  }\n\n  createClass(HtmlFormatter, [{\n    key: 'typeFormattterErrorFormatter',\n    value: function typeFormattterErrorFormatter(context, err) {\n      context.out('<pre class=\"jsondiffpatch-error\">' + err + '</pre>');\n    }\n  }, {\n    key: 'formatValue',\n    value: function formatValue(context, value) {\n      context.out('<pre>' + htmlEscape(JSON.stringify(value, null, 2)) + '</pre>');\n    }\n  }, {\n    key: 'formatTextDiffString',\n    value: function formatTextDiffString(context, value) {\n      var lines = this.parseTextDiff(value);\n      context.out('<ul class=\"jsondiffpatch-textdiff\">');\n      for (var i = 0, l = lines.length; i < l; i++) {\n        var line = lines[i];\n        context.out('<li><div class=\"jsondiffpatch-textdiff-location\">' + ('<span class=\"jsondiffpatch-textdiff-line-number\">' + line.location.line + '</span><span class=\"jsondiffpatch-textdiff-char\">' + line.location.chr + '</span></div><div class=\"jsondiffpatch-textdiff-line\">'));\n        var pieces = line.pieces;\n        for (var pieceIndex = 0, piecesLength = pieces.length; pieceIndex < piecesLength; pieceIndex++) {\n          /* global decodeURI */\n          var piece = pieces[pieceIndex];\n          context.out('<span class=\"jsondiffpatch-textdiff-' + piece.type + '\">' + htmlEscape(decodeURI(piece.text)) + '</span>');\n        }\n        context.out('</div></li>');\n      }\n      context.out('</ul>');\n    }\n  }, {\n    key: 'rootBegin',\n    value: function rootBegin(context, type, nodeType) {\n      var nodeClass = 'jsondiffpatch-' + type + (nodeType ? ' jsondiffpatch-child-node-type-' + nodeType : '');\n      context.out('<div class=\"jsondiffpatch-delta ' + nodeClass + '\">');\n    }\n  }, {\n    key: 'rootEnd',\n    value: function rootEnd(context) {\n      context.out('</div>' + (context.hasArrows ? '<script type=\"text/javascript\">setTimeout(' + (adjustArrows.toString() + ',10);</script>') : ''));\n    }\n  }, {\n    key: 'nodeBegin',\n    value: function nodeBegin(context, key, leftKey, type, nodeType) {\n      var nodeClass = 'jsondiffpatch-' + type + (nodeType ? ' jsondiffpatch-child-node-type-' + nodeType : '');\n      context.out('<li class=\"' + nodeClass + '\" data-key=\"' + leftKey + '\">' + ('<div class=\"jsondiffpatch-property-name\">' + leftKey + '</div>'));\n    }\n  }, {\n    key: 'nodeEnd',\n    value: function nodeEnd(context) {\n      context.out('</li>');\n    }\n\n    /* jshint camelcase: false */\n    /* eslint-disable camelcase */\n\n  }, {\n    key: 'format_unchanged',\n    value: function format_unchanged(context, delta, left) {\n      if (typeof left === 'undefined') {\n        return;\n      }\n      context.out('<div class=\"jsondiffpatch-value\">');\n      this.formatValue(context, left);\n      context.out('</div>');\n    }\n  }, {\n    key: 'format_movedestination',\n    value: function format_movedestination(context, delta, left) {\n      if (typeof left === 'undefined') {\n        return;\n      }\n      context.out('<div class=\"jsondiffpatch-value\">');\n      this.formatValue(context, left);\n      context.out('</div>');\n    }\n  }, {\n    key: 'format_node',\n    value: function format_node(context, delta, left) {\n      // recurse\n      var nodeType = delta._t === 'a' ? 'array' : 'object';\n      context.out('<ul class=\"jsondiffpatch-node jsondiffpatch-node-type-' + nodeType + '\">');\n      this.formatDeltaChildren(context, delta, left);\n      context.out('</ul>');\n    }\n  }, {\n    key: 'format_added',\n    value: function format_added(context, delta) {\n      context.out('<div class=\"jsondiffpatch-value\">');\n      this.formatValue(context, delta[0]);\n      context.out('</div>');\n    }\n  }, {\n    key: 'format_modified',\n    value: function format_modified(context, delta) {\n      context.out('<div class=\"jsondiffpatch-value jsondiffpatch-left-value\">');\n      this.formatValue(context, delta[0]);\n      context.out('</div>' + '<div class=\"jsondiffpatch-value jsondiffpatch-right-value\">');\n      this.formatValue(context, delta[1]);\n      context.out('</div>');\n    }\n  }, {\n    key: 'format_deleted',\n    value: function format_deleted(context, delta) {\n      context.out('<div class=\"jsondiffpatch-value\">');\n      this.formatValue(context, delta[0]);\n      context.out('</div>');\n    }\n  }, {\n    key: 'format_moved',\n    value: function format_moved(context, delta) {\n      context.out('<div class=\"jsondiffpatch-value\">');\n      this.formatValue(context, delta[0]);\n      context.out('</div><div class=\"jsondiffpatch-moved-destination\">' + delta[1] + '</div>');\n\n      // draw an SVG arrow from here to move destination\n      context.out(\n      /* jshint multistr: true */\n      '<div class=\"jsondiffpatch-arrow\" ' + 'style=\"position: relative; left: -34px;\">\\n          <svg width=\"30\" height=\"60\" ' + 'style=\"position: absolute; display: none;\">\\n          <defs>\\n              <marker id=\"markerArrow\" markerWidth=\"8\" markerHeight=\"8\"\\n                 refx=\"2\" refy=\"4\"\\n                     orient=\"auto\" markerUnits=\"userSpaceOnUse\">\\n                  <path d=\"M1,1 L1,7 L7,4 L1,1\" style=\"fill: #339;\" />\\n              </marker>\\n          </defs>\\n          <path d=\"M30,0 Q-10,25 26,50\"\\n            style=\"stroke: #88f; stroke-width: 2px; fill: none; ' + 'stroke-opacity: 0.5; marker-end: url(#markerArrow);\"\\n          ></path>\\n          </svg>\\n      </div>');\n      context.hasArrows = true;\n    }\n  }, {\n    key: 'format_textdiff',\n    value: function format_textdiff(context, delta) {\n      context.out('<div class=\"jsondiffpatch-value\">');\n      this.formatTextDiffString(context, delta[0]);\n      context.out('</div>');\n    }\n  }]);\n  return HtmlFormatter;\n}(BaseFormatter);\n\nfunction htmlEscape(text) {\n  var html = text;\n  var replacements = [[/&/g, '&amp;'], [/</g, '&lt;'], [/>/g, '&gt;'], [/'/g, '&apos;'], [/\"/g, '&quot;']];\n  for (var i = 0; i < replacements.length; i++) {\n    html = html.replace(replacements[i][0], replacements[i][1]);\n  }\n  return html;\n}\n\nvar adjustArrows = function jsondiffpatchHtmlFormatterAdjustArrows(nodeArg) {\n  var node = nodeArg || document;\n  var getElementText = function getElementText(_ref) {\n    var textContent = _ref.textContent,\n        innerText = _ref.innerText;\n    return textContent || innerText;\n  };\n  var eachByQuery = function eachByQuery(el, query, fn) {\n    var elems = el.querySelectorAll(query);\n    for (var i = 0, l = elems.length; i < l; i++) {\n      fn(elems[i]);\n    }\n  };\n  var eachChildren = function eachChildren(_ref2, fn) {\n    var children = _ref2.children;\n\n    for (var i = 0, l = children.length; i < l; i++) {\n      fn(children[i], i);\n    }\n  };\n  eachByQuery(node, '.jsondiffpatch-arrow', function (_ref3) {\n    var parentNode = _ref3.parentNode,\n        children = _ref3.children,\n        style = _ref3.style;\n\n    var arrowParent = parentNode;\n    var svg = children[0];\n    var path = svg.children[1];\n    svg.style.display = 'none';\n    var destination = getElementText(arrowParent.querySelector('.jsondiffpatch-moved-destination'));\n    var container = arrowParent.parentNode;\n    var destinationElem = void 0;\n    eachChildren(container, function (child) {\n      if (child.getAttribute('data-key') === destination) {\n        destinationElem = child;\n      }\n    });\n    if (!destinationElem) {\n      return;\n    }\n    try {\n      var distance = destinationElem.offsetTop - arrowParent.offsetTop;\n      svg.setAttribute('height', Math.abs(distance) + 6);\n      style.top = -8 + (distance > 0 ? 0 : distance) + 'px';\n      var curve = distance > 0 ? 'M30,0 Q-10,' + Math.round(distance / 2) + ' 26,' + (distance - 4) : 'M30,' + -distance + ' Q-10,' + Math.round(-distance / 2) + ' 26,4';\n      path.setAttribute('d', curve);\n      svg.style.display = '';\n    } catch (err) {}\n  });\n};\n\n/* jshint camelcase: true */\n/* eslint-enable camelcase */\n\nvar showUnchanged = function showUnchanged(show, node, delay) {\n  var el = node || document.body;\n  var prefix = 'jsondiffpatch-unchanged-';\n  var classes = {\n    showing: prefix + 'showing',\n    hiding: prefix + 'hiding',\n    visible: prefix + 'visible',\n    hidden: prefix + 'hidden'\n  };\n  var list = el.classList;\n  if (!list) {\n    return;\n  }\n  if (!delay) {\n    list.remove(classes.showing);\n    list.remove(classes.hiding);\n    list.remove(classes.visible);\n    list.remove(classes.hidden);\n    if (show === false) {\n      list.add(classes.hidden);\n    }\n    return;\n  }\n  if (show === false) {\n    list.remove(classes.showing);\n    list.add(classes.visible);\n    setTimeout(function () {\n      list.add(classes.hiding);\n    }, 10);\n  } else {\n    list.remove(classes.hiding);\n    list.add(classes.showing);\n    list.remove(classes.hidden);\n  }\n  var intervalId = setInterval(function () {\n    adjustArrows(el);\n  }, 100);\n  setTimeout(function () {\n    list.remove(classes.showing);\n    list.remove(classes.hiding);\n    if (show === false) {\n      list.add(classes.hidden);\n      list.remove(classes.visible);\n    } else {\n      list.add(classes.visible);\n      list.remove(classes.hidden);\n    }\n    setTimeout(function () {\n      list.remove(classes.visible);\n      clearInterval(intervalId);\n    }, delay + 400);\n  }, delay);\n};\n\nvar hideUnchanged = function hideUnchanged(node, delay) {\n  return showUnchanged(false, node, delay);\n};\n\nvar defaultInstance = void 0;\n\nfunction format(delta, left) {\n  if (!defaultInstance) {\n    defaultInstance = new HtmlFormatter();\n  }\n  return defaultInstance.format(delta, left);\n}\n\n\n\nvar html = Object.freeze({\n\tshowUnchanged: showUnchanged,\n\thideUnchanged: hideUnchanged,\n\tdefault: HtmlFormatter,\n\tformat: format\n});\n\nvar AnnotatedFormatter = function (_BaseFormatter) {\n  inherits(AnnotatedFormatter, _BaseFormatter);\n\n  function AnnotatedFormatter() {\n    classCallCheck(this, AnnotatedFormatter);\n\n    var _this = possibleConstructorReturn(this, (AnnotatedFormatter.__proto__ || Object.getPrototypeOf(AnnotatedFormatter)).call(this));\n\n    _this.includeMoveDestinations = false;\n    return _this;\n  }\n\n  createClass(AnnotatedFormatter, [{\n    key: 'prepareContext',\n    value: function prepareContext(context) {\n      get(AnnotatedFormatter.prototype.__proto__ || Object.getPrototypeOf(AnnotatedFormatter.prototype), 'prepareContext', this).call(this, context);\n      context.indent = function (levels) {\n        this.indentLevel = (this.indentLevel || 0) + (typeof levels === 'undefined' ? 1 : levels);\n        this.indentPad = new Array(this.indentLevel + 1).join('&nbsp;&nbsp;');\n      };\n      context.row = function (json, htmlNote) {\n        context.out('<tr><td style=\"white-space: nowrap;\">' + '<pre class=\"jsondiffpatch-annotated-indent\"' + ' style=\"display: inline-block\">');\n        context.out(context.indentPad);\n        context.out('</pre><pre style=\"display: inline-block\">');\n        context.out(json);\n        context.out('</pre></td><td class=\"jsondiffpatch-delta-note\"><div>');\n        context.out(htmlNote);\n        context.out('</div></td></tr>');\n      };\n    }\n  }, {\n    key: 'typeFormattterErrorFormatter',\n    value: function typeFormattterErrorFormatter(context, err) {\n      context.row('', '<pre class=\"jsondiffpatch-error\">' + err + '</pre>');\n    }\n  }, {\n    key: 'formatTextDiffString',\n    value: function formatTextDiffString(context, value) {\n      var lines = this.parseTextDiff(value);\n      context.out('<ul class=\"jsondiffpatch-textdiff\">');\n      for (var i = 0, l = lines.length; i < l; i++) {\n        var line = lines[i];\n        context.out('<li><div class=\"jsondiffpatch-textdiff-location\">' + ('<span class=\"jsondiffpatch-textdiff-line-number\">' + line.location.line + '</span><span class=\"jsondiffpatch-textdiff-char\">' + line.location.chr + '</span></div><div class=\"jsondiffpatch-textdiff-line\">'));\n        var pieces = line.pieces;\n        for (var pieceIndex = 0, piecesLength = pieces.length; pieceIndex < piecesLength; pieceIndex++) {\n          var piece = pieces[pieceIndex];\n          context.out('<span class=\"jsondiffpatch-textdiff-' + piece.type + '\">' + piece.text + '</span>');\n        }\n        context.out('</div></li>');\n      }\n      context.out('</ul>');\n    }\n  }, {\n    key: 'rootBegin',\n    value: function rootBegin(context, type, nodeType) {\n      context.out('<table class=\"jsondiffpatch-annotated-delta\">');\n      if (type === 'node') {\n        context.row('{');\n        context.indent();\n      }\n      if (nodeType === 'array') {\n        context.row('\"_t\": \"a\",', 'Array delta (member names indicate array indices)');\n      }\n    }\n  }, {\n    key: 'rootEnd',\n    value: function rootEnd(context, type) {\n      if (type === 'node') {\n        context.indent(-1);\n        context.row('}');\n      }\n      context.out('</table>');\n    }\n  }, {\n    key: 'nodeBegin',\n    value: function nodeBegin(context, key, leftKey, type, nodeType) {\n      context.row('&quot;' + key + '&quot;: {');\n      if (type === 'node') {\n        context.indent();\n      }\n      if (nodeType === 'array') {\n        context.row('\"_t\": \"a\",', 'Array delta (member names indicate array indices)');\n      }\n    }\n  }, {\n    key: 'nodeEnd',\n    value: function nodeEnd(context, key, leftKey, type, nodeType, isLast) {\n      if (type === 'node') {\n        context.indent(-1);\n      }\n      context.row('}' + (isLast ? '' : ','));\n    }\n\n    /* jshint camelcase: false */\n\n    /* eslint-disable camelcase */\n\n  }, {\n    key: 'format_unchanged',\n    value: function format_unchanged() {}\n  }, {\n    key: 'format_movedestination',\n    value: function format_movedestination() {}\n  }, {\n    key: 'format_node',\n    value: function format_node(context, delta, left) {\n      // recurse\n      this.formatDeltaChildren(context, delta, left);\n    }\n  }]);\n  return AnnotatedFormatter;\n}(BaseFormatter);\n\n/* eslint-enable camelcase */\n\nvar wrapPropertyName = function wrapPropertyName(name) {\n  return '<pre style=\"display:inline-block\">&quot;' + name + '&quot;</pre>';\n};\n\nvar deltaAnnotations = {\n  added: function added(delta, left, key, leftKey) {\n    var formatLegend = ' <pre>([newValue])</pre>';\n    if (typeof leftKey === 'undefined') {\n      return 'new value' + formatLegend;\n    }\n    if (typeof leftKey === 'number') {\n      return 'insert at index ' + leftKey + formatLegend;\n    }\n    return 'add property ' + wrapPropertyName(leftKey) + formatLegend;\n  },\n  modified: function modified(delta, left, key, leftKey) {\n    var formatLegend = ' <pre>([previousValue, newValue])</pre>';\n    if (typeof leftKey === 'undefined') {\n      return 'modify value' + formatLegend;\n    }\n    if (typeof leftKey === 'number') {\n      return 'modify at index ' + leftKey + formatLegend;\n    }\n    return 'modify property ' + wrapPropertyName(leftKey) + formatLegend;\n  },\n  deleted: function deleted(delta, left, key, leftKey) {\n    var formatLegend = ' <pre>([previousValue, 0, 0])</pre>';\n    if (typeof leftKey === 'undefined') {\n      return 'delete value' + formatLegend;\n    }\n    if (typeof leftKey === 'number') {\n      return 'remove index ' + leftKey + formatLegend;\n    }\n    return 'delete property ' + wrapPropertyName(leftKey) + formatLegend;\n  },\n  moved: function moved(delta, left, key, leftKey) {\n    return 'move from <span title=\"(position to remove at original state)\">' + ('index ' + leftKey + '</span> to <span title=\"(position to insert at final') + (' state)\">index ' + delta[1] + '</span>');\n  },\n  textdiff: function textdiff(delta, left, key, leftKey) {\n    var location = typeof leftKey === 'undefined' ? '' : typeof leftKey === 'number' ? ' at index ' + leftKey : ' at property ' + wrapPropertyName(leftKey);\n    return 'text diff' + location + ', format is <a href=\"https://code.google.com/' + 'p/google-diff-match-patch/wiki/Unidiff\">a variation of Unidiff</a>';\n  }\n};\n\nvar formatAnyChange = function formatAnyChange(context, delta) {\n  var deltaType = this.getDeltaType(delta);\n  var annotator = deltaAnnotations[deltaType];\n  var htmlNote = annotator && annotator.apply(annotator, Array.prototype.slice.call(arguments, 1));\n  var json = JSON.stringify(delta, null, 2);\n  if (deltaType === 'textdiff') {\n    // split text diffs lines\n    json = json.split('\\\\n').join('\\\\n\"+\\n   \"');\n  }\n  context.indent();\n  context.row(json, htmlNote);\n  context.indent(-1);\n};\n\n/* eslint-disable camelcase */\nAnnotatedFormatter.prototype.format_added = formatAnyChange;\nAnnotatedFormatter.prototype.format_modified = formatAnyChange;\nAnnotatedFormatter.prototype.format_deleted = formatAnyChange;\nAnnotatedFormatter.prototype.format_moved = formatAnyChange;\nAnnotatedFormatter.prototype.format_textdiff = formatAnyChange;\nvar defaultInstance$1 = void 0;\n\nfunction format$1(delta, left) {\n  if (!defaultInstance$1) {\n    defaultInstance$1 = new AnnotatedFormatter();\n  }\n  return defaultInstance$1.format(delta, left);\n}\n\n\n\nvar annotated = Object.freeze({\n\tdefault: AnnotatedFormatter,\n\tformat: format$1\n});\n\nvar OPERATIONS = {\n  add: 'add',\n  remove: 'remove',\n  replace: 'replace',\n  move: 'move'\n};\n\nvar JSONFormatter = function (_BaseFormatter) {\n  inherits(JSONFormatter, _BaseFormatter);\n\n  function JSONFormatter() {\n    classCallCheck(this, JSONFormatter);\n\n    var _this = possibleConstructorReturn(this, (JSONFormatter.__proto__ || Object.getPrototypeOf(JSONFormatter)).call(this));\n\n    _this.includeMoveDestinations = true;\n    return _this;\n  }\n\n  createClass(JSONFormatter, [{\n    key: 'prepareContext',\n    value: function prepareContext(context) {\n      get(JSONFormatter.prototype.__proto__ || Object.getPrototypeOf(JSONFormatter.prototype), 'prepareContext', this).call(this, context);\n      context.result = [];\n      context.path = [];\n      context.pushCurrentOp = function (obj) {\n        var op = obj.op,\n            value = obj.value;\n\n        var val = {\n          op: op,\n          path: this.currentPath()\n        };\n        if (typeof value !== 'undefined') {\n          val.value = value;\n        }\n        this.result.push(val);\n      };\n\n      context.pushMoveOp = function (to) {\n        var from = this.currentPath();\n        this.result.push({\n          op: OPERATIONS.move,\n          from: from,\n          path: this.toPath(to)\n        });\n      };\n\n      context.currentPath = function () {\n        return '/' + this.path.join('/');\n      };\n\n      context.toPath = function (toPath) {\n        var to = this.path.slice();\n        to[to.length - 1] = toPath;\n        return '/' + to.join('/');\n      };\n    }\n  }, {\n    key: 'typeFormattterErrorFormatter',\n    value: function typeFormattterErrorFormatter(context, err) {\n      context.out('[ERROR] ' + err);\n    }\n  }, {\n    key: 'rootBegin',\n    value: function rootBegin() {}\n  }, {\n    key: 'rootEnd',\n    value: function rootEnd() {}\n  }, {\n    key: 'nodeBegin',\n    value: function nodeBegin(_ref, key, leftKey) {\n      var path = _ref.path;\n\n      path.push(leftKey);\n    }\n  }, {\n    key: 'nodeEnd',\n    value: function nodeEnd(_ref2) {\n      var path = _ref2.path;\n\n      path.pop();\n    }\n\n    /* jshint camelcase: false */\n    /* eslint-disable camelcase */\n\n  }, {\n    key: 'format_unchanged',\n    value: function format_unchanged() {}\n  }, {\n    key: 'format_movedestination',\n    value: function format_movedestination() {}\n  }, {\n    key: 'format_node',\n    value: function format_node(context, delta, left) {\n      this.formatDeltaChildren(context, delta, left);\n    }\n  }, {\n    key: 'format_added',\n    value: function format_added(context, delta) {\n      context.pushCurrentOp({ op: OPERATIONS.add, value: delta[0] });\n    }\n  }, {\n    key: 'format_modified',\n    value: function format_modified(context, delta) {\n      context.pushCurrentOp({ op: OPERATIONS.replace, value: delta[1] });\n    }\n  }, {\n    key: 'format_deleted',\n    value: function format_deleted(context) {\n      context.pushCurrentOp({ op: OPERATIONS.remove });\n    }\n  }, {\n    key: 'format_moved',\n    value: function format_moved(context, delta) {\n      var to = delta[1];\n      context.pushMoveOp(to);\n    }\n  }, {\n    key: 'format_textdiff',\n    value: function format_textdiff() {\n      throw new Error('Not implemented');\n    }\n  }, {\n    key: 'format',\n    value: function format(delta, left) {\n      var context = {};\n      this.prepareContext(context);\n      this.recurse(context, delta, left);\n      return context.result;\n    }\n  }]);\n  return JSONFormatter;\n}(BaseFormatter);\n\nvar last = function last(arr) {\n  return arr[arr.length - 1];\n};\n\nvar sortBy = function sortBy(arr, pred) {\n  arr.sort(pred);\n  return arr;\n};\n\nvar compareByIndexDesc = function compareByIndexDesc(indexA, indexB) {\n  var lastA = parseInt(indexA, 10);\n  var lastB = parseInt(indexB, 10);\n  if (!(isNaN(lastA) || isNaN(lastB))) {\n    return lastB - lastA;\n  } else {\n    return 0;\n  }\n};\n\nvar opsByDescendingOrder = function opsByDescendingOrder(removeOps) {\n  return sortBy(removeOps, function (a, b) {\n    var splitA = a.path.split('/');\n    var splitB = b.path.split('/');\n    if (splitA.length !== splitB.length) {\n      return splitA.length - splitB.length;\n    } else {\n      return compareByIndexDesc(last(splitA), last(splitB));\n    }\n  });\n};\n\nvar partitionOps = function partitionOps(arr, fns) {\n  var initArr = Array(fns.length + 1).fill().map(function () {\n    return [];\n  });\n  return arr.map(function (item) {\n    var position = fns.map(function (fn) {\n      return fn(item);\n    }).indexOf(true);\n    if (position < 0) {\n      position = fns.length;\n    }\n    return { item: item, position: position };\n  }).reduce(function (acc, item) {\n    acc[item.position].push(item.item);\n    return acc;\n  }, initArr);\n};\nvar isMoveOp = function isMoveOp(_ref3) {\n  var op = _ref3.op;\n  return op === 'move';\n};\nvar isRemoveOp = function isRemoveOp(_ref4) {\n  var op = _ref4.op;\n  return op === 'remove';\n};\n\nvar reorderOps = function reorderOps(diff) {\n  var _partitionOps = partitionOps(diff, [isMoveOp, isRemoveOp]),\n      _partitionOps2 = slicedToArray(_partitionOps, 3),\n      moveOps = _partitionOps2[0],\n      removedOps = _partitionOps2[1],\n      restOps = _partitionOps2[2];\n\n  var removeOpsReverse = opsByDescendingOrder(removedOps);\n  return [].concat(toConsumableArray(removeOpsReverse), toConsumableArray(moveOps), toConsumableArray(restOps));\n};\n\nvar defaultInstance$2 = void 0;\n\nvar format$2 = function format(delta, left) {\n  if (!defaultInstance$2) {\n    defaultInstance$2 = new JSONFormatter();\n  }\n  return reorderOps(defaultInstance$2.format(delta, left));\n};\n\nvar log = function log(delta, left) {\n  console.log(format$2(delta, left));\n};\n\n\n\nvar jsonpatch = Object.freeze({\n\tdefault: JSONFormatter,\n\tpartitionOps: partitionOps,\n\tformat: format$2,\n\tlog: log\n});\n\nfunction chalkColor(name) {\n  return chalk && chalk[name] || function () {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return args;\n  };\n}\n\nvar colors = {\n  added: chalkColor('green'),\n  deleted: chalkColor('red'),\n  movedestination: chalkColor('gray'),\n  moved: chalkColor('yellow'),\n  unchanged: chalkColor('gray'),\n  error: chalkColor('white.bgRed'),\n  textDiffLine: chalkColor('gray')\n};\n\nvar ConsoleFormatter = function (_BaseFormatter) {\n  inherits(ConsoleFormatter, _BaseFormatter);\n\n  function ConsoleFormatter() {\n    classCallCheck(this, ConsoleFormatter);\n\n    var _this = possibleConstructorReturn(this, (ConsoleFormatter.__proto__ || Object.getPrototypeOf(ConsoleFormatter)).call(this));\n\n    _this.includeMoveDestinations = false;\n    return _this;\n  }\n\n  createClass(ConsoleFormatter, [{\n    key: 'prepareContext',\n    value: function prepareContext(context) {\n      get(ConsoleFormatter.prototype.__proto__ || Object.getPrototypeOf(ConsoleFormatter.prototype), 'prepareContext', this).call(this, context);\n      context.indent = function (levels) {\n        this.indentLevel = (this.indentLevel || 0) + (typeof levels === 'undefined' ? 1 : levels);\n        this.indentPad = new Array(this.indentLevel + 1).join('  ');\n        this.outLine();\n      };\n      context.outLine = function () {\n        this.buffer.push('\\n' + (this.indentPad || ''));\n      };\n      context.out = function () {\n        for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n          args[_key2] = arguments[_key2];\n        }\n\n        for (var i = 0, l = args.length; i < l; i++) {\n          var lines = args[i].split('\\n');\n          var text = lines.join('\\n' + (this.indentPad || ''));\n          if (this.color && this.color[0]) {\n            text = this.color[0](text);\n          }\n          this.buffer.push(text);\n        }\n      };\n      context.pushColor = function (color) {\n        this.color = this.color || [];\n        this.color.unshift(color);\n      };\n      context.popColor = function () {\n        this.color = this.color || [];\n        this.color.shift();\n      };\n    }\n  }, {\n    key: 'typeFormattterErrorFormatter',\n    value: function typeFormattterErrorFormatter(context, err) {\n      context.pushColor(colors.error);\n      context.out('[ERROR]' + err);\n      context.popColor();\n    }\n  }, {\n    key: 'formatValue',\n    value: function formatValue(context, value) {\n      context.out(JSON.stringify(value, null, 2));\n    }\n  }, {\n    key: 'formatTextDiffString',\n    value: function formatTextDiffString(context, value) {\n      var lines = this.parseTextDiff(value);\n      context.indent();\n      for (var i = 0, l = lines.length; i < l; i++) {\n        var line = lines[i];\n        context.pushColor(colors.textDiffLine);\n        context.out(line.location.line + ',' + line.location.chr + ' ');\n        context.popColor();\n        var pieces = line.pieces;\n        for (var pieceIndex = 0, piecesLength = pieces.length; pieceIndex < piecesLength; pieceIndex++) {\n          var piece = pieces[pieceIndex];\n          context.pushColor(colors[piece.type]);\n          context.out(piece.text);\n          context.popColor();\n        }\n        if (i < l - 1) {\n          context.outLine();\n        }\n      }\n      context.indent(-1);\n    }\n  }, {\n    key: 'rootBegin',\n    value: function rootBegin(context, type, nodeType) {\n      context.pushColor(colors[type]);\n      if (type === 'node') {\n        context.out(nodeType === 'array' ? '[' : '{');\n        context.indent();\n      }\n    }\n  }, {\n    key: 'rootEnd',\n    value: function rootEnd(context, type, nodeType) {\n      if (type === 'node') {\n        context.indent(-1);\n        context.out(nodeType === 'array' ? ']' : '}');\n      }\n      context.popColor();\n    }\n  }, {\n    key: 'nodeBegin',\n    value: function nodeBegin(context, key, leftKey, type, nodeType) {\n      context.pushColor(colors[type]);\n      context.out(leftKey + ': ');\n      if (type === 'node') {\n        context.out(nodeType === 'array' ? '[' : '{');\n        context.indent();\n      }\n    }\n  }, {\n    key: 'nodeEnd',\n    value: function nodeEnd(context, key, leftKey, type, nodeType, isLast) {\n      if (type === 'node') {\n        context.indent(-1);\n        context.out(nodeType === 'array' ? ']' : '}' + (isLast ? '' : ','));\n      }\n      if (!isLast) {\n        context.outLine();\n      }\n      context.popColor();\n    }\n\n    /* jshint camelcase: false */\n    /* eslint-disable camelcase */\n\n  }, {\n    key: 'format_unchanged',\n    value: function format_unchanged(context, delta, left) {\n      if (typeof left === 'undefined') {\n        return;\n      }\n      this.formatValue(context, left);\n    }\n  }, {\n    key: 'format_movedestination',\n    value: function format_movedestination(context, delta, left) {\n      if (typeof left === 'undefined') {\n        return;\n      }\n      this.formatValue(context, left);\n    }\n  }, {\n    key: 'format_node',\n    value: function format_node(context, delta, left) {\n      // recurse\n      this.formatDeltaChildren(context, delta, left);\n    }\n  }, {\n    key: 'format_added',\n    value: function format_added(context, delta) {\n      this.formatValue(context, delta[0]);\n    }\n  }, {\n    key: 'format_modified',\n    value: function format_modified(context, delta) {\n      context.pushColor(colors.deleted);\n      this.formatValue(context, delta[0]);\n      context.popColor();\n      context.out(' => ');\n      context.pushColor(colors.added);\n      this.formatValue(context, delta[1]);\n      context.popColor();\n    }\n  }, {\n    key: 'format_deleted',\n    value: function format_deleted(context, delta) {\n      this.formatValue(context, delta[0]);\n    }\n  }, {\n    key: 'format_moved',\n    value: function format_moved(context, delta) {\n      context.out('==> ' + delta[1]);\n    }\n  }, {\n    key: 'format_textdiff',\n    value: function format_textdiff(context, delta) {\n      this.formatTextDiffString(context, delta[0]);\n    }\n  }]);\n  return ConsoleFormatter;\n}(BaseFormatter);\n\nvar defaultInstance$3 = void 0;\n\nvar format$3 = function format(delta, left) {\n  if (!defaultInstance$3) {\n    defaultInstance$3 = new ConsoleFormatter();\n  }\n  return defaultInstance$3.format(delta, left);\n};\n\nfunction log$1(delta, left) {\n  console.log(format$3(delta, left));\n}\n\n\n\nvar console$1 = Object.freeze({\n\tdefault: ConsoleFormatter,\n\tformat: format$3,\n\tlog: log$1\n});\n\n\n\nvar index = Object.freeze({\n\tbase: base,\n\thtml: html,\n\tannotated: annotated,\n\tjsonpatch: jsonpatch,\n\tconsole: console$1\n});\n\n// use as 2nd parameter for JSON.parse to revive Date instances\nfunction dateReviver(key, value) {\n  var parts = void 0;\n  if (typeof value === 'string') {\n    // eslint-disable-next-line max-len\n    parts = /^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})(?:\\.(\\d*))?(Z|([+-])(\\d{2}):(\\d{2}))$/.exec(value);\n    if (parts) {\n      return new Date(Date.UTC(+parts[1], +parts[2] - 1, +parts[3], +parts[4], +parts[5], +parts[6], +(parts[7] || 0)));\n    }\n  }\n  return value;\n}\n\nfunction create(options) {\n  return new DiffPatcher(options);\n}\n\nvar defaultInstance$4 = void 0;\n\nfunction diff() {\n  if (!defaultInstance$4) {\n    defaultInstance$4 = new DiffPatcher();\n  }\n  return defaultInstance$4.diff.apply(defaultInstance$4, arguments);\n}\n\nfunction patch() {\n  if (!defaultInstance$4) {\n    defaultInstance$4 = new DiffPatcher();\n  }\n  return defaultInstance$4.patch.apply(defaultInstance$4, arguments);\n}\n\nfunction unpatch() {\n  if (!defaultInstance$4) {\n    defaultInstance$4 = new DiffPatcher();\n  }\n  return defaultInstance$4.unpatch.apply(defaultInstance$4, arguments);\n}\n\nfunction reverse() {\n  if (!defaultInstance$4) {\n    defaultInstance$4 = new DiffPatcher();\n  }\n  return defaultInstance$4.reverse.apply(defaultInstance$4, arguments);\n}\n\nfunction clone$1() {\n  if (!defaultInstance$4) {\n    defaultInstance$4 = new DiffPatcher();\n  }\n  return defaultInstance$4.clone.apply(defaultInstance$4, arguments);\n}\n\nexports.DiffPatcher = DiffPatcher;\nexports.formatters = index;\nexports.console = console$1;\nexports.create = create;\nexports.dateReviver = dateReviver;\nexports.diff = diff;\nexports.patch = patch;\nexports.unpatch = unpatch;\nexports.reverse = reverse;\nexports.clone = clone$1;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","import { DiffPatcher } from 'jsondiffpatch'\n\nconst diffPatcher = new DiffPatcher({\n  arrays: { detectMove: false, includeValueOnMove: false },\n  textDiff: { minLength: 1 }\n})\n\nexport function diff(inputA: any, inputB: any) {\n  return diffPatcher.diff(inputA, inputB)\n}\n","import type { Transaction } from 'prosemirror-state'\n\nconst addedProperties = [\n  'docChanged',\n  'isGeneric',\n  'scrolledIntoView',\n  'selectionSet',\n  'storedMarksSet'\n]\n\nexport function addPropertiesToTransaction(tr: Transaction) {\n  return Object.keys(tr)\n    .concat(addedProperties)\n    .reduce((acc, key) => {\n      // @ts-ignore\n      acc[key] = tr[key]\n      return acc\n    }, {} as Transaction)\n}\n","import type { EditorState, Selection, Transaction } from 'prosemirror-state'\nimport { DOMSerializer } from 'prosemirror-model'\nimport { prettyPrint } from 'html'\n\nimport { diff } from './diff'\nimport { addPropertiesToTransaction } from './transaction'\nimport type { HistoryEntry } from '$typings/history'\n\nfunction buildSelection(selection: Selection) {\n  return {\n    // @ts-ignore\n    type: selection.type,\n    empty: selection.empty,\n    anchor: selection.anchor,\n    head: selection.head,\n    from: selection.from,\n    to: selection.to\n  }\n}\n\nfunction pad(num: number) {\n  return ('00' + num).slice(-2)\n}\n\nfunction pad3(num: number) {\n  return ('000' + num).slice(-3)\n}\n\nconst formatTimestamp = (timestamp: number) => {\n  const date = new Date(timestamp)\n  return [\n    pad(date.getHours()),\n    pad(date.getMinutes()),\n    pad(date.getSeconds()),\n    pad3(date.getMilliseconds())\n  ].join(':')\n}\n\nconst regexp = /(&lt;\\/?[\\w\\d\\s=\"']+&gt;)/gim\nconst highlightHtmlString = (html: string) =>\n  html\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(regexp, \"<span style='color: cadetblue;'>$&</span>\")\n\nexport function createHistoryEntry(\n  tr: Transaction,\n  state: EditorState,\n  stateBeforeDispatch: EditorState,\n  oldEntry?: HistoryEntry\n): HistoryEntry {\n  // const serializer = DOMSerializer.fromSchema(state.schema)\n  // const selection = state.selection\n  const domFragment: any = undefined // serializer.serializeFragment(selection.content().content)\n\n  const selectedElementsAsHtml = []\n  if (domFragment) {\n    let child = domFragment.firstChild as HTMLElement | null\n    while (child) {\n      selectedElementsAsHtml.push(child.outerHTML)\n      child = child.nextSibling as HTMLElement | null\n    }\n  }\n\n  // As described in stateHistory.ts the first entry is a special exception\n  const prevState = oldEntry ? oldEntry.state : stateBeforeDispatch\n  const contentDiff = diff(prevState.doc.toJSON(), state.doc.toJSON())\n  const selectionDiff = diff(buildSelection(prevState.selection), buildSelection(state.selection))\n\n  return {\n    id: Math.random().toString() + Math.random().toString(),\n    state,\n    tr: addPropertiesToTransaction(tr),\n    timestamp: tr.time,\n    timeStr: formatTimestamp(tr.time),\n    contentDiff,\n    selectionDiff,\n    selectionHtml: highlightHtmlString(\n      prettyPrint(selectedElementsAsHtml.join('\\n'), {\n        max_char: 60,\n        indent_size: 2\n      })\n    )\n  }\n}\n","import { get, writable } from 'svelte/store'\nimport { EditorState, Transaction } from 'prosemirror-state'\n\nimport { createHistoryEntry } from '../history-and-diff/createHistoryEntry'\n\nimport type { HistoryEntry, HistoryGroup } from '$typings/history'\n\nexport const stateHistory = writable<Map<string, HistoryEntry>>(new Map())\nexport const shownHistoryGroups = writable<HistoryGroup[]>([])\nexport const latestEntry = writable<HistoryEntry | undefined>(undefined)\n\nexport function appendNewHistoryEntry(tr: Transaction, state: EditorState, stateBeforeDispatch: EditorState) {\n  const entryMap = get(stateHistory)\n  const prevGroup = get(shownHistoryGroups)[0]\n  const oldEntry = entryMap.get(prevGroup?.topEntryId || '')\n  // In the case of first entry there aren't oldEntries to diff against, therefore we have to use the state\n  // before the transaction. We can't use it for the next entries because it will always be one state behind,\n  // as the current state is the one _after_ the dispatch. You can observe this in the old dev-tools.\n  const newEntry = createHistoryEntry(tr, state, stateBeforeDispatch, oldEntry)\n\n  stateHistory.update(val => new Map(val.set(newEntry.id, newEntry)))\n  latestEntry.set(newEntry)\n\n  // Groups are subsequent transactions where the doc hasn't changed (eg selection was set) OR the diff was equal\n  // Haven't seen necessary to differentiate between selection-only vs equal diffs\n  const isGroup = !newEntry.contentDiff\n  if (prevGroup?.isGroup && isGroup) {\n    const newGroup = {\n      isGroup,\n      entryIds: [newEntry.id, ...prevGroup.entryIds],\n      topEntryId: newEntry.id,\n      expanded: prevGroup.expanded\n    }\n    shownHistoryGroups.update(val => [newGroup, ...val.slice(1)])\n  } else {\n    const newGroup = {\n      isGroup,\n      entryIds: [newEntry.id],\n      topEntryId: newEntry.id,\n      expanded: false\n    }\n    shownHistoryGroups.update(val => [newGroup, ...val])\n  }\n}\n\nexport function resetHistory() {\n  stateHistory.set(new Map())\n  shownHistoryGroups.set([])\n  latestEntry.set(undefined)\n}\n","import { Selection } from 'prosemirror-state'\n\nconst defaultProperties = ['jsonID', 'empty', 'anchor', 'from', 'head', 'to']\nconst resolvedPosProperties = ['$anchor', '$head', '$cursor', '$to', '$from']\nconst resolvedPosSubProperties = ['nodeAfter', 'nodeBefore', 'textOffset']\n\nexport function createSelection(selection: Selection) {\n  return defaultProperties.reduce((acc, key) => {\n    // @ts-ignore\n    acc[key] = selection[key]\n    return acc\n  }, {} as { [key: string]: any })\n}\n\nexport function createFullSelection(selection: Selection) {\n  return defaultProperties.concat(resolvedPosProperties).reduce((acc, key) => {\n    // @ts-ignore\n    let val = selection[key]\n    if (val && resolvedPosProperties.includes(key)) {\n      const additionalProperties = {}\n      resolvedPosSubProperties.forEach(subKey => {\n        // @ts-ignore\n        additionalProperties[subKey] = val[subKey]\n      })\n      val = { ...val, ...additionalProperties }\n    }\n    acc[key] = val\n    return acc\n  }, {} as { [key: string]: any })\n}\n","export function createNode(index, key, value, depth, parent) {\n    const path = parent ? [...parent.path, index] : [];\n    return {\n        id: `[${path.join(',')}]`,\n        index,\n        key,\n        value,\n        depth: depth + 1,\n        collapsed: true,\n        type: getValueType(value),\n        path,\n        parentId: parent ? parent.id : null,\n        circularOfId: null,\n        children: []\n    };\n}\nexport function getValueType(value) {\n    if (Array.isArray(value)) {\n        return 'array';\n    }\n    else if (value instanceof Map) {\n        return 'map';\n    }\n    else if (value instanceof Set) {\n        return 'set';\n    }\n    else if (value instanceof Date) {\n        return 'date';\n    }\n    else if (value === null) {\n        return 'null';\n    }\n    else {\n        return typeof value;\n    }\n}\n// From redux-dev-tools\n// case 'Object':\n//   case 'Error':\n//   case 'Array':\n//   case 'Iterable':\n//   case 'Map':\n//   case 'Set':\n//   case 'MapEntry':\n//   case 'Number':\n//     return undefined;\n//   case 'String':\n//     return raw => `\"${raw}\"`;\n//   case 'Boolean':\n//     return raw => (raw ? 'true' : 'false');\n//   case 'Date':\n//     return raw => raw.toISOString();\n//   case 'Null':\n//     return () => 'null';\n//   case 'Undefined':\n//     return () => 'undefined';\n//   case 'Function':\n//   case 'Symbol':\n// export function objType(obj: any) {\n//   const type = Object.prototype.toString.call(obj).slice(8, -1)\n//   if (type === 'Object') {\n//     if (typeof obj[Symbol.iterator] === 'function') {\n//       return 'Iterable'\n//     }\n//     return obj.constructor.name\n//   }\n//   return type\n// }\nfunction getChildren(value, type) {\n    switch (type) {\n        case 'array':\n            return value.map((v, i) => [i.toString(), v]);\n        case 'map':\n            // eslint-disable-next-line no-case-declarations\n            const entries = Array.from(value.entries());\n            return entries.map(([key, value], i) => [\n                `[map entry ${i}]`,\n                {\n                    '[key]': key,\n                    '[value]': value\n                }\n            ]);\n        case 'set':\n            return Array.from(value.values()).map((v, i) => [`[set entry ${i}]`, v]);\n        case 'object':\n            return Object.entries(value);\n        default:\n            return [];\n    }\n}\nfunction shouldRecurseChildren(node, parent, iteratedValues, opts) {\n    if (!parent) {\n        // The root node's children should always be recursed\n        return true;\n    }\n    else if (node.collapsed && (parent === null || parent === void 0 ? void 0 : parent.collapsed)) {\n        // If the node's parent is uncollapsed the node's children should still be recursed\n        // in order to compute its value properly eg \"{} 4 keys\" and to place clickable arrow caret.\n        // Only when the node is completely hidden it should not be recursed\n        return false;\n    }\n    else if (!opts.stopCircularRecursion) {\n        return true;\n    }\n    else if (opts.isCircularNode) {\n        return opts.isCircularNode(node, iteratedValues);\n    }\n    else if (node.type === 'object' || node.type === 'array') {\n        const existingNodeWithValue = iteratedValues.get(node.value);\n        if (existingNodeWithValue && node.id !== existingNodeWithValue.id) {\n            node.circularOfId = existingNodeWithValue.id;\n            return false;\n        }\n        iteratedValues.set(node.value, node);\n    }\n    return true;\n}\nexport function recurseObjectProperties(index, key, value, depth, ensureNotCollapsed, parent, treeMap, oldTreeMap, iteratedValues, recomputeExpandNode, opts) {\n    var _a;\n    if (((_a = opts.omitKeys) === null || _a === void 0 ? void 0 : _a.includes(key)) || (opts.maxDepth && depth >= opts.maxDepth)) {\n        return null;\n    }\n    const node = createNode(index, key, value, depth, parent);\n    const oldNode = oldTreeMap.get(node.id);\n    if (ensureNotCollapsed) {\n        // Used to ensure that either root node is always uncollapsed or when uncollapsing new nodes\n        // with expandNodeChildren the node children are recursed (if applicable) with mapChildren\n        node.collapsed = false;\n    }\n    else if (oldNode && !recomputeExpandNode) {\n        // Maintain the same expanded/collapsed toggle for a node in this path/id\n        // EXCEPT when the shouldExpandNode prop is changed...\n        node.collapsed = oldNode.collapsed;\n    }\n    else if (opts.shouldExpandNode) {\n        node.collapsed = !opts.shouldExpandNode(node);\n    }\n    treeMap.set(node.id, node);\n    if (shouldRecurseChildren(node, parent, iteratedValues, opts)) {\n        const mappedChildren = opts.mapChildren && opts.mapChildren(value, getValueType(value), node);\n        const children = mappedChildren !== null && mappedChildren !== void 0 ? mappedChildren : getChildren(value, getValueType(value));\n        node.children = children\n            .map(([key, val], idx) => recurseObjectProperties(idx, key, val, depth + 1, false, node, treeMap, oldTreeMap, iteratedValues, recomputeExpandNode, opts))\n            .filter(n => n !== null);\n    }\n    return node;\n}\nexport function recomputeTree(data, oldTreeMap, recursionOpts, recomputeExpandNode) {\n    const treeMap = new Map();\n    const iteratedValues = new Map();\n    const newTree = recurseObjectProperties(-1, 'root', data, -1, true, null, treeMap, oldTreeMap, iteratedValues, recomputeExpandNode, recursionOpts);\n    return { treeMap, tree: newTree, iteratedValues };\n}\n","import { derived, get, writable } from 'svelte/store';\nexport const createPropsStore = (initialProps) => {\n    const props = writable(initialProps);\n    const recursionOpts = derived(props, p => p.recursionOpts);\n    return {\n        props,\n        recursionOpts,\n        setProps(newProps) {\n            props.set(newProps);\n        },\n        formatValue(val, node) {\n            const { valueFormatter } = get(props);\n            const customFormat = valueFormatter ? valueFormatter(val, node) : undefined;\n            if (customFormat) {\n                return customFormat;\n            }\n            switch (node.type) {\n                case 'array':\n                    return `${node.circularOfId ? 'circular' : ''} [] ${val.length} items`;\n                case 'object':\n                    return `${node.circularOfId ? 'circular' : ''} {} ${Object.keys(val).length} keys`;\n                case 'map':\n                case 'set':\n                    return `${node.circularOfId ? 'circular' : ''} () ${val.size} entries`;\n                case 'date':\n                    return `${val.toISOString()}`;\n                case 'string':\n                    return `\"${val}\"`;\n                case 'boolean':\n                    return val ? 'true' : 'false';\n                default:\n                    return val;\n            }\n        }\n    };\n};\n","import { get, writable } from 'svelte/store';\nimport { createNode, recurseObjectProperties } from '../tree-utils';\nexport const createTreeStore = (propsStore) => {\n    const defaultRootNode = createNode(0, 'root', [], 0, null);\n    const tree = writable(defaultRootNode);\n    const treeMap = writable(new Map());\n    const iteratedValues = writable(new Map());\n    return {\n        tree,\n        treeMap,\n        defaultRootNode,\n        init(newTree, newTreeMap, iterated) {\n            if (newTree) {\n                tree.set(newTree);\n            }\n            else {\n                tree.set(defaultRootNode);\n            }\n            treeMap.set(newTreeMap);\n            iteratedValues.set(iterated);\n        },\n        getNode(id) {\n            return get(treeMap).get(id);\n        },\n        toggleCollapse(id) {\n            const node = get(treeMap).get(id);\n            if (!node) {\n                console.warn(`Attempted to collapse non-existent node: ${id}`);\n                return;\n            }\n            const updatedNode = { ...node, collapsed: !node.collapsed };\n            treeMap.update(m => new Map(m.set(node.id, updatedNode)));\n            const recursionOpts = get(propsStore.recursionOpts);\n            if (recursionOpts) {\n                this.expandNodeChildren(updatedNode, recursionOpts);\n            }\n        },\n        expandNodeChildren(node, recursionOpts) {\n            const parent = this.getNode((node === null || node === void 0 ? void 0 : node.parentId) || '') || null;\n            if (!parent) {\n                // Only root node has no parent and it should not be expandable\n                throw Error('No parent in expandNodeChildren for node: ' + node);\n            }\n            const newTreeMap = new Map(get(treeMap));\n            const oldTreeMap = get(treeMap);\n            const previouslyIterated = get(iteratedValues);\n            const nodeWithUpdatedChildren = recurseObjectProperties(node.index, node.key, node.value, node.depth, !node.collapsed, // Ensure that when uncollapsed the node's children are always recursed\n            parent, newTreeMap, oldTreeMap, previouslyIterated, false, // Never recompute shouldExpandNode since it may override the collapsing of this node\n            recursionOpts);\n            if (!nodeWithUpdatedChildren)\n                return;\n            parent.children = parent.children.map(c => c.id === nodeWithUpdatedChildren.id ? nodeWithUpdatedChildren : c);\n            newTreeMap.set(nodeWithUpdatedChildren.id, nodeWithUpdatedChildren);\n            newTreeMap.set(parent.id, parent);\n            treeMap.set(newTreeMap);\n            iteratedValues.set(previouslyIterated);\n        },\n        expandAllNodesToNode(id) {\n            function recurseNodeUpwards(updated, node) {\n                if (!node)\n                    return;\n                updated.set(node.id, { ...node, collapsed: false });\n                if (node.parentId) {\n                    recurseNodeUpwards(updated, updated.get(node.parentId));\n                }\n            }\n            const updated = new Map(get(treeMap));\n            recurseNodeUpwards(updated, updated.get(id));\n            treeMap.set(updated);\n        }\n    };\n};\n","<script >import { getContext } from 'svelte';\nexport let id;\nconst { treeStore, propsStore, rootElementStore } = getContext('svelte-tree-view');\nlet node;\n$: {\n    let found = treeStore.getNode(id);\n    // Should explode rather than have logic written around undefinedness\n    // as this component should be unmounted if it's undefined.\n    if (!found) {\n        throw Error('[svelte-tree-view] TreeViewNode.svelte received undefined node from treeMapStore whereas it should be already unmounted!');\n    }\n    node = found;\n}\n$: hasChildren = node && node.children.length > 0;\n$: props = propsStore.props;\n$: valueComponent = $props.valueComponent;\ntreeStore.treeMap.subscribe(value => {\n    const n = value.get(id);\n    if (n && node !== n) {\n        node = n;\n    }\n});\nfunction handleLogNode() {\n    // eslint-disable-next-line no-console\n    console.info('%c [svelte-tree-view]: Property added to window._node', 'color: #b8e248');\n    // eslint-disable-next-line no-console\n    console.log(node.value);\n    try {\n        if (typeof window !== 'undefined')\n            window._node = node.value;\n    }\n    catch (err) {\n        console.error('Failed to set _node, window was undefined');\n    }\n}\nfunction handleCopyNodeToClipboard() {\n    try {\n        navigator.clipboard.writeText(JSON.stringify(node.value));\n    }\n    catch (err) {\n        console.error('Copying node to clipboard failed: ', err);\n    }\n}\nfunction handleToggleCollapse() {\n    var _a;\n    if (hasChildren) {\n        treeStore.toggleCollapse(node.id);\n    }\n    else if (node.circularOfId) {\n        treeStore.expandAllNodesToNode(node.circularOfId);\n        (_a = $rootElementStore.querySelector(`li[data-tree-id=\"${node.circularOfId}\"]`)) === null || _a === void 0 ? void 0 : _a.scrollIntoView();\n    }\n}\nfunction valueComponentDefaultFormatter(val) {\n    return propsStore.formatValue(val, node);\n}\n</script>\n\n<li class=\"row\" class:collapsed={node.collapsed && hasChildren} data-tree-id={node.id}>\n  {#if hasChildren}\n    <button\n      class={`arrow-btn ${node.collapsed ? 'collapsed' : ''}`}\n      on:click={handleToggleCollapse}\n    >\n      ▶\n    </button>\n  {/if}\n  <div\n    class=\"node-key\"\n    class:has-children={hasChildren}\n    class:p-left={!hasChildren}\n    on:click={handleToggleCollapse}\n  >\n    {node.key}:\n  </div>\n  <div\n    class=\"node-value\"\n    data-type={node.type}\n    class:expanded={!node.collapsed && hasChildren}\n    class:has-children={hasChildren}\n    on:click={handleToggleCollapse}\n  >\n    {#if valueComponent}\n      <svelte:component\n        this={valueComponent}\n        value={node.value}\n        {node}\n        defaultFormatter={valueComponentDefaultFormatter}\n      />\n    {:else}\n      {propsStore.formatValue(node.value, node)}\n    {/if}\n  </div>\n  <div class=\"buttons\">\n    {#if $props.showLogButton}\n      <button class=\"log-copy-button\" on:click={handleLogNode}>log</button>\n    {/if}\n    {#if $props.showCopyButton}\n      <button class=\"log-copy-button\" on:click={handleCopyNodeToClipboard}>copy</button>\n    {/if}\n  </div>\n</li>\n{#if !node.collapsed && hasChildren}\n  <li class=\"row\">\n    <ul>\n      {#each node.children as child}\n        <svelte:self id={child.id} />\n      {/each}\n    </ul>\n  </li>\n{/if}\n\n<style >ul {\n  display: flex;\n  flex-direction: column;\n  height: max-content;\n  list-style: none;\n  padding: 0;\n  padding-left: var(--tree-view-left-indent);\n  margin: 0;\n  width: 100%;\n}\n\nli {\n  align-items: baseline;\n  display: flex;\n  height: max-content;\n  line-height: var(--tree-view-line-height);\n  list-style: none;\n  width: 100%;\n}\n\nli + li {\n  margin-top: 0.25em;\n}\n\n.empty-block {\n  visibility: hidden;\n}\n\n.node-key {\n  color: var(--tree-view-base0D);\n  margin-right: var(--tree-view-key-margin-right);\n}\n.node-key.has-children {\n  cursor: pointer;\n}\n.node-key.p-left {\n  padding-left: 1.1em;\n}\n\n.node-value {\n  color: var(--tree-view-base0B);\n  margin-right: 0.5em;\n  word-break: break-all;\n}\n.node-value[data-type=number], .node-value[data-type=boolean] {\n  color: var(--tree-view-base09);\n}\n.node-value[data-type=null], .node-value[data-type=undefined] {\n  color: var(--tree-view-base08);\n}\n.node-value.expanded {\n  color: var(--tree-view-base03);\n}\n.node-value.has-children {\n  cursor: pointer;\n}\n\n.arrow-btn {\n  background: transparent;\n  border: 0;\n  color: var(--tree-view-base0D);\n  cursor: pointer;\n  margin-right: 0.7em;\n  padding: 0;\n  transition: all 150ms ease 0s;\n  transform: rotateZ(90deg);\n  transform-origin: 47% 43%;\n  position: relative;\n  line-height: 1.1em;\n  font-size: 0.75em;\n}\n.arrow-btn.collapsed {\n  transform: rotateZ(0deg);\n}\n\n.buttons {\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.log-copy-button {\n  background: transparent;\n  border: 0;\n  color: var(--tree-view-base0D);\n  cursor: pointer;\n  margin: 0;\n  padding: 0 0.5em;\n}\n.log-copy-button:hover {\n  background: rgba(255, 162, 177, 0.4);\n  border-radius: 2px;\n  color: var(--tree-view-base07);\n}</style>\n","<script >var _a;\nimport { setContext, onMount } from 'svelte';\nimport { get } from 'svelte/store';\nimport { recomputeTree } from './tree-utils';\nimport { createPropsStore, createRootElementStore, createTreeStore, } from './stores';\nimport TreeViewNode from './TreeViewNode.svelte';\nexport let data, theme = undefined, showLogButton = false, showCopyButton = false, valueComponent = undefined, recursionOpts = {}, valueFormatter = undefined;\nlet rootElement = null;\nconst defaultRecursionOpts = {\n    maxDepth: 16,\n    omitKeys: [],\n    stopCircularRecursion: false,\n    shouldExpandNode: () => false\n};\nlet props = {\n    showLogButton,\n    showCopyButton,\n    valueComponent,\n    recursionOpts: Object.assign(Object.assign({}, defaultRecursionOpts), recursionOpts),\n    valueFormatter\n};\n$: rootNode = treeStore.tree;\n$: {\n    // To keep things less messy all props are joined to one object _except_ the recursionOpts\n    // which is picked from the old props. This is to allow checking between the old and new recursionOpts\n    // in the recomputeTree.\n    props = {\n        showLogButton,\n        showCopyButton,\n        valueComponent,\n        valueFormatter,\n        recursionOpts: props.recursionOpts\n    };\n}\n$: {\n    // Combine the defaultProps with the possible new recursion opts\n    const newRecursionOpts = Object.assign(Object.assign({}, defaultRecursionOpts), recursionOpts);\n    // Compare the old shouldExpandNode option with the possible new shouldExpandNode\n    // to know whether to whole tree should be recomputed.\n    const recomputeExpandNode = ((_a = props === null || props === void 0 ? void 0 : props.recursionOpts) === null || _a === void 0 ? void 0 : _a.shouldExpandNode) !== newRecursionOpts.shouldExpandNode;\n    const oldTreeMap = get(treeStore.treeMap);\n    const { treeMap, tree, iteratedValues } = recomputeTree(data, oldTreeMap, newRecursionOpts, recomputeExpandNode);\n    treeStore.init(tree, treeMap, iteratedValues);\n    props.recursionOpts = newRecursionOpts;\n    propsStore.setProps(props);\n}\n$: {\n    if (theme && rootElement) {\n        let key;\n        for (key in theme) {\n            // This ridiculous thing is for TypeScript type inference. Yey..?\n            const value = theme[key];\n            if (rootElement && key.includes('--tree-view-base') && value) {\n                rootElement.style.setProperty(`--tree-view-${key}`, value);\n            }\n        }\n    }\n}\nconst propsStore = createPropsStore(props);\nconst rootElementStore = createRootElementStore();\nconst treeStore = createTreeStore(propsStore);\nsetContext('svelte-tree-view', {\n    propsStore,\n    rootElementStore,\n    treeStore,\n});\nonMount(() => {\n    rootElementStore.set(rootElement);\n});\n</script>\n\n<ul class={`${$$props.class || ''} svelte-tree-view`} bind:this={rootElement}>\n  {#each $rootNode.children as child}\n    <TreeViewNode id={child.id} />\n  {/each}\n</ul>\n\n<style>\n  * {\n    box-sizing: border-box;\n  }\n  :root {\n    --tree-view-base00: #363755;\n    --tree-view-base01: #604d49;\n    --tree-view-base02: #6d5a55;\n    --tree-view-base03: #d1929b;\n    --tree-view-base04: #b79f8d;\n    --tree-view-base05: #f9f8f2;\n    --tree-view-base06: #f7f4f1;\n    --tree-view-base07: #faf8f5;\n    --tree-view-base08: #fa3e7e;\n    --tree-view-base09: #fd993c;\n    --tree-view-base0A: #f6bf81;\n    --tree-view-base0B: #b8e248;\n    --tree-view-base0C: #b4efe4;\n    --tree-view-base0D: #85d9ef;\n    --tree-view-base0E: #be87ff;\n    --tree-view-base0F: #d6724c;\n\n    --tree-view-font-family: 'Helvetica Neue', 'Calibri Light', Roboto, sans-serif;\n    --tree-view-font-size: 13px;\n    --tree-view-left-indent: 0.875em;\n    --tree-view-line-height: 1.1;\n    --tree-view-key-margin-right: 0.5em;\n  }\n  ul {\n    background: var(--tree-view-base00);\n    font-family: var(--tree-view-font-family);\n    font-size: var(--tree-view-font-size);\n    height: max-content;\n    list-style: none;\n    margin: 0;\n    padding: 0;\n    width: max-content;\n  }\n</style>\n","import { writable } from 'svelte/store';\nexport const createRootElementStore = () => {\n    const rootElementStore = writable(null);\n    return {\n        set: rootElementStore.set,\n        subscribe: rootElementStore.subscribe\n    };\n};\n","<section class=\"split-view\">\n  <slot class=\"left-panel\" name=\"left\" />\n  <slot class=\"right-panel\" name=\"right\" />\n</section>\n\n<style lang=\"scss\">\n  section {\n    border-top: 1px solid rgba($color-red-light, 0.2);\n    color: var(--color-white);\n    display: flex;\n    height: calc(100% - var(--height-tabs-menu));\n    width: 100%;\n  }\n  :global(.split-view h2) {\n    color: var(--color-red-gray);\n    font-family: var(--font-sans);\n    font-size: var(--font-medium);\n    font-weight: 400;\n    letter-spacing: 1px;\n    margin: 0;\n    text-transform: uppercase;\n  }\n  :global(.split-view > .left-panel) {\n    display: flex;\n    flex-direction: column;\n    flex-grow: 1;\n    overflow: scroll;\n    padding: 1em;\n  }\n  :global(.split-view > .right-panel) {\n    border-left: 1px solid rgba($color-red-light, 0.2);\n    display: flex;\n    flex-direction: column;\n    flex-grow: 1;\n    overflow: scroll;\n    padding: 1em;\n  }\n  :global(.split-view .hidden) {\n    visibility: hidden;\n  }\n</style>\n","<script lang=\"ts\">\n  export let selected = false\n  let buttonProps = {\n    class: [$$restProps.class]\n  }\n</script>\n\n<button on:click on:mouseover on:mouseenter on:mouseleave on:focus {...buttonProps} class:selected\n  ><slot /></button\n>\n\n<style lang=\"scss\">\n  button {\n    background: transparent;\n    border: 0;\n    border-radius: 2px;\n    color: var(--color-gray-light);\n    cursor: pointer;\n    font-size: var(--font-small);\n    padding: 6px 10px;\n    text-transform: uppercase;\n    &:hover {\n      background: rgba($color-red-light, 0.4);\n      color: var(--color-white);\n    }\n    &.selected {\n      background: rgba($color-red-light, 0.4);\n    }\n  }\n</style>\n","<script lang=\"ts\">\n  import { getContext } from '$context'\n  import { latestEntry } from '$stores/stateHistory'\n  import { getActiveMarks } from './getActiveMarks'\n  import { createSelection, createFullSelection } from './selection'\n\n  import TreeView from 'svelte-tree-view'\n  import type { TreeNode } from 'svelte-tree-view'\n  import SplitView from '../SplitView.svelte'\n  import Button from '$components/Button.svelte'\n\n  const { view } = getContext('editor-view')\n  let doc = view.state.doc.toJSON()\n  let selection = createSelection(view.state.selection)\n  let currentState = view.state\n  let activeMarks: string[] = []\n  let nodeSize = view.state.doc.nodeSize\n  let childCount = view.state.doc.childCount\n  let expandedSelection = false\n\n  latestEntry.subscribe(e => {\n    if (!e) return\n    const { state } = e\n    currentState = state\n    doc = state.doc.toJSON()\n    selection = expandedSelection ? createFullSelection(state.selection) : createSelection(state.selection)\n    activeMarks = getActiveMarks(state)\n    nodeSize = state.doc.nodeSize\n    childCount = state.doc.childCount\n  })\n\n  function handleClickLogDoc() {\n    console.log(doc)\n    window._doc = doc\n  }\n  function handleExpandSelection() {\n    expandedSelection = !expandedSelection\n    if (expandedSelection) {\n      selection = createFullSelection(currentState.selection)\n    } else {\n      selection = createSelection(currentState.selection)\n    }\n  }\n  function formatDocNodeValue(val: any, n: TreeNode) {\n    if (n.type === 'object' && val.type) {\n      return `{} ${val.type}`\n    }\n  }\n</script>\n\n<SplitView>\n  <div slot=\"left\" class=\"left-panel\">\n    <div class=\"top-row\">\n      <h2>Current doc</h2>\n      <Button on:click={handleClickLogDoc}>log</Button>\n    </div>\n    <TreeView\n      class=\"tree-view\"\n      data={doc}\n      showLogButton\n      showCopyButton\n      valueFormatter={formatDocNodeValue}\n    />\n  </div>\n  <div slot=\"right\" class=\"right-panel\">\n    <div class=\"top-row\">\n      <h2>Selection</h2>\n      <Button class=\"selection-btn\" on:click={handleExpandSelection}\n        ><span class=\"caret-icon\" class:expanded={expandedSelection} /></Button\n      >\n    </div>\n    <TreeView class=\"tree-view\" data={selection} />\n    <div>\n      <h2>Active marks</h2>\n      {#if activeMarks.length === 0}\n        <div class=\"no-marks\">No active marks</div>\n      {:else}\n        <TreeView class=\"tree-view\" data={activeMarks} />\n      {/if}\n    </div>\n    <div>\n      <h2>Document stats</h2>\n      <TreeView\n        class=\"tree-view\"\n        data={{\n          nodeSize,\n          childCount\n        }}\n      />\n    </div>\n  </div>\n</SplitView>\n\n<style lang=\"scss\">\n  .top-row {\n    align-items: center;\n    display: flex;\n    justify-content: space-between;\n  }\n  .left-panel {\n    overflow: scroll;\n  }\n  .right-panel {\n    border-left: 1px solid rgba($color-red-light, 0.2);\n    flex-grow: 0;\n    min-width: 200px;\n    width: 200px;\n  }\n  :global(.split-view .selection-btn) {\n    height: 24px;\n    width: 35px;\n  }\n  .caret-icon::before {\n    content: '▶';\n  }\n  .caret-icon.expanded::before {\n    content: '▼';\n  }\n  .no-marks {\n    color: var(--color-blue-light);\n    margin: 0.5em 0 1em 1em;\n  }\n  :global(.split-view .tree-view) {\n    margin: 0.5em 0 1em 0;\n  }\n</style>\n","import { EditorState } from 'prosemirror-state'\n\n// From https://github.com/PierBover/prosemirror-cookbook\nexport function getActiveMarks(state: EditorState): string[] {\n  if (state.selection.empty) {\n    const $from = state.selection.$from\n    const storedMarks = state.storedMarks\n\n    // Return either the stored marks, or the marks at the cursor position.\n    // Stored marks are the marks that are going to be applied to the next input\n    // if you dispatched a mark toggle with an empty cursor.\n    if (storedMarks) {\n      return storedMarks.map(mark => mark.type.name)\n    } else {\n      return $from.marks().map(mark => mark.type.name)\n    }\n  } else {\n    const $head = state.selection.$head\n    const $anchor = state.selection.$anchor\n\n    // We're using a Set to not get duplicate values\n    const activeMarks = new Set<string>()\n\n    // Here we're getting the marks at the head and anchor of the selection\n    $head.marks().forEach(mark => activeMarks.add(mark.type.name))\n    $anchor.marks().forEach(mark => activeMarks.add(mark.type.name))\n\n    return Array.from(activeMarks)\n  }\n}\n","import type { Delta } from 'jsondiffpatch'\nimport type { TreeNode, ValueType } from 'svelte-tree-view'\n\n// function postprocessValue(value: any) {\n//   if (value && value._t === 'a') {\n//     const res: { [key: string]: string | string[] } = {}\n//     for (const key in value) {\n//       if (key !== '_t') {\n//         if (key[0] === '_' && !value[key.substr(1)]) {\n//           res[key.substr(1)] = value[key]\n//         } else if (value['_' + key]) {\n//           res[key] = [value['_' + key][0], value[key][0]]\n//         } else if (!value['_' + key] && key[0] !== '_') {\n//           res[key] = value[key]\n//         }\n//       }\n//     }\n//     return res\n//   }\n//   return value\n// }\n\nexport function mapSelectionDeltaChildren(\n  _val: any,\n  type: ValueType,\n  _parent: TreeNode\n): [string, any][] | undefined {\n  if (type !== 'array') return\n  return []\n}\n\n/**\n * Magic function to transform jsondiffpatch array deltas\n * https://github.com/benjamine/jsondiffpatch/blob/master/docs/deltas.md\n * https://benjamine.github.io/jsondiffpatch/demo/index.html\n */\nexport function mapDocDeltaChildren(delta: Delta, type: ValueType) {\n  // So due to the way the tree-view works, it will automatically map the children of an array\n  // to their own nodes. For diff deltas, however, we want to omit those children and just show\n  // a value wrapped with <span> to show either deleted or inserted content\n  if (type === 'array' && delta[1] === 0 && delta[2] === 0) {\n    // Remove operation is defined by two 0s in its delta [{ <deleted> }, 0, 0]\n    return []\n    // } else if (type === 'array' && typeof delta[0] === 'string' && typeof delta[1] === 'number' && delta[2] === 3) {\n    // Move operation is almost the same as remove, except its value is empty and the second number\n    // points to the moved index eg [\"\", 6, 3] AND the third value is always '3'\n    // But since these seem to never occur (and they weren't handled in the previous version) we are not doing anything\n    // with them for now.\n  } else if (type === 'array' && typeof delta[0] === 'string' && delta[1] === 0 && delta[2] === 2) {\n    // If a diff between two strings gets too long, a text diff algorithm is used which produces an array\n    // with unidiff as the first value, 0 as the second and 2 as third.\n    // Eg [\"@@ -1,4 +1,9 @@\\n-text\\n+paragraph\\n\", 0, 2]\n    return []\n  } else if (type === 'array' && delta.length === 1 && typeof delta[0] === 'object') {\n    // Insert operations do not have indexes (it's already indexed in the array) and carry\n    // only an object payload eg [{ <inserted> }]\n    return []\n  }\n\n  // The main delta objects are objects denoted by key '_t' with 'a' value which we shall omit.\n  // DiffValue component handles the text diffs otherwise.\n  if (type !== 'object' || delta._t !== 'a') return\n\n  // We shall remap the values to omit '_t' and remove underscores from the keys\n  const transformed: [string, any][] = []\n  for (const key in delta) {\n    if (key === '_t') continue\n    // Remove or move operation is indicated by an underscore before the index eg '_2'\n    if (key.charAt(0) === '_') {\n      transformed.push([key.substr(1), delta[key]])\n    } else {\n      transformed.push([key, delta[key]])\n    }\n  }\n  return transformed\n}\n","<script lang=\"ts\">\n  import type { HistoryEntry } from '$typings/history'\n\n  export let listItems: {\n      isGroup: boolean\n      topEntry: HistoryEntry | undefined\n      entries: (HistoryEntry | undefined)[]\n      expanded: boolean\n    }[] = [],\n    selectedId: string,\n    onSelect: (id: string, groupIdx: number, wasTopNode: boolean) => void\n</script>\n\n<ul>\n  {#each listItems as group, groupIdx}\n    <li class:selected={!group.expanded && selectedId === group?.topEntry?.id}>\n      <button\n        class:is-group={group.isGroup}\n        on:click={() => group.topEntry && onSelect(group.topEntry.id, groupIdx, true)}\n      >\n        <span>\n          {group?.topEntry?.timeStr}\n          {#if group.isGroup}\n            [{group.entries.length}]\n          {/if}\n        </span>\n        {#if group.isGroup && group.entries.length > 1}\n          <span class=\"caret-icon\" class:expanded={group.expanded} />\n        {/if}\n      </button>\n    </li>\n    {#if group.isGroup && group.expanded}\n      {#each group.entries as subEntry}\n        <li class:selected={selectedId === subEntry?.id}>\n          <button\n            class=\"p-left\"\n            on:click={() => subEntry && onSelect(subEntry.id, groupIdx, false)}\n          >\n            {subEntry?.timeStr}\n          </button>\n        </li>\n      {/each}\n    {/if}\n  {/each}\n</ul>\n\n<style lang=\"scss\">\n  ul {\n    color: var(--color-white);\n    list-style: none;\n    margin: 0;\n    padding: 0;\n    height: 100%;\n    width: 100%;\n  }\n  li {\n    transition: background 0.1s;\n    &:hover {\n      background: rgba($color-red-light, 0.4);\n      color: var(--color-white);\n    }\n    &.selected {\n      background: rgba($color-red-light, 0.4);\n    }\n  }\n  li + li {\n    border-top: 1px solid var(--color-purple);\n  }\n  button {\n    background: transparent;\n    border: 0;\n    color: var(--color-gray-light);\n    cursor: pointer;\n    display: flex;\n    font-family: monospace;\n    font-size: var(--font-small);\n    height: 100%;\n    justify-content: space-between;\n    padding: 6px 18px;\n    text-transform: uppercase;\n    width: 100%;\n\n    &.p-left {\n      margin-left: 1em;\n    }\n  }\n  .caret-icon::before {\n    content: '▶';\n  }\n  .caret-icon.expanded::before {\n    content: '▼';\n  }\n</style>\n","<script lang=\"ts\">\n  import type { TreeNode } from 'svelte-tree-view'\n\n  export let value: any, node: TreeNode, defaultFormatter: (val: any) => string\n\n  $: nodeVal = node.value\n\n  function replaceSpacesWithNonBreakingSpace(value: string) {\n    return value.replace(/\\s/gm, ' ')\n  }\n  function parseTextDiff(textDiff: string) {\n    const diffByLines = textDiff.split(/\\n/gm).slice(1)\n    return diffByLines.map(line => {\n      const type = line.startsWith('-') ? 'delete' : line.startsWith('+') ? 'add' : 'raw'\n\n      return { [type]: replaceSpacesWithNonBreakingSpace(line.substr(1)) }\n    })\n  }\n  function stringifyAndShrink(v: any) {\n    if (v === null) {\n      return 'null'\n    }\n    const str = JSON.stringify(v)\n    if (typeof str === 'undefined') {\n      return 'undefined'\n    }\n    return str.length > 22 ? `${str.substr(0, 15)}…${str.substr(-5)}` : str\n  }\n\n  function getValueString(raw: any) {\n    if (typeof raw === 'string') {\n      return raw\n    }\n    return stringifyAndShrink(raw)\n  }\n</script>\n\n{#if Array.isArray(nodeVal)}\n  <!-- The why https://github.com/benjamine/jsondiffpatch/blob/master/docs/deltas.md -->\n  {#if nodeVal.length === 1}\n    <span class=\"added\">{getValueString(nodeVal[0])}</span>\n  {:else if nodeVal.length === 2}\n    <span class=\"updated\">\n      <span class=\"deleted\">{getValueString(nodeVal[0])}</span>\n      <span class=\"arrow\"> =&gt;</span>\n      <span class=\"added\">{getValueString(nodeVal[1])}</span>\n    </span>\n  {:else if nodeVal.length === 3 && nodeVal[1] === 0 && nodeVal[2] === 0}\n    <span class=\"deleted\">{getValueString(nodeVal[0])}</span>\n  {:else if nodeVal.length === 3 && nodeVal[2] === 2}\n    <span class=\"updated\">\n      {#each parseTextDiff(nodeVal[0]) as item}\n        {#if item.delete}\n          <span class=\"deleted\">{item.delete}</span>\n        {:else if item.add}\n          <span class=\"added\">{item.add}</span>\n        {:else}\n          <span>{item.raw}</span>\n        {/if}\n      {/each}\n    </span>\n  {/if}\n{:else}\n  {defaultFormatter(nodeVal)}\n{/if}\n\n<style>\n  .added {\n    display: inline-block;\n    background: var(--color-green-light);\n    border-radius: 1px;\n    color: var(--color-green);\n    padding: 1px 2px;\n    text-indent: 0;\n    min-height: 1ex;\n  }\n  .deleted {\n    display: inline-block;\n    background: var(--color-red);\n    border-radius: 1px;\n    color: var(--color-gray-light);\n    padding: 1px 2px;\n    text-decoration: line-through;\n    text-indent: 0;\n    min-height: 1ex;\n  }\n  .updated {\n    word-break: break-all;\n  }\n  .updated .added {\n    background: var(--color-yellow);\n  }\n  .arrow {\n    color: var(--color-green-light);\n  }\n</style>\n","<script lang=\"ts\">\n  import { stateHistory, shownHistoryGroups, latestEntry } from '$stores/stateHistory'\n  import type { HistoryEntry, HistoryGroup } from '$typings/history'\n  import { mapDocDeltaChildren, mapSelectionDeltaChildren } from './mapDeltas'\n\n  import SplitView from '../SplitView.svelte'\n  import TreeView from 'svelte-tree-view'\n  import HistoryList from './HistoryList.svelte'\n  import DiffValue from './DiffValue.svelte'\n  import Button from '$components/Button.svelte'\n\n  let selectedEntry: HistoryEntry | undefined = undefined,\n    showTr = false\n\n  let expandTrTreeView = false\n  let transactionRecursionOpts = {\n    maxDepth: 12,\n    stopCircularRecursion: true,\n    omitKeys: ['schema'],\n    shouldExpandNode: () => expandTrTreeView\n  }\n  $: listItems = $shownHistoryGroups.map((g: HistoryGroup) => ({\n    isGroup: g.isGroup,\n    topEntry: $stateHistory.get(g.topEntryId),\n    entries: g.entryIds.map(id => $stateHistory.get(id)),\n    expanded: g.expanded\n  }))\n  latestEntry.subscribe(v => {\n    if (v) selectedEntry = v\n  })\n\n  function toggleShowTr() {\n    showTr = !showTr\n  }\n  function handleLogTr() {\n    console.info('%c [prosemirror-dev-toolkit]: Property added to window._tr', 'color: #b8e248')\n    console.log(selectedEntry?.tr)\n    window._tr = selectedEntry?.tr\n  }\n  /**\n   * Handles the clicks of the history entries.\n   *\n   * Sets the clicked entry as the selectedEntry but in the case of topNode, meaning\n   * in a selection group (shown with [x] number) the entry has a sublist of entries\n   * where the previous is duplicated as the first entry. Therefore on expanding the group\n   * selecting the first sub-entry, otherwise collapsing but still keeping the topNode selected.\n   * Kinda confusing but eh.\n   */\n  function handleEntrySelect(id: string, groupIdx: number, wasTopNode: boolean) {\n    selectedEntry = $stateHistory.get(id)\n    const group = listItems[groupIdx]\n    if (group.isGroup && group.entries.length > 1 && wasTopNode) {\n      shownHistoryGroups.update(val =>\n        val.map((g, idx) => (idx !== groupIdx ? g : { ...g, expanded: !g.expanded }))\n      )\n    }\n  }\n  function handleToggleExpandTrTreeView() {\n    expandTrTreeView = !expandTrTreeView\n    transactionRecursionOpts = {\n      ...transactionRecursionOpts,\n      shouldExpandNode: () => expandTrTreeView\n    }\n  }\n</script>\n\n<SplitView>\n  <div slot=\"left\" class=\"left-panel\">\n    <!-- Cant use optional chaining here as it wont get transpiled correctly to ES5 :( -->\n    <HistoryList {listItems} selectedId={selectedEntry?.id || ''} onSelect={handleEntrySelect} />\n  </div>\n  <div slot=\"right\" class=\"right-panel\">\n    {#if selectedEntry}\n      <div>\n        {#if selectedEntry.contentDiff}\n          <div class=\"entry-row\">\n            <div class=\"title-container\">\n              <h2>Doc diff</h2>\n              <Button class=\"hidden\">log</Button>\n            </div>\n            <TreeView\n              class=\"tree-view\"\n              data={selectedEntry.contentDiff}\n              showLogButton\n              showCopyButton\n              valueComponent={DiffValue}\n              recursionOpts={{\n                maxDepth: 12,\n                mapChildren: mapDocDeltaChildren,\n                shouldExpandNode: () => true\n              }}\n            />\n          </div>\n        {/if}\n        {#if selectedEntry.selectionDiff}\n          <div class=\"entry-row\">\n            <div class=\"title-container\">\n              <h2>Selection diff</h2>\n              <Button class=\"hidden\">log</Button>\n            </div>\n            <TreeView\n              class=\"tree-view\"\n              data={selectedEntry.selectionDiff}\n              valueComponent={DiffValue}\n              recursionOpts={{\n                mapChildren: mapSelectionDeltaChildren,\n                shouldExpandNode: () => true\n              }}\n            />\n          </div>\n        {/if}\n        {#if selectedEntry.selectionHtml.length > 0}\n          <div class=\"entry-row\">\n            <div class=\"title-container\">\n              <h2>Selection content</h2>\n              <Button class=\"hidden\">log</Button>\n            </div>\n            <pre class=\"selection-html\"><code>{@html selectedEntry.selectionHtml}</code></pre>\n          </div>\n        {/if}\n        <div class=\"entry-row\">\n          <div class=\"title-container\">\n            <h2>Transaction</h2>\n            <div>\n              {#if showTr}\n                <Button on:click={handleToggleExpandTrTreeView}>\n                  {expandTrTreeView ? 'collapse' : 'expand'}\n                </Button>\n                <Button on:click={handleLogTr}>log</Button>\n              {/if}\n              <Button on:click={toggleShowTr}>\n                {showTr ? 'hide' : 'show'}\n              </Button>\n            </div>\n          </div>\n          {#if showTr}\n            <TreeView\n              class=\"tree-view\"\n              data={selectedEntry.tr}\n              showLogButton\n              showCopyButton\n              recursionOpts={transactionRecursionOpts}\n            />\n          {/if}\n        </div>\n      </div>\n    {:else}\n      <div class=\"equal-diff\">Docs are equal.</div>\n    {/if}\n  </div>\n</SplitView>\n\n<style lang=\"scss\">\n  .left-panel {\n    flex-grow: 0;\n    padding: 0;\n    min-width: 190px;\n    width: 190px;\n  }\n  .title-container {\n    align-items: center;\n    display: flex;\n    justify-content: space-between;\n  }\n  .entry-row + .entry-row {\n    margin-top: 1em;\n  }\n  .selection-html {\n    margin: 0.5em 0 0 0;\n    padding: 0;\n  }\n  .equal-diff {\n    align-items: center;\n    color: var(--color-red-light);\n    display: flex;\n    font-size: 14px;\n    height: 100%;\n    justify-content: center;\n    width: 100%;\n  }\n</style>\n","<script lang=\"ts\">\n  export let listItems: { key: string; value: string }[] = [],\n    selectedKey: string,\n    onSelect: (item: { key: string; value: string }) => void\n</script>\n\n<ul>\n  {#each listItems as item}\n    <li>\n      <button class:selected={selectedKey === item.key} on:click={() => onSelect(item)}\n        >{item.value}</button\n      >\n    </li>\n  {/each}\n</ul>\n\n<style lang=\"scss\">\n  ul {\n    color: var(--color-white);\n    list-style: none;\n    margin: 0;\n    padding: 0;\n    height: 100%;\n    width: 100%;\n  }\n  li + li {\n    border-top: 1px solid var(--color-purple);\n  }\n  button {\n    background: transparent;\n    border: 0;\n    color: var(--color-gray-light);\n    cursor: pointer;\n    display: flex;\n    font-family: monospace;\n    font-size: var(--font-small);\n    height: 100%;\n    padding: 6px 18px;\n    text-transform: uppercase;\n    width: 100%;\n    &:hover {\n      background: rgba($color-red-light, 0.4);\n      color: var(--color-white);\n    }\n    &.selected {\n      background: rgba($color-red-light, 0.4);\n      &.empty {\n        background: var(--color-purple-dark);\n      }\n    }\n    &.empty {\n      background: transparent;\n      color: var(--color-purple-light);\n      &:hover {\n        background: var(--color-purple-dark);\n      }\n    }\n  }\n</style>\n","<script lang=\"ts\">\n  import { getContext } from '$context'\n  import type { EditorState } from 'prosemirror-state'\n  import { latestEntry } from '$stores/stateHistory'\n\n  import SplitView from './SplitView.svelte'\n  import TreeView from 'svelte-tree-view'\n  import List from './List.svelte'\n  import Button from '$components/Button.svelte'\n\n  import type { Plugin } from '$typings/pm'\n\n  const { view } = getContext('editor-view')\n  let expandPluginState = false\n  let recursionOpts = {\n    maxDepth: 10,\n    stopCircularRecursion: true,\n    shouldExpandNode: () => expandPluginState\n  }\n  let editorState: EditorState = view.state\n  let plugins = editorState.plugins as Plugin[]\n  let selectedPlugin = plugins[0]\n  $: pluginState = selectedPlugin?.getState(editorState)\n  $: listItems = plugins.map((p: Plugin) => ({\n    key: p.key, // TODO this can be undefined??\n    value: p.key.toUpperCase(),\n    empty: !p.getState(editorState)\n  }))\n\n  latestEntry.subscribe(e => {\n    if (!e) return\n    editorState = e.state\n    plugins = editorState.plugins as Plugin[]\n    selectedPlugin = plugins.find(p => p.key === selectedPlugin.key) as Plugin\n  })\n\n  function handlePluginSelect(item: { key: string; value: string }) {\n    selectedPlugin = plugins.find(p => p.key === item.key) as Plugin\n  }\n  function handleToggleExpand() {\n    expandPluginState = !expandPluginState\n    recursionOpts = { ...recursionOpts, shouldExpandNode: () => expandPluginState }\n  }\n  function handleLogState() {\n    window._plugin = [selectedPlugin, pluginState]\n    console.info('%c [prosemirror-dev-toolkit]: Property added to window._plugin', 'color: #b8e248')\n    console.log(selectedPlugin)\n    console.log(pluginState)\n  }\n</script>\n\n<SplitView>\n  <div slot=\"left\" class=\"left-panel\">\n    <List {listItems} selectedKey={selectedPlugin.key} onSelect={handlePluginSelect} />\n  </div>\n  <div slot=\"right\" class=\"right-panel\">\n    {#if pluginState}\n      <div class=\"top-row\">\n        <h2>Plugin state</h2>\n        <div>\n          <Button on:click={handleToggleExpand}>\n            {expandPluginState ? 'collapse' : 'expand'}\n          </Button>\n          <Button on:click={handleLogState}>log</Button>\n        </div>\n      </div>\n    {/if}\n    {#if pluginState}\n      <TreeView data={pluginState} showLogButton showCopyButton {recursionOpts} />\n    {:else}\n      <div class=\"empty-state\">Plugin has no state</div>\n    {/if}\n  </div>\n</SplitView>\n\n<style lang=\"scss\">\n  .top-row {\n    align-items: center;\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 0.5em;\n  }\n  .left-panel {\n    flex-grow: 0;\n    overflow: scroll;\n    padding: 0;\n    min-width: 190px;\n    width: 190px;\n  }\n  .right-panel {\n    border-left: 1px solid rgba($color-red-light, 0.2);\n  }\n  .empty-state {\n    align-items: center;\n    color: var(--color-red-light);\n    display: flex;\n    font-size: 14px;\n    height: 100%;\n    justify-content: center;\n    width: 100%;\n  }\n</style>\n","<script lang=\"ts\">\n  import { getContext } from '$context'\n\n  import TreeView from 'svelte-tree-view'\n  import SplitView from './SplitView.svelte'\n  import Button from '$components/Button.svelte'\n\n  const { view } = getContext('editor-view')\n\n  let nodes = view.state.schema.nodes\n  let marks = view.state.schema.marks\n</script>\n\n<SplitView>\n  <div slot=\"left\" class=\"left-panel\">\n    <div class=\"top-row\">\n      <h2>Nodes</h2>\n      <Button class=\"hidden\">log</Button>\n    </div>\n    <TreeView\n      class=\"tree-view\"\n      data={nodes}\n      showLogButton\n      showCopyButton\n      recursionOpts={{\n        stopCircularRecursion: true\n      }}\n    />\n  </div>\n  <div slot=\"right\" class=\"right-panel\">\n    <div class=\"top-row\">\n      <h2>Marks</h2>\n      <Button class=\"hidden\">log</Button>\n    </div>\n    <TreeView\n      class=\"tree-view\"\n      data={marks}\n      showLogButton\n      showCopyButton\n      recursionOpts={{\n        stopCircularRecursion: true\n      }}\n    />\n  </div>\n</SplitView>\n\n<style lang=\"scss\">\n  .top-row {\n    align-items: center;\n    display: flex;\n    justify-content: space-between;\n  }\n  .left-panel {\n    overflow: scroll;\n    padding: 1em;\n  }\n  .right-panel {\n    border-left: 1px solid rgba($color-red-light, 0.2);\n    overflow: scroll;\n    padding: 1em;\n  }\n</style>\n","<script lang=\"ts\">\n  import { getContext } from '$context'\n  import type { Node as PMNode } from 'prosemirror-model'\n  import type { Fragment } from '$typings/pm'\n\n  const { selected, colors, handleNodeClick } = getContext('doc-view')\n\n  export let node: PMNode,\n    startPos: number,\n    isRoot = false\n\n  $: fragment = node.content as Fragment\n  $: color = colors[node.type.name]\n  $: name =\n    node.isText && node.marks.length > 0\n      ? `${node.type.name} - [${node.marks.map(m => m.type.name).join(', ')}]`\n      : node.type.name\n\n  $: startPositions = Array(node.childCount)\n    .fill(undefined)\n    .reduce((acc, _, idx) => {\n      if (idx === 0) {\n        return [isRoot ? 0 : startPos + 1]\n      }\n      let prev = acc[idx - 1]\n      let cur = node.child(idx - 1)\n      return [...acc, prev + cur.nodeSize]\n    }, [])\n\n  $: endPos = startPos + node.nodeSize\n  $: inlineChildren = fragment.content.every(n => n.isInline)\n\n  function handleNameClick() {\n    handleNodeClick(node)\n  }\n</script>\n\n<li class={`${$$props.class || ''} doc-node`} class:root={isRoot}>\n  <div class=\"doc-node-body\" style={`background: ${color}`}>\n    <div class=\"number-box\">{startPos}</div>\n    <button class:selected={false} aria-label=\"Show node info button\" on:click={handleNameClick}\n      >{name}</button\n    >\n    <div class=\"number-box\">{endPos}</div>\n  </div>\n  <ul class:inline-children={inlineChildren}>\n    {#each fragment.content as child, i}\n      <svelte:self node={child} startPos={startPositions[i]} />\n    {/each}\n  </ul>\n</li>\n\n<style lang=\"scss\">\n  .doc-node {\n    border-left: 1px solid var(--color-blue-bg);\n    border-right: 1px solid var(--color-blue-bg);\n    display: flex;\n    flex-direction: column;\n    padding: 0 12px;\n    &.root {\n      border: 0;\n      padding: 0;\n    }\n  }\n  .doc-node-body {\n    background: var(--color-blue-bg);\n    color: var(--color-black);\n    display: flex;\n    font-size: 13px;\n    margin-top: 3px;\n  }\n  .number-box {\n    padding: 3px 6px;\n    background: rgba($color-white, 0.3);\n  }\n  button {\n    background: transparent;\n    border: 0;\n    color: var(--color-black);\n    cursor: pointer;\n    display: flex;\n    height: 100%;\n    padding: 3px 9px;\n    white-space: pre;\n    width: 100%;\n    &:hover {\n      background: rgba($color-red-light, 0.4);\n      color: var(--color-white);\n    }\n    &.selected {\n      background: rgba($color-red-light, 0.4);\n    }\n  }\n  ul {\n    list-style: none;\n    margin: 0;\n    padding: 0;\n  }\n  .inline-children {\n    border-left: 1px solid var(--color-purple);\n    border-right: 1px solid var(--color-purple);\n    display: flex;\n    flex-wrap: wrap;\n    padding: 0 12px;\n    /* TODO this hurts my soul */\n    & > :global(.doc-node) {\n      flex-grow: 1;\n      padding: 0;\n    }\n  }\n</style>\n","import { Schema } from 'prosemirror-model'\n\nconst nodeColors = <const>[\n  '#EA7C7F', // red\n  '#67B0C6', // cyan 400\n  '#94BB7F', // green\n  '#CA9EDB', // deep purple\n  '#DCDC5D', // lime\n  '#B9CC7C', // light green\n  '#DD97D8', // purple\n  '#FFB761', // orange\n  '#4D8FD1', // light blue\n  '#F36E98', // pink\n  '#E45F44', // deep orange\n  '#A6A4AE', // blue grey\n  '#FCC047', // yellow\n  '#FFC129', // amber\n  '#D3929C', // can can\n  '#4CBCD4', // cyan\n  '#8D7BC0' // indigo\n]\n\nexport function calculateSafeIndex(index: number, total: number) {\n  const quotient = index / total\n  return Math.round(total * (quotient - Math.floor(quotient)))\n}\n\nexport function buildColors(schema: Schema) {\n  return Object.keys(schema.nodes).reduce((acc, node, index) => {\n    const safeIndex =\n      index >= nodeColors.length ? calculateSafeIndex(index, nodeColors.length) : index\n\n    acc[node] = nodeColors[safeIndex]\n    return acc\n  }, {} as { [key: string]: typeof nodeColors[number] })\n}\n","<script lang=\"ts\">\n  import { setContext } from '$context'\n  import type { Node as PMNode, Schema } from 'prosemirror-model'\n\n  import DocNode from './DocNode.svelte'\n  import { buildColors } from './colors'\n\n  export let doc: PMNode,\n    schema: Schema,\n    selected = { type: '', start: 0, end: 0 },\n    handleNodeSelect: (n: PMNode) => void\n\n  setContext('doc-view', {\n    selected,\n    colors: buildColors(schema),\n    handleNodeClick: handleNodeSelect\n  })\n</script>\n\n<ul>\n  <DocNode class={$$props.class} node={doc} startPos={0} depth={0} isRoot />\n</ul>\n\n<style>\n  ul {\n    list-style: none;\n    margin: 0;\n    padding: 0;\n  }\n</style>\n","<script lang=\"ts\">\n  import type { Node as PMNode, Schema } from 'prosemirror-model'\n  import { getContext } from '$context'\n  import { latestEntry } from '$stores/stateHistory'\n\n  import TreeView from 'svelte-tree-view'\n  import SplitView from '../SplitView.svelte'\n  import DocView from './DocView.svelte'\n  import Button from '$components/Button.svelte'\n\n  const { view } = getContext('editor-view')\n  let doc: PMNode = view.state.doc\n  let selectedNode = view.state.doc\n  $: jsonNode = selectedNode.toJSON()\n  let schema: Schema = view.state.schema\n  let timer: number | undefined\n\n  latestEntry.subscribe(e => {\n    if (!e) return\n    clearTimeout(timer)\n    timer = setTimeout(() => {\n      doc = e.state.doc\n    }, 100)\n  })\n\n  function handleNodeSelect(n: PMNode) {\n    selectedNode = n\n  }\n  function handleClickLogNode() {\n    console.log(selectedNode)\n    window._node = selectedNode\n    console.info('%c [prosemirror-dev-toolkit]: Property added to window._node', 'color: #b8e248')\n  }\n</script>\n\n<SplitView>\n  <div slot=\"left\" class=\"left-panel\">\n    <div class=\"top-row\">\n      <h2>Current doc</h2>\n      <Button class=\"hidden\">log</Button>\n    </div>\n    <DocView class=\"m-top\" {doc} {schema} {handleNodeSelect} />\n  </div>\n  <div slot=\"right\" class=\"right-panel\">\n    <div class=\"top-row\">\n      <h2>Node info</h2>\n      <Button on:click={handleClickLogNode}>log</Button>\n    </div>\n    <TreeView class=\"m-top\" data={jsonNode} />\n  </div>\n</SplitView>\n\n<style lang=\"scss\">\n  .top-row {\n    align-items: center;\n    display: flex;\n    justify-content: space-between;\n  }\n  .right-panel {\n    border-left: 1px solid rgba($color-red-light, 0.2);\n    flex-grow: 0;\n    min-width: 220px;\n    width: 220px;\n  }\n  :global(.split-view .m-top) {\n    margin-top: 0.5em;\n  }\n</style>\n","<script lang=\"ts\">\n  import type { Snapshot } from '$typings/snapshots'\n\n  export let snapshots: Snapshot[] = [],\n    selectedSnapshot: Snapshot | undefined = undefined,\n    onUpdate: (snap: Snapshot) => void,\n    onView: (snap?: Snapshot) => void,\n    onRestore: (snap: Snapshot) => void,\n    onExport: (snap: Snapshot) => void,\n    onDelete: (snap: Snapshot) => void\n\n  let editedSnap: Snapshot | undefined\n  let deleteSnap: Snapshot | undefined\n  let timer: number | undefined\n\n  const debounceUpdate = () => {\n    clearTimeout(timer)\n    timer = setTimeout(() => {\n      onUpdate(editedSnap as Snapshot)\n    }, 150)\n  }\n\n  function handleSnapDoubleclick(snap: Snapshot) {\n    editedSnap = snap\n    deleteSnap = undefined\n  }\n  function handleNameChange(evt: any) {\n    if (editedSnap) {\n      editedSnap.name = evt.target.value\n      debounceUpdate()\n    }\n  }\n  function handleNameKeyPress(evt: any) {\n    if (evt.key === 'Enter' && editedSnap) {\n      onUpdate(editedSnap)\n      clearTimeout(timer)\n      editedSnap = undefined\n      deleteSnap = undefined\n    }\n  }\n  function handleClickView(snap: Snapshot) {\n    if (selectedSnapshot?.timestamp === snap.timestamp) {\n      onView()\n    } else {\n      onView(snap)\n    }\n    deleteSnap = undefined\n  }\n  function handleRestoreClick(snap: Snapshot) {\n    onRestore(snap)\n    deleteSnap = undefined\n  }\n  function handleExportClick(snap: Snapshot) {\n    onExport(snap)\n    deleteSnap = undefined\n  }\n  function handleClickDelete(snap: Snapshot) {\n    if (!deleteSnap || deleteSnap.timestamp !== snap.timestamp) {\n      deleteSnap = snap\n    } else {\n      onDelete(snap)\n      deleteSnap = undefined\n    }\n  }\n</script>\n\n<ul>\n  {#each snapshots as snap}\n    <li>\n      {#if editedSnap && editedSnap.timestamp === snap.timestamp}\n        <input\n          value={editedSnap.name}\n          on:input={handleNameChange}\n          on:keypress={handleNameKeyPress}\n        />\n      {:else}\n        <button\n          class=\"unstyled-btn\"\n          aria-label=\"Edit snapshot name button\"\n          on:dblclick={() => handleSnapDoubleclick(snap)}>{snap.name}</button\n        >\n      {/if}\n      <button class=\"snapshot-btn ml-2\" on:click={() => handleClickView(snap)}>\n        {#if selectedSnapshot?.timestamp === snap.timestamp}\n          Hide\n        {:else}\n          Show\n        {/if}\n      </button>\n      <button class=\"snapshot-btn\" on:click={() => handleRestoreClick(snap)}>Restore</button>\n      <button class=\"snapshot-btn\" on:click={() => handleExportClick(snap)}>Export</button>\n      <button class=\"snapshot-btn\" on:click={() => handleClickDelete(snap)}>\n        {#if deleteSnap?.timestamp === snap.timestamp}\n          Confirm Delete\n        {:else}\n          Delete\n        {/if}\n      </button>\n    </li>\n  {/each}\n</ul>\n\n<style lang=\"scss\">\n  ul {\n    color: var(--color-white);\n    list-style: none;\n    margin: 0;\n    padding: 0;\n    height: 100%;\n    width: 100%;\n  }\n  li + li {\n    border-top: 1px solid var(--color-purple);\n  }\n  li {\n    align-items: center;\n    display: flex;\n    font-family: monospace;\n    padding: 6px 18px;\n    & > div {\n      align-items: center;\n      display: flex;\n      flex-grow: 1;\n    }\n  }\n  input {\n    background: transparent;\n    border: 0;\n    color: var(--color-white);\n    height: 100%;\n    margin: 0;\n    padding: 2px;\n    width: 100%;\n  }\n  .unstyled-btn {\n    background: transparent;\n    border: 0;\n    color: var(--color-white);\n    cursor: pointer;\n    display: block;\n    font-family: monospace;\n    margin: 0;\n    padding: 0;\n    text-align: start;\n    width: 100%;\n  }\n  .snapshot-btn {\n    background: transparent;\n    border: 0;\n    border-radius: 3px;\n    color: var(--color-gray-light);\n    cursor: pointer;\n    display: flex;\n    font-size: 11px;\n    padding: 6px 18px;\n    text-transform: uppercase;\n    &:hover {\n      background: rgba($color-red-light, 0.4);\n      color: var(--color-white);\n    }\n  }\n  .ml-2 {\n    margin-left: 1rem;\n  }\n</style>\n","<script lang=\"ts\">\n  import { getContext } from '$context'\n\n  import SplitView from '$tabs/SplitView.svelte'\n  import SnapshotsList from './SnapshotsList.svelte'\n  import {\n    snapshots,\n    selectedSnapshot,\n    updateSnapshot,\n    toggleViewSnapshot,\n    restoreSnapshot,\n    exportSnapshot,\n    deleteSnapshot\n  } from '$stores/snapshots'\n  import { resetHistory } from '$stores/stateHistory'\n  import type { Snapshot } from '$typings/snapshots'\n\n  const { view } = getContext('editor-view')\n\n  function handleRestoreSnapshot(snapshot: Snapshot) {\n    restoreSnapshot(view, snapshot)\n    resetHistory()\n  }\n</script>\n\n<SplitView>\n  <div slot=\"right\" class=\"right-panel\">\n    {#if $snapshots.length === 0}\n      <div class=\"no-snapshots\">Save snapshots by clicking \"Save snapshot\" button.</div>\n    {:else}\n      <SnapshotsList\n        snapshots={$snapshots}\n        selectedSnapshot={$selectedSnapshot}\n        onUpdate={updateSnapshot}\n        onView={snap => toggleViewSnapshot(view, snap)}\n        onRestore={handleRestoreSnapshot}\n        onExport={exportSnapshot}\n        onDelete={deleteSnapshot}\n      />\n    {/if}\n  </div>\n</SplitView>\n\n<style lang=\"scss\">\n  .right-panel {\n    padding: 0;\n  }\n  .no-snapshots {\n    align-items: center;\n    color: var(--color-red-light);\n    display: flex;\n    font-size: 14px;\n    height: 100%;\n    justify-content: center;\n    width: 100%;\n  }\n</style>\n","<script lang=\"ts\">\n  import { onDestroy } from 'svelte'\n  import { getContext } from '$context'\n\n  import { saveSnapshot, importSnapshot } from '$stores/snapshots'\n\n  import TabsMenu from '$tabs/TabsMenu.svelte'\n  import StateTab from '$tabs/state/StateTab.svelte'\n  import HistoryTab from '$tabs/history/HistoryTab.svelte'\n  import PluginsTab from '$tabs/PluginsTab.svelte'\n  import SchemaTab from '$tabs/SchemaTab.svelte'\n  import StructureTab from '$tabs/structure/StructureTab.svelte'\n  import SnapshotsTab from '$tabs/snapshots/SnapshotsTab.svelte'\n\n  export let onClose: () => void\n\n  const { view } = getContext('editor-view')\n  let openTab = 'state',\n    dockTop = 50,\n    dockHeight = 50,\n    fileinput: HTMLInputElement\n\n  onDestroy(() => {\n    document.removeEventListener('mousemove', dragMove)\n    document.removeEventListener('mouseup', dragEnd)\n  })\n\n  function handleResizeMouseDown(e: any) {\n    document.addEventListener('mousemove', dragMove)\n    document.addEventListener('mouseup', dragEnd)\n  }\n  function dragMove(evt: MouseEvent) {\n    evt.preventDefault()\n    dockTop = (100 * evt.clientY) / window.innerHeight\n    dockHeight = 100 * (1 - evt.clientY / window.innerHeight)\n  }\n  function dragEnd(evt: MouseEvent) {\n    evt.preventDefault()\n    document.removeEventListener('mousemove', dragMove)\n    document.removeEventListener('mouseup', dragEnd)\n  }\n  function handleSaveSnapshot() {\n    const defaultName = new Date().toLocaleString('sv')\n    const snapshotName = prompt('Enter snapshot name', defaultName)\n    if (snapshotName) {\n      saveSnapshot(snapshotName, view.state.doc.toJSON())\n    }\n  }\n  function handleImportSnapshot() {\n    fileinput.click()\n  }\n  function handleFileSelected(\n    e: Event & {\n      currentTarget: EventTarget & HTMLInputElement\n    }\n  ) {\n    const target = <HTMLInputElement>e.target\n    Array.from(target.files || []).forEach(file => {\n      const reader = new FileReader()\n      reader.readAsText(file)\n      reader.onload = e => {\n        const data = typeof e.target?.result === 'string' ? e.target?.result : ''\n        try {\n          const json = JSON.parse(data)\n          if (!json || typeof json !== 'object') {\n            throw Error('Imported snapshot was not a JSON object' + json)\n          }\n          const name = file.name.slice(0, file.name.lastIndexOf('.'))\n          importSnapshot(name, json, view.state.schema)\n        } catch (err) {\n          console.error('Failed to import snapshot: ' + err)\n        }\n      }\n    })\n  }\n  function handleClickTab(tab: string) {\n    openTab = tab\n  }\n</script>\n\n<div class=\"floating-dock-wrapper\">\n  <div class=\"floating-dock\" style={`top: ${dockTop}%; height: ${dockHeight}%;`}>\n    <div class=\"resizing-div\" on:mousedown={handleResizeMouseDown} />\n    <div class=\"container\">\n      <div>\n        <button class=\"snap-save-btn\" on:click={handleSaveSnapshot}>Save snapshot</button>\n        <button class=\"snap-import-btn\" on:click={handleImportSnapshot}>Import snapshot</button>\n        <button class=\"close-btn\" aria-label=\"Close dev-toolkit button\" on:click={onClose}>X</button\n        >\n      </div>\n      <input\n        style=\"display:none\"\n        type=\"file\"\n        accept=\".json\"\n        multiple\n        on:change={handleFileSelected}\n        bind:this={fileinput}\n      />\n      <TabsMenu onClickTab={handleClickTab} active={openTab} />\n      {#if openTab === 'state'}\n        <StateTab />\n      {:else if openTab === 'history'}\n        <HistoryTab />\n      {:else if openTab === 'plugins'}\n        <PluginsTab />\n      {:else if openTab === 'schema'}\n        <SchemaTab />\n      {:else if openTab === 'structure'}\n        <StructureTab />\n      {:else if openTab === 'snapshots'}\n        <SnapshotsTab />\n      {:else}\n        <p>nuting here</p>\n      {/if}\n    </div>\n  </div>\n</div>\n\n<style lang=\"scss\">\n  .floating-dock-wrapper {\n    position: fixed;\n    width: 0px;\n    height: 0px;\n    top: 0px;\n    left: 0px;\n    z-index: 99999999;\n  }\n  .floating-dock {\n    background-color: var(--color-blue-bg);\n    position: fixed;\n    z-index: 1;\n    box-shadow: rgba($color-black, 0.3) 0px 0px 4px 0px;\n    left: 0px;\n    top: 50%;\n    width: 100%;\n    height: 50%;\n  }\n  .resizing-div {\n    position: absolute;\n    z-index: 2;\n    opacity: 0;\n    top: -5px;\n    height: 10px;\n    left: 0px;\n    width: 100%;\n    cursor: row-resize;\n  }\n  .container {\n    height: 100%;\n  }\n  .snap-save-btn {\n    background: rgba($color-red-light, 0.6);\n    border: 0;\n    border-radius: 3px;\n    color: var(--color-white);\n    cursor: pointer;\n    font-size: 12px;\n    height: 24px;\n    line-height: 25px;\n    padding: 0 6px;\n    position: absolute;\n    right: 134px;\n    top: -28px;\n    &:hover {\n      background: rgba($color-red-light, 0.8);\n    }\n  }\n  .snap-import-btn {\n    background: rgba($color-red-light, 0.6);\n    border: 0;\n    border-radius: 3px;\n    color: var(--color-white);\n    cursor: pointer;\n    font-size: 12px;\n    height: 24px;\n    line-height: 25px;\n    padding: 0 6px;\n    position: absolute;\n    right: 32px;\n    top: -28px;\n    &:hover {\n      background: rgba($color-red-light, 0.8);\n    }\n  }\n  .close-btn {\n    background: rgba($color-red-light, 0.6);\n    border: 0;\n    border-radius: 3px;\n    color: var(--color-white);\n    cursor: pointer;\n    height: 24px;\n    position: absolute;\n    right: 4px;\n    top: -28px;\n    width: 24px;\n    &:hover {\n      background: rgba($color-red-light, 0.8);\n    }\n  }\n</style>\n","<script lang=\"ts\">\n  import { onMount } from 'svelte'\n  import type { EditorView } from 'prosemirror-view'\n  import { setContext } from '$context'\n\n  import FloatingBtn from './FloatingBtn.svelte'\n  import FloatingDock from './FloatingDock.svelte'\n\n  import type { ButtonPosition } from '../types'\n\n  export let view: EditorView,\n    devToolsExpanded = false,\n    buttonPosition: ButtonPosition = 'bottom-right'\n\n  setContext('editor-view', {\n    view\n  })\n\n  onMount(() => {\n    const html = document && document.querySelector('html')\n    if (devToolsExpanded && html) {\n      html.style.marginBottom = '341px'\n    }\n  })\n\n  function handleFloatingBtnClick() {\n    devToolsExpanded = true\n    const html = document && document.querySelector('html')\n    if (html) {\n      html.style.marginBottom = '341px'\n    }\n  }\n  function handleFloatingDockClose() {\n    devToolsExpanded = false\n    const html = document && document.querySelector('html')\n    if (html) {\n      html.style.marginBottom = ''\n    }\n  }\n</script>\n\n<section>\n  {#if devToolsExpanded}\n    <FloatingDock onClose={handleFloatingDockClose} />\n  {:else}\n    <FloatingBtn on:click={handleFloatingBtnClick} {buttonPosition} />\n  {/if}\n</section>\n\n<style lang=\"scss\">\n  * {\n    --font-sans: Helvetica Neue, Calibri Light, Roboto, sans-serif;\n    --font-small: 11px;\n    --font-medium: 13px;\n    --font-large: 16px;\n    --height-tabs-menu: 48px;\n    --color-black: #222;\n    --color-blue-bg: #363755;\n    --color-blue-light: #85d9ef;\n    /* --color-green-text: #b8e248; */\n    --color-gray-light: #d3d3d9;\n    --color-green: green; // diff inserted\n    --color-green-light: #87cc86; // diff deleted color\n    --color-purple-dark: rgb(80, 68, 93); // list darker bg\n    --color-purple: rgb(96, 76, 104); // borders in eg lists\n    --color-purple-light: rgb(99, 99, 123); // list text color\n    --color-red: #d66363; // diff deleted\n    --color-red-gray: rgb(187, 145, 163); // h2 color\n    --color-red-light: rgb(255, 162, 177);\n    --color-yellow: #eaea37; // diff updated\n    --color-white: #fff;\n  }\n  :root {\n    --tree-view-base00: #363755;\n    --tree-view-base01: #604d49;\n    --tree-view-base02: #6d5a55;\n    --tree-view-base03: #d1929b;\n    --tree-view-base04: #b79f8d;\n    --tree-view-base05: #f9f8f2;\n    --tree-view-base06: #f7f4f1;\n    --tree-view-base07: #faf8f5;\n    --tree-view-base08: #fa3e7e;\n    --tree-view-base09: #fd993c;\n    --tree-view-base0A: #f6bf81;\n    --tree-view-base0B: #b8e248;\n    --tree-view-base0C: #b4efe4;\n    --tree-view-base0D: #85d9ef;\n    --tree-view-base0E: #be87ff;\n    --tree-view-base0F: #d6724c;\n  }\n  section {\n    font-family: var(--font-sans);\n    font-size: var(--font-medium);\n  }\n</style>\n","import type { EditorView } from 'prosemirror-view'\nimport type { Transaction } from 'prosemirror-state'\n\nimport { appendNewHistoryEntry } from '$stores/stateHistory'\n\nlet active = false, resetDispatch: (() => void) | undefined = undefined\n\nexport function subscribeToDispatchTransaction(view: EditorView) : Promise<void> {\n  active = true\n  // Use timeout to make sure other hooks don't interfere with our patching of dispatchTransaction\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resetDispatch && resetDispatch()\n      const oldDispatchFn = (view.someProp('dispatchTransaction') || view.dispatch).bind(view)\n      view.setProps({\n        dispatchTransaction: (tr: Transaction) => {\n          const stateBeforeDispatch = view.state\n          oldDispatchFn(tr)\n          if (active) {\n            appendNewHistoryEntry(tr, view.state, stateBeforeDispatch)\n          }\n        }\n      })\n      resetDispatch = () => view.setProps({ dispatchTransaction: oldDispatchFn })\n      resolve()\n    }, 1)\n  })\n}\n\nexport function unsubscribeDispatchTransaction() {\n  active = false\n  resetDispatch && resetDispatch()\n  resetDispatch = undefined\n}\n","import type { Transaction } from 'prosemirror-state'\nimport type { EditorView } from 'prosemirror-view'\nimport DevTools from './components/DevTools.svelte'\nimport {\n  subscribeToDispatchTransaction,\n  unsubscribeDispatchTransaction\n} from './history-and-diff/subscribeToTransactions'\nimport { resetHistory } from './stores/stateHistory'\n\nimport { DevToolsOpts } from './types'\nimport type { Plugin } from './typings/pm'\n\ndeclare global {\n  interface Window {\n    applyDevTools: typeof applyDevTools\n    editorView?: EditorView\n    _node?: any\n    _doc?: { [key: string]: any }\n    _tr?: Transaction\n    _plugin?: [Plugin, any]\n  }\n}\n\nconst DEVTOOLS_CLASS_NAME = '__prosemirror-dev-toolkit__'\n\ntry {\n  // Make the dev tools available globally for some scripting shenanigans\n  if (typeof window !== 'undefined') window.applyDevTools = applyDevTools\n} catch (err) {}\n\nfunction createOrFindPlace() {\n  let place: HTMLElement | null = document.querySelector(`.${DEVTOOLS_CLASS_NAME}`)\n\n  if (!place) {\n    place = document.createElement('div')\n    place.className = DEVTOOLS_CLASS_NAME\n    document.body.appendChild(place)\n  }\n\n  return place\n}\n\nlet removeCallback: (() => void) | undefined\n\nexport function applyDevTools(view: EditorView, opts: DevToolsOpts = {}) {\n  const place = createOrFindPlace()\n\n  removeDevTools()\n\n  const comp = new DevTools({\n    target: place,\n    props: {\n      view,\n      ...opts\n    }\n  })\n  try {\n    // Make the editor view available since it might be handy for quick debugging\n    if (typeof window !== 'undefined') window.editorView = view\n  } catch (err) {}\n\n  // Bind the component's life-cycle to the editorView to automatically unmount the devTools\n  const oldDestroyFn = view.destroy.bind(view)\n  view.destroy = () => {\n    // DevTools must always be removed before view as the resetDispatch requires view to be still present\n    removeDevTools()\n    oldDestroyFn()\n  }\n\n  removeCallback = () => {\n    resetHistory()\n    unsubscribeDispatchTransaction()\n    // TODO add test to check no \"Component already destroyed\" warnings appear\n    comp.$destroy()\n  }\n  return subscribeToDispatchTransaction(view)\n}\n\nexport function removeDevTools() {\n  removeCallback && removeCallback()\n  removeCallback = undefined\n}\n"],"names":["noop","assign","tar","src","k","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","subscribe","store","callbacks","unsub","unsubscribe","get_store_value","value","_","component_subscribe","component","callback","$$","on_destroy","push","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","slice","get_slot_changes","dirty","lets","undefined","merged","len","Math","max","length","i","update_slot_base","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","p","get_all_dirty_from_scope","exclude_internal_props","props","result","compute_rest_props","keys","rest","Set","has","null_to_empty","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","d","element","name","document","createElement","svg_element","createElementNS","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","set_attributes","attributes","descriptors","getOwnPropertyDescriptors","__proto__","key","style","cssText","set","xlink_attr","setAttributeNS","set_data","wholeText","toggle_class","toggle","classList","current_component","set_current_component","get_current_component","Error","onMount","on_mount","setContext","context","getContext","get","bubble","type","call","this","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","flush","update","pop","add","clear","fragment","before_update","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","create_component","mount_component","customElement","m","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","append_styles","parent_component","bound","on_disconnect","Map","skip_bound","root","ready","ret","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","$on","index","indexOf","splice","$set","$$props","obj","$$set","val","setCtx","getCtx","styleInject","css","ref","insertAt","head","getElementsByTagName","firstChild","styleSheet","buttonPosition","subscriber_queue","writable","start","stop","subscribers","new_value","run_queue","subscriber","invalidate","size","derived","stores","initial_value","single","isArray","stores_array","auto","inited","values","pending","cleanup","sync","unsubscribers","snapshots","selectedSnapshot","previousEditorState","persisted","window","localStorage","getItem","parsed","JSON","parse","err","console","error","setEditorDoc","view","doc","newState","getPrototypeOf","state","constructor","schema","plugins","nodeFromJSON","updateState","updateSnapshot","snapshot","s","timestamp","exportSnapshot","file","Blob","stringify","href","URL","createObjectURL","download","click","deleteSnapshot","selected","setItem","active","onClickTab","html","prettyPrint","html_source","multi_parser","indent_size","indent_character","max_char","brace_style","unformatted","indent_char","Infinity","pos","token","current_mode","tags","parent","parentcount","parent1","tag_type","token_text","last_token","last_text","token_type","Utils","whitespace","split","single_token","extra_liners","in_array","what","arr","get_content","input_char","content","input","charAt","join","line_char_count","indent_level","indent_string","get_contents_to","reg_match","RegExp","lastIndex","reg_array","exec","end_script","substring","record_tag","tag","retrieve_tag","temp_parent","get_tag","tag_start","tag_end","get_unformatted","print_newline","tag_index","tag_complete","tag_check","toLowerCase","comment","unindent","output","delimiter","orig_tag","get_token","substr","get_full_indent","level","printer","js_source","ignore","print_token","indent","t","tag_name","match","tag_extracted_from_last_output","_beautifier","js_beautify","css_beautify","indent_scripts","script_indent_level","indentation","replace","_level","reindent","exports","chalk","hasOwnProperty","_typeof","Symbol","iterator","prototype","classCallCheck","Constructor","TypeError","createClass","defineProperties","descriptor","enumerable","configurable","defineProperty","protoProps","staticProps","object","property","receiver","Function","desc","getOwnPropertyDescriptor","getter","inherits","subClass","superClass","setPrototypeOf","possibleConstructorReturn","self","ReferenceError","slicedToArray","sliceIterator","_arr","_n","_d","_e","_s","_i","next","done","toConsumableArray","arr2","Processor","selfOptions","pipes","_options","pipeArg","pipe","processor","nextPipe","lastPipe","lastContext","nextAfterChildren","process","hasResult","Pipe","filters","debug","log","filterName","exiting","resultCheck","msg","_filters","apply","arguments","_filters2","unshift","f","params","should","noResult","Context","child","childName","cloneRegExp","re","regexMatch","toString","clone","arg","Date","getTime","cloned","DiffContext","_Context","left","right","_this","cloneDiffValues","clone$$1","setResult","PatchContext","delta","ReverseContext","isArray$1","diffFilter","leftType","rightType","leftIsArray","rightIsArray","exit","patchFilter","nested","regexArgs","reverseFilter","collectChildrenDiffFilter","_t","objectsDiffFilter","propertyFilter","patchFilter$1","collectChildrenPatchFilter","reverseFilter$1","collectChildrenReverseFilter","defaultMatch","array1","array2","index1","index2","lengthMatrix","len1","len2","x","y","matrix","backtrack","subsequence","sequence","indices1","indices2","lcs","innerContext","ARRAY_MOVE","isArray$2","arrayIndexOf","array","item","arraysHaveMatchByRef","val1","val2","matchItems","value1","value2","objectHash","matchByPosition","hash1","hash2","hashCache1","hashCache2","diffFilter$1","matchContext","commonHead","commonTail","trimmed1","trimmed2","seq","removedItems","detectMove","arrays","includeValueOnMove","removedItemsLength","indexOnArray2","isMove","removeItemIndex1","compare","numerically","numericallyBy","patchFilter$2","toRemove","toInsert","toModify","parseInt","sort","indexDiff","removedValue","toInsertLength","insertion","toModifyLength","modification","collectChildrenPatchFilter$1","reverseFilter$2","newName","reverseArrayDeltaIndex","itemDelta","reverseIndex","deltaIndex","deltaItem","moveFromIndex","moveToIndex","collectChildrenReverseFilter$1","diffFilter$2","createCommonjsModule","module","diffMatchPatch","diff_match_patch","Diff_Timeout","Diff_EditCost","Match_Threshold","Match_Distance","Patch_DeleteThreshold","Patch_Margin","Match_MaxBits","DIFF_DELETE","DIFF_INSERT","DIFF_EQUAL","diff_main","text1","text2","opt_checklines","opt_deadline","Number","MAX_VALUE","deadline","checklines","commonlength","diff_commonPrefix","commonprefix","diff_commonSuffix","commonsuffix","diffs","diff_compute_","diff_cleanupMerge","longtext","shorttext","hm","diff_halfMatch_","text1_a","text1_b","text2_a","text2_b","mid_common","diffs_a","diffs_b","concat","diff_lineMode_","diff_bisect_","diff_linesToChars_","chars1","chars2","linearray","lineArray","diff_charsToLines_","diff_cleanupSemantic","pointer","count_delete","count_insert","text_delete","text_insert","j","text1_length","text2_length","max_d","ceil","v_offset","v_length","v1","v2","front","k1start","k1end","k2start","k2end","k1","k1_offset","y1","x1","k2_offset","x2","diff_bisectSplit_","k2","y2","text1a","text2a","text1b","text2b","diffsb","lineHash","diff_linesToCharsMunge_","chars","lineStart","lineEnd","lineArrayLength","line","String","fromCharCode","charCodeAt","pointermin","pointermax","min","pointermid","pointerstart","floor","pointerend","diff_commonOverlap_","text_length","best","pattern","found","dmp","diff_halfMatchI_","best_longtext_a","best_longtext_b","best_shorttext_a","best_shorttext_b","seed","best_common","prefixLength","suffixLength","hm1","hm2","changes","equalities","equalitiesLength","lastequality","length_insertions1","length_deletions1","length_insertions2","length_deletions2","diff_cleanupSemanticLossless","deletion","overlap_length1","overlap_length2","diff_cleanupSemanticScore_","one","two","char1","char2","nonAlphaNumeric1","nonAlphaNumericRegex_","nonAlphaNumeric2","whitespace1","whitespaceRegex_","whitespace2","lineBreak1","linebreakRegex_","lineBreak2","blankLine1","blanklineEndRegex_","blankLine2","blanklineStartRegex_","equality1","edit","equality2","commonOffset","commonString","bestEquality1","bestEdit","bestEquality2","bestScore","score","diff_cleanupEfficiency","pre_ins","pre_del","post_ins","post_del","diff_xIndex","loc","last_chars1","last_chars2","diff_prettyHtml","pattern_amp","pattern_lt","pattern_gt","pattern_para","op","diff_text1","diff_text2","diff_levenshtein","levenshtein","insertions","deletions","diff_toDelta","encodeURI","diff_fromDelta","diffsLength","tokens","param","decodeURI","ex","n","isNaN","match_main","match_bitap_","match_alphabet_","match_bitapScore_","e","accuracy","proximity","abs","score_threshold","best_loc","lastIndexOf","bin_min","bin_mid","matchmask","last_rd","bin_max","finish","rd","charMatch","patch_addContext_","patch","start2","length1","padding","prefix","suffix","start1","length2","patch_make","opt_b","opt_c","patches","patch_obj","patchDiffLength","char_count1","char_count2","prepatch_text","postpatch_text","diff_type","diff_text","patch_deepCopy","patchesCopy","patchCopy","patch_apply","nullPadding","patch_addPadding","patch_splitMax","results","start_loc","expected_loc","end_loc","mod","paddingLength","extraLength","patch_size","bigpatch","precontext","shift","postcontext","patch_toText","patch_fromText","textline","textPointer","patchHeader","sign","TEXT_DIFF","DEFAULT_MIN_LENGTH","cachedDiffPatch","getDiffMatchPatch","required","diff_match_patch_not_found","diff","txt1","txt2","_patch","textPatchFailed","diffFilter$3","minLength","textDiff","diffMatchPatch$$1","patchFilter$3","textDeltaReverse","lines","lineTmp","header","headerRegex","reverseFilter$3","DiffPatcher","shouldHaveResult","_processor","reverse","isArray$3","getObjectKeys","names","trimUnderscore","str","arrayKeyToSortNumber","arrayKeyComparer","key1","key2","BaseFormatter","prepareContext","recurse","finalize","buffer","out","_buffer","deltaType","_ref","leftKey","movedFrom","isLast","leftValue","getDeltaType","nodeType","nodeBegin","rootBegin","typeFormattterNotFound","typeFormattterErrorFormatter","stack","nodeEnd","rootEnd","forEachDeltaKey","arrayKeys","moveDestinations","includeMoveDestinations","lineOutput","pieces","location","chr","pieceIndex","piecesLength","piece","pieceOutput","base","freeze","default","HtmlFormatter","_BaseFormatter","htmlEscape","parseTextDiff","nodeClass","hasArrows","adjustArrows","formatValue","formatDeltaChildren","formatTextDiffString","replacements","nodeArg","getElementText","textContent","innerText","eachChildren","_ref2","el","query","elems","querySelectorAll","eachByQuery","_ref3","arrowParent","svg","path","display","destination","querySelector","container","destinationElem","distance","offsetTop","top","curve","round","showUnchanged","show","delay","body","classes","showing","hiding","visible","hidden","list","remove","setTimeout","intervalId","setInterval","clearInterval","hideUnchanged","defaultInstance","format","AnnotatedFormatter","levels","indentLevel","indentPad","row","json","htmlNote","wrapPropertyName","deltaAnnotations","added","formatLegend","modified","deleted","moved","textdiff","formatAnyChange","annotator","format_added","format_modified","format_deleted","format_moved","format_textdiff","defaultInstance$1","format$1","annotated","OPERATIONS","move","JSONFormatter","pushCurrentOp","currentPath","pushMoveOp","to","toPath","last","sortBy","pred","compareByIndexDesc","indexA","indexB","lastA","lastB","opsByDescendingOrder","removeOps","splitA","splitB","partitionOps","initArr","position","reduce","acc","isMoveOp","isRemoveOp","_ref4","reorderOps","_partitionOps","_partitionOps2","moveOps","removedOps","restOps","removeOpsReverse","defaultInstance$2","format$2","jsonpatch","chalkColor","_len","args","_key","colors","movedestination","unchanged","textDiffLine","ConsoleFormatter","outLine","_len2","_key2","color","pushColor","popColor","defaultInstance$3","format$3","log$1","console$1","dateReviver","parts","UTC","defaultInstance$4","unpatch","clone$1","formatters","factory","require$$0","diffPatcher","inputA","inputB","addedProperties","addPropertiesToTransaction","tr","buildSelection","selection","pad","num","formatTimestamp","date","getHours","getMinutes","getSeconds","getMilliseconds","regexp","highlightHtmlString","stateHistory","shownHistoryGroups","latestEntry","appendNewHistoryEntry","stateBeforeDispatch","entryMap","prevGroup","newEntry","oldEntry","prevState","contentDiff","toJSON","selectionDiff","id","random","time","timeStr","selectionHtml","createHistoryEntry","topEntryId","isGroup","newGroup","entryIds","expanded","resetHistory","defaultProperties","resolvedPosProperties","resolvedPosSubProperties","createSelection","createFullSelection","includes","additionalProperties","subKey","createNode","depth","collapsed","getValueType","parentId","circularOfId","recurseObjectProperties","ensureNotCollapsed","treeMap","oldTreeMap","iteratedValues","recomputeExpandNode","opts","_a","omitKeys","maxDepth","oldNode","shouldExpandNode","stopCircularRecursion","isCircularNode","existingNodeWithValue","shouldRecurseChildren","mappedChildren","mapChildren","v","entries","getChildren","idx","createTreeStore","propsStore","defaultRootNode","tree","newTree","newTreeMap","iterated","getNode","toggleCollapse","warn","updatedNode","recursionOpts","expandNodeChildren","previouslyIterated","nodeWithUpdatedChildren","expandAllNodesToNode","updated","recurseNodeUpwards","showLogButton","showCopyButton","treeStore","rootElementStore","hasChildren","valueComponent","$props","info","_node","navigator","clipboard","writeText","$rootElementStore","scrollIntoView","class","theme","valueFormatter","rootElement","defaultRecursionOpts","initialProps","setProps","newProps","customFormat","toISOString","createPropsStore","createRootElementStore","newRecursionOpts","recomputeTree","setProperty","rootNode","updates","to_null_out","accounted_for","formatDocNodeValue","nodeSize","childCount","$from","storedMarks","mark","marks","$head","$anchor","activeMarks","mapSelectionDeltaChildren","_val","_parent","mapDocDeltaChildren","transformed","topEntry","listItems","selectedId","onSelect","group","groupIdx","subEntry","getValueString","raw","defaultFormatter","DiffValue","selectedKey","nodeColors","buildColors","safeIndex","total","quotient","calculateSafeIndex","onUpdate","onView","onRestore","onExport","onDelete","handleSnapDoubleclick","snap","handleClickView","handleRestoreClick","handleExportClick","handleClickDelete","toggleViewSnapshot","important","snapshotName","now","fileinput","resetDispatch","applyDevTools","removeCallback","place","className","createOrFindPlace","removeDevTools","comp","DevTools","editorView","oldDestroyFn","destroy","bind","oldDispatchFn","someProp","dispatch","dispatchTransaction","subscribeToDispatchTransaction"],"mappings":"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"}